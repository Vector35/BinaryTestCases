(dp0
S'test_function_can_return'
p1
(lp2
S'_main SymbolType.DataSymbol 0x1e5bL True'
p3
aS'cont SymbolType.DataSymbol 0x1f4fL True'
p4
aS'hang SymbolType.DataSymbol 0x1ff4L False'
p5
aS'addfunc SymbolType.DataSymbol 0x1ff7L True'
p6
asS'test_function_stack'
p7
(lp8
S"['var_4', 'var_4_1', '__return_addr', 'testautovar']"
p9
aS'<undetermined>'
p10
ag10
aS'None'
p11
aS"['var_8', 'var_4', '__return_addr', 'testautovar']"
p12
aS'<return address>'
p13
ag13
aS'None'
p14
aS"['__return_addr', 'testautovar']"
p15
ag10
ag10
aS'None'
p16
aS"['__return_addr', 'testautovar', 'arg2']"
p17
ag10
ag10
aS'None'
p18
asS'test_strings'
p19
(lp20
S'__PAGEZERO StringType.AsciiString 0x1024L'
p21
aS'__TEXT StringType.AsciiString 0x105cL'
p22
aS'__text StringType.AsciiString 0x108cL'
p23
aS'__TEXT StringType.AsciiString 0x109cL'
p24
aS'__DATA StringType.AsciiString 0x10d8L'
p25
aS'__data StringType.AsciiString 0x1108L'
p26
aS'__DATA StringType.AsciiString 0x1118L'
p27
aS'__LINKEDIT StringType.AsciiString 0x1154L'
p28
aS'/usr/lib/dyld StringType.AsciiString 0x1228L'
p29
aS'/usr/lib/libSystem.B.dylib StringType.AsciiString 0x12a0L'
p30
aS'_mh_execute_header StringType.AsciiString 0x3007L'
p31
aS'!main StringType.AsciiString 0x301aL'
p32
aS'__mh_execute_header StringType.AsciiString 0x30feL'
p33
aS'_main StringType.AsciiString 0x3112L'
p34
aS'dyld_stub_binder StringType.AsciiString 0x3118L'
p35
aS'geteip StringType.AsciiString 0x3129L'
p36
aS'jumptable StringType.AsciiString 0x3130L'
p37
aS'zerojump StringType.AsciiString 0x313aL'
p38
aS'onejump StringType.AsciiString 0x3143L'
p39
aS'cont StringType.AsciiString 0x314bL'
p40
aS'nohang StringType.AsciiString 0x3150L'
p41
aS'nextcheck StringType.AsciiString 0x3157L'
p42
aS'conddone StringType.AsciiString 0x3161L'
p43
aS'overflow StringType.AsciiString 0x316aL'
p44
aS'syscallexit StringType.AsciiString 0x3173L'
p45
aS'badjump StringType.AsciiString 0x317fL'
p46
aS'hang StringType.AsciiString 0x3187L'
p47
aS'addfunc StringType.AsciiString 0x318cL'
p48
aS'_data StringType.AsciiString 0x3194L'
p49
asS'test_function_low_il_basic_blocks'
p50
(lp51
S'0x0L 0x48L 2'
p52
aS'0x48L 0x4aL 0'
p53
aS'0x4aL 0x4dL 1'
p54
aS'0x4dL 0x4fL 0'
p55
aS'0x0L 0x8L 2'
p56
aS'0x8L 0x9L 2'
p57
aS'0x9L 0xbL 0'
p58
aS'0xbL 0x10L 2'
p59
aS'0x10L 0x11L 2'
p60
aS'0x11L 0x14L 2'
p61
aS'0x14L 0x15L 0'
p62
aS'0x15L 0x16L 2'
p63
aS'0x16L 0x17L 1'
p64
aS'0x17L 0x1cL 0'
p65
aS'0x1cL 0x1eL 0'
p66
aS'0x1eL 0x1fL 2'
p67
aS'0x1fL 0x20L 2'
p68
aS'0x20L 0x21L 2'
p69
aS'0x21L 0x22L 2'
p70
aS'0x22L 0x23L 2'
p71
aS'0x23L 0x24L 2'
p72
aS'0x24L 0x25L 2'
p73
aS'0x25L 0x27L 1'
p74
aS'0x0L 0x1L 0'
p75
aS'0x0L 0x3L 0'
p76
asS'test_functions_attributes'
p77
(lp78
S"['var_4', 'var_4_1', 'testautovar', 'eax', 'eax_1', 'eax_2', 'eax_3', 'eax_4', 'eax_5', 'eax_6', 'eax_7', 'eax_8', 'eax_9', 'eax_10', 'eax_11', 'eax_12', 'eax_13', 'eax_14', 'eax_15', 'eax_16', 'eax_17', 'eax_18', 'eax_19', 'eax_20', 'eax_21', 'eax_22', 'eax_23', 'eax_24', 'eax_25', 'eax_26', 'eax_27', 'eax_28', 'eax_29', 'eax_30', 'eax_31', 'eax_32', 'eax_33', 'eax_34', 'eax_35', 'ecx', 'ecx_1', 'ecx_2', 'ecx_3', 'edx', 'edx_1', 'edx_2', 'edx_3', 'edx_4', 'edx_5', 'edx_6', 'edx_7', 'ebx', 'temp0', 'temp0_1', 'temp1', 'temp1_1', 'temp2', 'flag46', 'flag48', 'flag51', 'flag54', 'flag57', 'flag60', 'flag63']"
p79
aS'[<branch x86:0x1f39 -> x86:0x1f43>]'
p80
aS'{}'
p81
aI1
aS"['eax', 'ecx', 'edx', 'ebx']"
p82
aS'False'
p83
aS'True'
p84
aI85
ag10
aS'testcomment _main'
p85
ag83
ag83
aS'eax = [esp + 4 {testautovar}].d'
p86
aS'[]'
p87
aS"['esp']"
p88
aS"['eax']"
p89
aS'[<operand 1 ref to testautovar>]'
p90
aS'[<constant 0x4 size 4>]'
p91
aS'eax = [esp + 4].d'
p92
aS'[]'
p93
aS'[]'
p94
aS'<graph of <func: x86@0x1e5b>>'
p95
aS'[]'
p96
aS'[]'
p97
aS'<block: x86@0x1e5b-0x1f2d>'
p98
aS'<color: #ff00ff>'
p99
aS'[<0x1e5b: int32_t _main(int32_t testautovar)>]'
p100
aS"['var_8', 'var_4', 'testautovar', 'arg1', 'eax', 'eax_1', 'eax_2', 'eax_3', 'eax_4', 'eax_5', 'temp0', 'o']"
p101
aS'[]'
p102
aS'{}'
p103
aI1
aS"['eax', 'ecx', 'edx']"
p104
ag83
ag84
aI79
ag10
aS'testcomment cont'
p105
ag83
ag83
aS'[0x2000].d = eax'
p106
aS'[]'
p107
aS"['eax']"
p108
aS'[]'
p109
aS'[]'
p110
aS'[<constant pointer 0x2000>]'
p111
aS'[0x2000].d = eax'
p112
aS'[]'
p113
aS'[]'
p114
aS'<graph of <func: x86@0x1f4f>>'
p115
aS'[]'
p116
aS'[]'
p117
aS'<block: x86@0x1f4f-0x1f71>'
p118
aS'<color: #ff00ff>'
p119
aS'[<0x1f4f: int32_t __fastcall cont(int32_t arg1)>]'
p120
aS"['testautovar']"
p121
aS'[]'
p122
aS'{}'
p123
aI1
aS'[]'
p124
ag83
ag84
aI2
ag10
aS'testcomment hang'
p125
ag83
ag83
aS'breakpoint'
p126
aS'[]'
p127
aS'[]'
p128
aS'[]'
p129
aS'[]'
p130
aS'[]'
p131
aS'breakpoint'
p132
aS'[]'
p133
aS'[]'
p134
aS'<graph of <func: x86@0x1ff4>>'
p135
aS'[]'
p136
aS'[]'
p137
aS'<block: x86@0x1ff4-0x1ff5>'
p138
aS'<color: #ff00ff>'
p139
aS'[<0x1ff4: int32_t hang() __noreturn>]'
p140
aS"['testautovar', 'arg2', 'eax', 'eax_1']"
p141
aS'[]'
p142
aS'{}'
p143
aI1
aS"['eax']"
p144
ag83
ag84
aI4
ag10
aS'testcomment addfunc'
p145
ag83
ag83
aS'eax = [esp + 4 {testautovar}].d'
p146
aS'[]'
p147
aS"['esp']"
p148
aS"['eax']"
p149
aS'[<operand 1 ref to testautovar>]'
p150
aS'[<constant 0x4 size 4>]'
p151
aS'eax = [esp + 4].d'
p152
aS'[]'
p153
aS'[]'
p154
aS'<graph of <func: x86@0x1ff7>>'
p155
aS'[]'
p156
aS'[]'
p157
aS'<block: x86@0x1ff7-0x2000>'
p158
aS'<color: #ff00ff>'
p159
aS'[<0x1ff7: int32_t addfunc(int32_t testautovar, int32_t arg2)>]'
p160
asS'test_function_starts'
p161
(lp162
S'0x1e5bL'
p163
aS'0x1f4fL'
p164
aS'0x1ff4L'
p165
aS'0x1ff7L'
p166
asS'test_function_llil'
p167
(lp168
S'<block: x86@0x0-0x48>'
p169
aS'<block: x86@0x48-0x4a>'
p170
aS'<block: x86@0x4a-0x4d>'
p171
aS'<block: x86@0x4d-0x4f>'
p172
aS'eax = [esp + 4 {arg1}].d'
p173
aS'edx:eax = sx.q(eax)'
p174
aS'flag:d = 1'
p175
aS'ecx = [0x2000].d'
p176
aS'ecx = ecx + 1'
p177
aS'[0x2000].d = ecx'
p178
aS'push(ecx)'
p179
aS'eax = pop'
p180
aS'eax = eax + 0xa'
p181
aS'[0x2000].d = [0x2000].d + eax'
p182
aS'push(0x1e80)'
p183
aS'ebx = pop'
p184
aS'temp2.d = eax'
p185
aS'eax = temp2.d + ebx'
p186
aS'flag:c = temp2.d + ebx u< temp2.d'
p187
aS'flag:c = flag:c ^ 0x1'
p188
aS'push(flagbit.d(flag:flag63, 0xb) | (flagbit.d(flag:flag60, 0xa) | (flagbit.d(flag:flag57, 7) | (flagbit.d(flag:flag54, 6) | (flagbit.d(flag:flag51, 4) | (flagbit.d(flag:flag48, 2) | flagbit.d(flag:flag46, 0)))))))'
p189
aS'eax = pop'
p190
aS'[0x2000].d = [0x2000].d + eax'
p191
aS'flag:c = 1'
p192
aS'eax = adc.d(eax, eax, flag:c)'
p193
aS'ebx = eax'
p194
aS'flag:c = 1'
p195
aS'eax = sbb.d(eax, eax, flag:c)'
p196
aS'eax = eax - ebx'
p197
aS'eax = eax & 0xffff'
p198
aS'eax = eax | 0x5555'
p199
aS'eax = eax ^ 0x8888'
p200
aS'eax = eax << 0x10'
p201
aS'[0x2000].d = [0x2000].d + eax'
p202
aS'eax = eax s>> 4'
p203
aS'eax = eax u>> 8'
p204
aS'eax = rol.d(eax, 0x10)'
p205
aS'[0x2000].d = [0x2000].d + eax'
p206
aS'eax = ror.d(eax, 8)'
p207
aS'flag:c = 0'
p208
aS'eax = rrc.d(eax, 1, flag:c)'
p209
aS'flag:c = 1'
p210
aS'eax = rlc.d(eax, 1, flag:c)'
p211
aS'[0x2000].d = [0x2000].d + eax'
p212
aS'al = 0x10'
p213
aS'al = al + ah'
p214
aS'[0x2000].d = [0x2000].d + eax'
p215
aS'eax = eax * eax'
p216
aS'ecx = 5'
p217
aS'edx:eax = mulu.dp.d(eax, ecx)'
p218
aS'ecx = edx'
p219
aS'edx:eax = muls.dp.d(eax, ecx)'
p220
aS'ecx = 9'
p221
aS'temp0.d = divs.dp.d(edx:eax, ecx)'
p222
aS'temp1.d = mods.dp.d(edx:eax, ecx)'
p223
aS'eax = temp0.d'
p224
aS'edx = temp1.d'
p225
aS'[0x2000].d = [0x2000].d + edx'
p226
aS'edx:eax = sx.q(eax)'
p227
aS'ecx = 3'
p228
aS'temp0.d = divu.dp.d(edx:eax, ecx)'
p229
aS'temp1.d = modu.dp.d(edx:eax, ecx)'
p230
aS'eax = temp0.d'
p231
aS'edx = temp1.d'
p232
aS'[0x2000].d = [0x2000].d + edx'
p233
aS'[0x2000].d = [0x2000].d + eax'
p234
aS'eax = neg.d(eax)'
p235
aS'eax = not.d(eax)'
p236
aS'[0x2000].d = [0x2000].d + eax'
p237
aS'eax = sx.d(ax)'
p238
aS'edx = zx.d(dx)'
p239
aS'eax = eax + edx'
p240
aS'[0x2000].d = [0x2000].d + eax'
p241
aS'eax = [0x2000].d'
p242
aS'eax = eax & 0x10'
p243
aS'if (eax == 0) then 72 @ 0x1fed else 74 @ 0x1f2d'
p244
aS'eax = [0x2000].d'
p245
aS'jump(eax)'
p246
aS'eax = eax & 0x1'
p247
aS'eax = [(eax << 2) + 0x1f3b].d'
p248
aS'jump(eax => 77 @ 0x1f43)'
p249
aS'eax = eax + 1'
p250
aS'<return> tailcall(0x1f4f)'
p251
aS'<block: x86@0x0-0x3c>'
p252
aS'<block: x86@0x3c-0x3e>'
p253
aS'<block: x86@0x3e-0x41>'
p254
aS'<block: x86@0x41-0x43>'
p255
aS'eax_35 = arg1'
p256
aS'edx:eax = sx.q(eax_35)'
p257
aS'ecx = [0x2000].d'
p258
aS'ecx_1 = ecx + 1'
p259
aS'[0x2000].d = ecx_1'
p260
aS'var_4 = ecx_1'
p261
aS'eax_1 = var_4'
p262
aS'eax_2 = eax_1 + 0xa'
p263
aS'[0x2000].d = [0x2000].d + eax_2'
p264
aS'temp2 = eax_2'
p265
aS'eax_3 = temp2 + 0x1e80'
p266
aS'var_4_1 = (flag63 ? 1 : 0 << 0xb) | ((flag60 ? 1 : 0 << 0xa) | ((flag57 ? 1 : 0 << 7) | ((flag54 ? 1 : 0 << 6) | ((flag51 ? 1 : 0 << 4) | ((flag48 ? 1 : 0 << 2) | (flag46 ? 1 : 0 << 0))))))'
p267
aS'eax_4 = var_4_1'
p268
aS'[0x2000].d = [0x2000].d + eax_4'
p269
aS'eax_5 = adc.d(eax_4, eax_4, true)'
p270
aS'ebx = eax_5'
p271
aS'eax_6 = sbb.d(eax_5, eax_5, true)'
p272
aS'eax_7 = eax_6 - ebx'
p273
aS'eax_8 = eax_7 & 0xffff'
p274
aS'eax_9 = eax_8 | 0x5555'
p275
aS'eax_10 = eax_9 ^ 0x8888'
p276
aS'eax_11 = eax_10 << 0x10'
p277
aS'[0x2000].d = [0x2000].d + eax_11'
p278
aS'eax_12 = eax_11 s>> 4'
p279
aS'eax_13 = eax_12 u>> 8'
p280
aS'eax_14 = rol.d(eax_13, 0x10)'
p281
aS'[0x2000].d = [0x2000].d + eax_14'
p282
aS'eax_15 = ror.d(eax_14, 8)'
p283
aS'eax_16 = rrc.d(eax_15, 1, false)'
p284
aS'eax_17 = rrc.d(eax_16, 1, true)'
p285
aS'[0x2000].d = [0x2000].d + eax_17'
p286
aS'eax_17.al = 0x10'
p287
aS'eax_17.al = eax_17.al + eax_17.ah'
p288
aS'[0x2000].d = [0x2000].d + eax_17'
p289
aS'eax_18 = eax_17 * eax_17'
p290
aS'edx_1:eax_19 = mulu.dp.d(eax_18, 5)'
p291
aS'ecx_2 = edx_1'
p292
aS'edx_2:eax_20 = muls.dp.d(eax_19, ecx_2)'
p293
aS'temp0 = divs.dp.d(edx_2:eax_20, 9)'
p294
aS'temp1 = mods.dp.d(edx_2:eax_20, 9)'
p295
aS'eax_21 = temp0'
p296
aS'edx_3 = temp1'
p297
aS'[0x2000].d = [0x2000].d + edx_3'
p298
aS'edx_4:eax_22 = sx.q(eax_21)'
p299
aS'temp0_1 = divu.dp.d(edx_4:eax_22, 3)'
p300
aS'temp1_1 = modu.dp.d(edx_4:eax_22, 3)'
p301
aS'eax_23 = temp0_1'
p302
aS'edx_5 = temp1_1'
p303
aS'[0x2000].d = [0x2000].d + edx_5'
p304
aS'[0x2000].d = [0x2000].d + eax_23'
p305
aS'eax_24 = neg.d(eax_23)'
p306
aS'eax_25 = not.d(eax_24)'
p307
aS'[0x2000].d = [0x2000].d + eax_25'
p308
aS'eax_26 = sx.d(eax_25.ax)'
p309
aS'edx_6 = zx.d(edx_5.dx)'
p310
aS'eax_27 = eax_26 + edx_6'
p311
aS'[0x2000].d = [0x2000].d + eax_27'
p312
aS'eax_28 = [0x2000].d'
p313
aS'eax_29 = eax_28 & 0x10'
p314
aS'if (eax_29 == 0) then 60 @ 0x1fed else 62 @ 0x1f2d'
p315
aS'eax_34 = [0x2000].d'
p316
aS'jump(eax_34)'
p317
aS'eax_30 = eax_29 & 1'
p318
aS'eax_31 = [(eax_30 << 2) + 0x1f3b].d'
p319
aS'jump(eax_31 => 65 @ 0x1f43)'
p320
aS'eax_32 = eax_31 + 1'
p321
aS'return 0x1f4f(eax_32) __tailcall'
p322
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'esp', '+', '0x4', ']'], 7771L)"
p323
aS"(['cdq', '     '], 7775L)"
p324
aS"(['std', '     '], 7776L)"
p325
aS"(['mov', '     ', 'ecx', ', ', 'dword ', '[', '0x2000', ']'], 7777L)"
p326
aS"(['inc', '     ', 'ecx'], 7783L)"
p327
aS"(['mov', '     ', 'dword ', '[', '0x2000', ']', ', ', 'ecx'], 7784L)"
p328
aS"(['push', '    ', 'ecx'], 7790L)"
p329
aS"(['pop', '     ', 'eax'], 7791L)"
p330
aS"(['add', '     ', 'eax', ', ', '0xa'], 7792L)"
p331
aS"(['add', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 7797L)"
p332
aS"(['call', '    ', '$+5'], 7803L)"
p333
aS"(['pop', '     ', 'ebx'], 7808L)"
p334
aS"(['add', '     ', 'eax', ', ', 'ebx'], 7809L)"
p335
aS"(['cmc', '     '], 7811L)"
p336
aS"(['pushfd', '  '], 7812L)"
p337
aS"(['pop', '     ', 'eax'], 7813L)"
p338
aS"(['add', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 7814L)"
p339
aS"(['stc', '     '], 7820L)"
p340
aS"(['adc', '     ', 'eax', ', ', 'eax'], 7821L)"
p341
aS"(['mov', '     ', 'ebx', ', ', 'eax'], 7823L)"
p342
aS"(['stc', '     '], 7825L)"
p343
aS"(['sbb', '     ', 'eax', ', ', 'eax'], 7826L)"
p344
aS"(['sub', '     ', 'eax', ', ', 'ebx'], 7828L)"
p345
aS"(['and', '     ', 'eax', ', ', '0xffff'], 7830L)"
p346
aS"(['or', '      ', 'eax', ', ', '0x5555'], 7835L)"
p347
aS"(['xor', '     ', 'eax', ', ', '0x8888'], 7840L)"
p348
aS"(['shl', '     ', 'eax', ', ', '0x10'], 7845L)"
p349
aS"(['add', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 7848L)"
p350
aS"(['sar', '     ', 'eax', ', ', '0x4'], 7854L)"
p351
aS"(['shr', '     ', 'eax', ', ', '0x8'], 7857L)"
p352
aS"(['rol', '     ', 'eax', ', ', '0x10'], 7860L)"
p353
aS"(['add', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 7863L)"
p354
aS"(['ror', '     ', 'eax', ', ', '0x8'], 7869L)"
p355
aS"(['clc', '     '], 7872L)"
p356
aS"(['rcr', '     ', 'eax', ', ', '0x1'], 7873L)"
p357
aS"(['stc', '     '], 7875L)"
p358
aS"(['rcl', '     ', 'eax', ', ', '0x1'], 7876L)"
p359
aS"(['add', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 7878L)"
p360
aS"(['mov', '     ', 'al', ', ', '0x10'], 7884L)"
p361
aS"(['add', '     ', 'al', ', ', 'ah'], 7886L)"
p362
aS"(['add', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 7888L)"
p363
aS"(['imul', '    ', 'eax', ', ', 'eax'], 7894L)"
p364
aS"(['mov', '     ', 'ecx', ', ', '0x5'], 7897L)"
p365
aS"(['mul', '     ', 'ecx'], 7902L)"
p366
aS"(['mov', '     ', 'ecx', ', ', 'edx'], 7904L)"
p367
aS"(['imul', '    ', 'ecx'], 7906L)"
p368
aS"(['mov', '     ', 'ecx', ', ', '0x9'], 7908L)"
p369
aS"(['idiv', '    ', 'ecx'], 7913L)"
p370
aS"(['add', '     ', 'dword ', '[', '0x2000', ']', ', ', 'edx'], 7915L)"
p371
aS"(['cdq', '     '], 7921L)"
p372
aS"(['mov', '     ', 'ecx', ', ', '0x3'], 7922L)"
p373
aS"(['div', '     ', 'ecx'], 7927L)"
p374
aS"(['add', '     ', 'dword ', '[', '0x2000', ']', ', ', 'edx'], 7929L)"
p375
aS"(['add', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 7935L)"
p376
aS"(['neg', '     ', 'eax'], 7941L)"
p377
aS"(['not', '     ', 'eax'], 7943L)"
p378
aS"(['add', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 7945L)"
p379
aS"(['movsx', '   ', 'eax', ', ', 'ax'], 7951L)"
p380
aS"(['movzx', '   ', 'edx', ', ', 'dx'], 7954L)"
p381
aS"(['add', '     ', 'eax', ', ', 'edx'], 7957L)"
p382
aS"(['add', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 7959L)"
p383
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', '0x2000', ']'], 7965L)"
p384
aS"(['and', '     ', 'eax', ', ', '0x10'], 7970L)"
p385
aS"(['je', '      ', '0x1fed'], 7975L)"
p386
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', '0x2000', ']'], 8173L)"
p387
aS"(['jmp', '     ', 'eax'], 8178L)"
p388
aS"(['and', '     ', 'eax', ', ', '0x1'], 7981L)"
p389
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'eax', '*4', '+', '0x1f3b', ']'], 7986L)"
p390
aS"(['jmp', '     ', 'eax'], 7993L)"
p391
aS"(['inc', '     ', 'eax'], 8003L)"
p392
aS"(['jmp', '     ', '0x1f4f'], 8004L)"
p393
aS'<block: x86@0x0-0x8>'
p394
aS'<block: x86@0x8-0x9>'
p395
aS'<block: x86@0x9-0xb>'
p396
aS'<block: x86@0xb-0x10>'
p397
aS'<block: x86@0x10-0x11>'
p398
aS'<block: x86@0x11-0x14>'
p399
aS'<block: x86@0x14-0x15>'
p400
aS'<block: x86@0x15-0x16>'
p401
aS'<block: x86@0x16-0x17>'
p402
aS'<block: x86@0x17-0x1c>'
p403
aS'<block: x86@0x1c-0x1e>'
p404
aS'<block: x86@0x1e-0x1f>'
p405
aS'<block: x86@0x1f-0x20>'
p406
aS'<block: x86@0x20-0x21>'
p407
aS'<block: x86@0x21-0x22>'
p408
aS'<block: x86@0x22-0x23>'
p409
aS'<block: x86@0x23-0x24>'
p410
aS'<block: x86@0x24-0x25>'
p411
aS'<block: x86@0x25-0x27>'
p412
aS'[0x2000].d = eax'
p413
aS'push(eax)'
p414
aS'push(5)'
p415
aS'call(0x1ff7)'
p416
aS'esp = esp + 8'
p417
aS'[0x2000].d = eax'
p418
aS'eax = eax & 0x80'
p419
aS'if (eax != 0) then 8 @ 0x1f7b else 9 @ 0x1f71'
p420
aS'if (eax == 5) then 11 @ 0x1fc2 else 16 @ 0x1f82'
p421
aS'call(0x1ff4)'
p422
aS'noreturn'
p423
aS'[0x2000].d = eax'
p424
aS'temp0.d = eax'
p425
aS'eax = temp0.d + 8'
p426
aS'flag:o = add_overflow(temp0.d, 8)'
p427
aS'if (not(flag:o)) then 17 @ 0x1fd0 else 20 @ 0x1fce'
p428
aS'if (eax != 8) then 21 @ 0x1f8e else 22 @ 0x1f84'
p429
aS'[0x2000].d = eax'
p430
aS'eax = eax & 0x1'
p431
aS'if (eax == 0) then 23 @ 0x1fdf else 28 @ 0x1fdc'
p432
aS'trap(6)'
p433
aS'if (eax s< 0xc) then 11 @ 0x1fc2 else 30 @ 0x1f95'
p434
aS'goto 11 @ 0x1fc2'
p435
aS'eax = 1'
p436
aS'push(0)'
p437
aS'push(eax)'
p438
aS'syscall'
p439
aS'<return> jump(pop)'
p440
aS'eax = 0'
p441
aS'<return> jump(pop)'
p442
aS'if (eax u< 0xe) then 11 @ 0x1fc2 else 31 @ 0x1f9c'
p443
aS'if (eax s<= 0x12) then 11 @ 0x1fc2 else 32 @ 0x1fa3'
p444
aS'if (eax u<= 0x16) then 11 @ 0x1fc2 else 33 @ 0x1faa'
p445
aS'if (eax s>= 0x28) then 11 @ 0x1fc2 else 34 @ 0x1fb1'
p446
aS'if (eax u>= 0x24) then 11 else 35 @ 0x1fb8'
p447
aS'if (eax s> 0x20) then 11 else 36 @ 0x1fbf'
p448
aS'if (eax u> 0x1b) then 11 else 37 @ 0x1fc1'
p449
aS'eax = eax + 1'
p450
aS'goto 11 @ 0x1fc2'
p451
aS'<block: x86@0x0-0x6>'
p452
aS'<block: x86@0x6-0x7>'
p453
aS'<block: x86@0x7-0x9>'
p454
aS'<block: x86@0x9-0xe>'
p455
aS'<block: x86@0xe-0xf>'
p456
aS'<block: x86@0xf-0x12>'
p457
aS'<block: x86@0x12-0x13>'
p458
aS'<block: x86@0x13-0x14>'
p459
aS'<block: x86@0x14-0x15>'
p460
aS'<block: x86@0x15-0x17>'
p461
aS'<block: x86@0x17-0x19>'
p462
aS'<block: x86@0x19-0x1a>'
p463
aS'<block: x86@0x1a-0x1b>'
p464
aS'<block: x86@0x1b-0x1c>'
p465
aS'<block: x86@0x1c-0x1d>'
p466
aS'<block: x86@0x1d-0x1e>'
p467
aS'<block: x86@0x1e-0x1f>'
p468
aS'<block: x86@0x1f-0x20>'
p469
aS'<block: x86@0x20-0x22>'
p470
aS'[0x2000].d = arg1'
p471
aS'var_4 = arg1'
p472
aS'eax = 0x1ff7(5, var_4)'
p473
aS'[0x2000].d = eax'
p474
aS'eax_1 = eax & 0x80'
p475
aS'if (eax_1 != 0) then 6 @ 0x1f7b else 7 @ 0x1f71'
p476
aS'if (eax_1 == 5) then 9 @ 0x1fc2 else 14 @ 0x1f82'
p477
aS'0x1ff4()'
p478
aS'noreturn'
p479
aS'[0x2000].d = eax_1'
p480
aS'temp0 = eax_1'
p481
aS'eax_2 = temp0 + 8'
p482
aS'o = add_overflow(temp0, 8)'
p483
aS'if (not(o)) then 15 @ 0x1fd0 else 18 @ 0x1fce'
p484
aS'if (eax_1 != 8) then 19 @ 0x1f8e else 20 @ 0x1f84'
p485
aS'[0x2000].d = eax_2'
p486
aS'eax_3 = eax_2 & 1'
p487
aS'if (eax_3 == 0) then 21 @ 0x1fea else 23 @ 0x1fdc'
p488
aS'trap(6)'
p489
aS'if (eax_1 s< 0xc) then 9 @ 0x1fc2 else 25 @ 0x1f95'
p490
aS'goto 9 @ 0x1fc2'
p491
aS'eax_5 = syscall(1, 0)'
p492
aS'return eax_5'
p493
aS'eax_4 = 0'
p494
aS'return 0'
p495
aS'if (eax_1 u< 0xe) then 9 @ 0x1fc2 else 26 @ 0x1f9c'
p496
aS'if (eax_1 s<= 0x12) then 9 @ 0x1fc2 else 27 @ 0x1fa3'
p497
aS'if (eax_1 u<= 0x16) then 9 @ 0x1fc2 else 28 @ 0x1faa'
p498
aS'if (eax_1 s>= 0x28) then 9 @ 0x1fc2 else 29 @ 0x1fb1'
p499
aS'if (eax_1 u>= 0x24) then 9 @ 0x1fc2 else 30 @ 0x1fb8'
p500
aS'if (eax_1 s> 0x20) then 9 @ 0x1fc2 else 31 @ 0x1fbf'
p501
aS'if (eax_1 u> 0x1b) then 9 @ 0x1fc2 else 32 @ 0x1fc1'
p502
aS'eax_1 = eax_1 + 1'
p503
aS'goto 9 @ 0x1fc2'
p504
aS"(['mov', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 8015L)"
p505
aS"(['push', '    ', 'eax'], 8020L)"
p506
aS"(['push', '    ', '0x5'], 8021L)"
p507
aS"(['call', '    ', '0x1ff7'], 8026L)"
p508
aS"(['add', '     ', 'esp', ', ', '0x8'], 8031L)"
p509
aS"(['mov', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 8037L)"
p510
aS"(['and', '     ', 'eax', ', ', '0x80'], 8042L)"
p511
aS"(['jne', '     ', '0x1f76'], 8047L)"
p512
aS"(['cmp', '     ', 'eax', ', ', '0x5'], 8054L)"
p513
aS"(['je', '      ', '0x1fc2'], 8059L)"
p514
aS"(['call', '    ', '0x1ff4'], 8049L)"
p515
aS"(['mov', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 8130L)"
p516
aS"(['add', '     ', 'eax', ', ', '0x8'], 8135L)"
p517
aS"(['jno', '     ', '0x1fd0'], 8140L)"
p518
aS"(['cmp', '     ', 'eax', ', ', '0x8'], 8061L)"
p519
aS"(['jne', '     ', '0x1f89'], 8066L)"
p520
aS"(['mov', '     ', 'dword ', '[', '0x2000', ']', ', ', 'eax'], 8144L)"
p521
aS"(['and', '     ', 'eax', ', ', '0x1'], 8149L)"
p522
aS"(['je', '      ', '0x1fdf'], 8154L)"
p523
aS"(['ud2', '     '], 8142L)"
p524
aS"(['cmp', '     ', 'eax', ', ', '0xc'], 8073L)"
p525
aS"(['jl', '      ', '0x1fc2'], 8078L)"
p526
aS"(['jmp', '     ', '0x1fc2'], 8068L)"
p527
aS"(['mov', '     ', 'eax', ', ', '0x1'], 8159L)"
p528
aS"(['push', '    ', '0x0'], 8164L)"
p529
aS"(['push', '    ', 'eax'], 8169L)"
p530
aS"(['int', '     ', '0x80'], 8170L)"
p531
aS"(['retn', '    '], 8172L)"
p532
aS"(['xor', '     ', 'eax', ', ', 'eax'], 8156L)"
p533
aS"(['retn', '    '], 8158L)"
p534
aS"(['cmp', '     ', 'eax', ', ', '0xe'], 8080L)"
p535
aS"(['jb', '      ', '0x1fc2'], 8085L)"
p536
aS"(['cmp', '     ', 'eax', ', ', '0x12'], 8087L)"
p537
aS"(['jle', '     ', '0x1fc2'], 8092L)"
p538
aS"(['cmp', '     ', 'eax', ', ', '0x16'], 8094L)"
p539
aS"(['jbe', '     ', '0x1fc2'], 8099L)"
p540
aS"(['cmp', '     ', 'eax', ', ', '0x28'], 8101L)"
p541
aS"(['jge', '     ', '0x1fc2'], 8106L)"
p542
aS"(['cmp', '     ', 'eax', ', ', '0x24'], 8108L)"
p543
aS"(['jae', '     ', '0x1fc2'], 8113L)"
p544
aS"(['cmp', '     ', 'eax', ', ', '0x20'], 8115L)"
p545
aS"(['jg', '      ', '0x1fc2'], 8120L)"
p546
aS"(['cmp', '     ', 'eax', ', ', '0x1b'], 8122L)"
p547
aS"(['ja', '      ', '0x1fc2'], 8127L)"
p548
aS"(['inc', '     ', 'eax'], 8129L)"
p549
aS'<block: x86@0x0-0x1>'
p550
aS'breakpoint'
p551
aS'<block: x86@0x0-0x1>'
p552
aS'breakpoint'
p553
aS"(['int3', '    '], 8180L)"
p554
aS'<block: x86@0x0-0x3>'
p555
aS'eax = [esp + 4 {arg1}].d'
p556
aS'eax = eax + [esp + 8 {arg2}].d'
p557
aS'<return> jump(pop)'
p558
aS'<block: x86@0x0-0x3>'
p559
aS'eax_1 = arg1'
p560
aS'eax = eax_1 + arg2'
p561
aS'return eax'
p562
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'esp', '+', '0x4', ']'], 8183L)"
p563
aS"(['add', '     ', 'eax', ', ', 'dword ', '[', 'esp', '+', '0x8', ']'], 8187L)"
p564
aS"(['retn', '    '], 8191L)"
p565
asS'test_low_il_ssa'
p566
(lp567
S'None'
p568
aS'[]'
p569
ag10
aS'None'
p570
aS'[]'
p571
ag10
aS'None'
p572
aS'[]'
p573
ag10
aS'None'
p574
aS'[]'
p575
ag10
aS'None'
p576
aS'[]'
p577
ag10
aS'None'
p578
aS'[]'
p579
ag10
aS'None'
p580
aS'[]'
p581
ag10
aS'None'
p582
aS'[]'
p583
ag10
aS'None'
p584
aS'[]'
p585
ag10
aS'None'
p586
aS'[]'
p587
ag10
aS'None'
p588
aS'[]'
p589
ag10
aS'None'
p590
aS'[]'
p591
ag10
aS'None'
p592
aS'[]'
p593
ag10
aS'None'
p594
aS'[]'
p595
ag10
aS'None'
p596
aS'[]'
p597
ag10
aS'None'
p598
aS'[]'
p599
ag10
aS'None'
p600
aS'[]'
p601
ag10
aS'None'
p602
aS'[]'
p603
ag10
aS'1'
p604
aS'[]'
p605
ag10
aS'11'
p606
aS'[13L, 14L]'
p607
ag10
aS'None'
p608
aS'[]'
p609
ag10
aS'None'
p610
aS'[]'
p611
ag10
aS'6'
p612
aS'[7L]'
p613
aS'<stack frame offset -0x4>'
p614
aS'None'
p615
aS'[]'
p616
ag10
aS'None'
p617
aS'[]'
p618
ag10
aS'None'
p619
aS'[]'
p620
ag10
aS'None'
p621
aS'[]'
p622
ag10
aS'None'
p623
aS'[]'
p624
ag10
aS'None'
p625
aS'[]'
p626
ag10
aS'None'
p627
aS'[]'
p628
ag10
aS'None'
p629
aS'[]'
p630
ag10
aS'None'
p631
aS'[]'
p632
ag10
aS'None'
p633
aS'[]'
p634
ag10
aS'None'
p635
aS'[]'
p636
ag10
aS'None'
p637
aS'[]'
p638
ag10
aS'None'
p639
aS'[]'
p640
ag10
aS'None'
p641
aS'[]'
p642
ag10
aS'None'
p643
aS'[]'
p644
ag10
aS'None'
p645
aS'[]'
p646
ag10
aS'None'
p647
aS'[]'
p648
ag10
aS'None'
p649
aS'[]'
p650
ag10
aS'None'
p651
aS'[]'
p652
ag10
aS'None'
p653
aS'[]'
p654
ag10
aS'None'
p655
aS'[]'
p656
ag10
aS'None'
p657
aS'[]'
p658
ag10
aS'None'
p659
aS'[]'
p660
ag10
aS'None'
p661
aS'[]'
p662
ag10
aS'0'
p663
aS'[1L]'
p664
ag10
aS'None'
p665
aS'[]'
p666
ag10
aS'None'
p667
aS'[]'
p668
ag10
aS'None'
p669
aS'[]'
p670
ag10
aS'None'
p671
aS'[]'
p672
ag10
aS'None'
p673
aS'[]'
p674
ag10
aS'None'
p675
aS'[]'
p676
ag10
aS'None'
p677
aS'[]'
p678
ag10
aS'None'
p679
aS'[]'
p680
ag10
aS'3'
p681
aS'[4L]'
p682
ag10
aS'None'
p683
aS'[]'
p684
ag10
aS'None'
p685
aS'[]'
p686
ag10
aS'None'
p687
aS'[]'
p688
ag10
aS'None'
p689
aS'[]'
p690
ag10
aS'None'
p691
aS'[]'
p692
ag10
aS'None'
p693
aS'[]'
p694
ag10
aS'None'
p695
aS'[]'
p696
ag10
aS'None'
p697
aS'[]'
p698
ag10
aS'[15L]'
p699
ag10
aS'[]'
p700
ag10
aS'[]'
p701
ag10
aS'[]'
p702
ag10
aS'[]'
p703
ag10
aS'[]'
p704
aS'<const 0x1>'
p705
aS'[]'
p706
ag10
aS'[]'
p707
ag10
aS'[]'
p708
ag10
aS'[]'
p709
ag10
aS'[]'
p710
ag10
aS'0'
p711
aS'0'
p712
aS'0'
p713
aS'0'
p714
aS'1'
p715
aS'1'
p716
aS'1'
p717
aS'1'
p718
aS'2'
p719
aS'2'
p720
aS'2'
p721
aS'2'
p722
aS'3'
p723
aS'3'
p724
aS'2'
p725
aS'3'
p726
aS'4'
p727
aS'4'
p728
aS'3'
p729
aS'4'
p730
aS'5'
p731
aS'5'
p732
aS'4'
p733
aS'5'
p734
aS'6'
p735
aS'6'
p736
aS'5'
p737
aS'6'
p738
aS'7'
p739
aS'8'
p740
aS'6'
p741
aS'8'
p742
aS'8'
p743
aS'10'
p744
aS'7'
p745
aS'10'
p746
aS'9'
p747
aS'11'
p748
aS'8'
p749
aS'11'
p750
aS'10'
p751
aS'12'
p752
aS'9'
p753
aS'12'
p754
aS'11'
p755
aS'14'
p756
aS'9'
p757
aS'14'
p758
aS'12'
p759
aS'16'
p760
aS'9'
p761
aS'16'
p762
aS'13'
p763
aS'17'
p764
aS'10'
p765
aS'17'
p766
aS'14'
p767
aS'18'
p768
aS'11'
p769
aS'18'
p770
aS'15'
p771
aS'19'
p772
aS'11'
p773
aS'19'
p774
aS'16'
p775
aS'20'
p776
aS'11'
p777
aS'20'
p778
aS'17'
p779
aS'22'
p780
aS'12'
p781
aS'22'
p782
aS'18'
p783
aS'24'
p784
aS'13'
p785
aS'24'
p786
aS'19'
p787
aS'25'
p788
aS'14'
p789
aS'25'
p790
aS'20'
p791
aS'26'
p792
aS'14'
p793
aS'26'
p794
aS'21'
p795
aS'27'
p796
aS'15'
p797
aS'27'
p798
aS'22'
p799
aS'28'
p800
aS'16'
p801
aS'28'
p802
aS'23'
p803
aS'29'
p804
aS'16'
p805
aS'29'
p806
aS'24'
p807
aS'30'
p808
aS'17'
p809
aS'30'
p810
aS'25'
p811
aS'31'
p812
aS'18'
p813
aS'31'
p814
aS'26'
p815
aS'32'
p816
aS'19'
p817
aS'32'
p818
aS'27'
p819
aS'33'
p820
aS'20'
p821
aS'33'
p822
aS'28'
p823
aS'34'
p824
aS'21'
p825
aS'34'
p826
aS'29'
p827
aS'35'
p828
aS'22'
p829
aS'35'
p830
aS'30'
p831
aS'36'
p832
aS'23'
p833
aS'36'
p834
aS'31'
p835
aS'37'
p836
aS'24'
p837
aS'37'
p838
aS'32'
p839
aS'38'
p840
aS'25'
p841
aS'38'
p842
aS'33'
p843
aS'39'
p844
aS'26'
p845
aS'39'
p846
aS'34'
p847
aS'40'
p848
aS'27'
p849
aS'40'
p850
aS'35'
p851
aS'41'
p852
aS'28'
p853
aS'41'
p854
aS'36'
p855
aS'42'
p856
aS'28'
p857
aS'42'
p858
aS'37'
p859
aS'43'
p860
aS'29'
p861
aS'43'
p862
aS'38'
p863
aS'44'
p864
aS'29'
p865
aS'44'
p866
aS'39'
p867
aS'45'
p868
aS'30'
p869
aS'45'
p870
aS'40'
p871
aS'46'
p872
aS'31'
p873
aS'46'
p874
aS'41'
p875
aS'47'
p876
aS'32'
p877
aS'47'
p878
aS'42'
p879
aS'48'
p880
aS'33'
p881
aS'48'
p882
aS'43'
p883
aS'49'
p884
aS'34'
p885
aS'49'
p886
aS'44'
p887
aS'50'
p888
aS'None'
p889
aS'50'
p890
aS'45'
p891
aS'51'
p892
aS'35'
p893
aS'51'
p894
aS'46'
p895
aS'52'
p896
aS'36'
p897
aS'52'
p898
aS'47'
p899
aS'53'
p900
aS'37'
p901
aS'53'
p902
aS'48'
p903
aS'54'
p904
aS'None'
p905
aS'54'
p906
aS'49'
p907
aS'55'
p908
aS'38'
p909
aS'55'
p910
aS'50'
p911
aS'56'
p912
aS'39'
p913
aS'56'
p914
aS'51'
p915
aS'57'
p916
aS'40'
p917
aS'57'
p918
aS'52'
p919
aS'58'
p920
aS'41'
p921
aS'58'
p922
aS'53'
p923
aS'59'
p924
aS'42'
p925
aS'59'
p926
aS'54'
p927
aS'60'
p928
aS'43'
p929
aS'60'
p930
aS'55'
p931
aS'61'
p932
aS'None'
p933
aS'61'
p934
aS'56'
p935
aS'62'
p936
aS'44'
p937
aS'62'
p938
aS'57'
p939
aS'63'
p940
aS'45'
p941
aS'63'
p942
aS'58'
p943
aS'64'
p944
aS'46'
p945
aS'64'
p946
aS'59'
p947
aS'65'
p948
aS'47'
p949
aS'65'
p950
aS'60'
p951
aS'66'
p952
aS'48'
p953
aS'66'
p954
aS'61'
p955
aS'67'
p956
aS'49'
p957
aS'67'
p958
aS'62'
p959
aS'68'
p960
aS'50'
p961
aS'68'
p962
aS'63'
p963
aS'69'
p964
aS'51'
p965
aS'69'
p966
aS'64'
p967
aS'70'
p968
aS'52'
p969
aS'70'
p970
aS'65'
p971
aS'71'
p972
aS'53'
p973
aS'71'
p974
aS'66'
p975
aS'72'
p976
aS'54'
p977
aS'72'
p978
aS'67'
p979
aS'73'
p980
aS'55'
p981
aS'73'
p982
aS'68'
p983
aS'74'
p984
aS'56'
p985
aS'74'
p986
aS'69'
p987
aS'75'
p988
aS'57'
p989
aS'75'
p990
aS'70'
p991
aS'76'
p992
aS'58'
p993
aS'76'
p994
aS'71'
p995
aS'77'
p996
aS'59'
p997
aS'77'
p998
aS'72'
p999
aS'78'
p1000
aS'60'
p1001
aS'78'
p1002
aS'73'
p1003
aS'79'
p1004
aS'61'
p1005
aS'79'
p1006
aS'74'
p1007
aS'80'
p1008
aS'62'
p1009
aS'80'
p1010
aS'75'
p1011
aS'81'
p1012
aS'63'
p1013
aS'81'
p1014
aS'76'
p1015
aS'82'
p1016
aS'64'
p1017
aS'82'
p1018
aS'77'
p1019
aS'83'
p1020
aS'65'
p1021
aS'83'
p1022
aS'78'
p1023
aS'84'
p1024
aS'66'
p1025
aS'84'
p1026
aS'None'
p1027
aS'[]'
p1028
ag10
aS'None'
p1029
aS'[]'
p1030
ag10
aS'None'
p1031
aS'[]'
p1032
ag10
aS'None'
p1033
aS'[]'
p1034
ag10
aS'None'
p1035
aS'[]'
p1036
ag10
aS'None'
p1037
aS'[]'
p1038
ag10
aS'None'
p1039
aS'[]'
p1040
ag10
aS'None'
p1041
aS'[]'
p1042
ag10
aS'None'
p1043
aS'[]'
p1044
ag10
aS'None'
p1045
aS'[]'
p1046
ag10
aS'None'
p1047
aS'[]'
p1048
ag10
aS'None'
p1049
aS'[]'
p1050
ag10
aS'None'
p1051
aS'[]'
p1052
ag10
aS'None'
p1053
aS'[]'
p1054
ag10
aS'None'
p1055
aS'[]'
p1056
ag10
aS'None'
p1057
aS'[]'
p1058
ag10
aS'None'
p1059
aS'[]'
p1060
ag10
aS'None'
p1061
aS'[]'
p1062
ag10
aS'26'
p1063
aS'[]'
p1064
ag10
aS'None'
p1065
aS'[]'
p1066
ag10
aS'None'
p1067
aS'[]'
p1068
ag10
aS'None'
p1069
aS'[]'
p1070
ag10
aS'1'
p1071
aS'[2L]'
p1072
aS'<stack frame offset -0x4>'
p1073
aS'None'
p1074
aS'[]'
p1075
ag10
aS'None'
p1076
aS'[]'
p1077
ag10
aS'None'
p1078
aS'[]'
p1079
ag10
aS'None'
p1080
aS'[]'
p1081
ag10
aS'None'
p1082
aS'[]'
p1083
ag10
aS'None'
p1084
aS'[]'
p1085
ag10
aS'None'
p1086
aS'[]'
p1087
ag10
aS'None'
p1088
aS'[]'
p1089
ag10
aS'None'
p1090
aS'[]'
p1091
ag10
aS'None'
p1092
aS'[]'
p1093
ag10
aS'None'
p1094
aS'[]'
p1095
ag10
aS'None'
p1096
aS'[]'
p1097
ag10
aS'None'
p1098
aS'[]'
p1099
ag10
aS'None'
p1100
aS'[]'
p1101
ag10
aS'None'
p1102
aS'[]'
p1103
ag10
aS'None'
p1104
aS'[]'
p1105
ag10
aS'None'
p1106
aS'[]'
p1107
ag10
aS'None'
p1108
aS'[]'
p1109
ag10
aS'None'
p1110
aS'[]'
p1111
ag10
aS'None'
p1112
aS'[]'
p1113
ag10
aS'None'
p1114
aS'[]'
p1115
ag10
aS'None'
p1116
aS'[]'
p1117
ag10
aS'None'
p1118
aS'[]'
p1119
ag10
aS'None'
p1120
aS'[]'
p1121
ag10
aS'3'
p1122
aS'[5L, 6L]'
p1123
ag10
aS'None'
p1124
aS'[]'
p1125
ag10
aS'None'
p1126
aS'[]'
p1127
ag10
aS'None'
p1128
aS'[]'
p1129
ag10
aS'None'
p1130
aS'[]'
p1131
ag10
aS'None'
p1132
aS'[]'
p1133
ag10
aS'None'
p1134
aS'[]'
p1135
ag10
aS'None'
p1136
aS'[]'
p1137
ag10
aS'None'
p1138
aS'[]'
p1139
ag10
aS'26'
p1140
aS'[]'
p1141
ag10
aS'None'
p1142
aS'[]'
p1143
ag10
aS'None'
p1144
aS'[]'
p1145
ag10
aS'None'
p1146
aS'[]'
p1147
ag10
aS'None'
p1148
aS'[]'
p1149
ag10
aS'None'
p1150
aS'[]'
p1151
ag10
aS'None'
p1152
aS'[]'
p1153
ag10
aS'None'
p1154
aS'[]'
p1155
ag10
aS'None'
p1156
aS'[]'
p1157
ag10
aS'[]'
p1158
ag10
aS'[]'
p1159
ag10
aS'[]'
p1160
ag10
aS'[]'
p1161
ag10
aS'[]'
p1162
ag10
aS'[]'
p1163
ag10
aS'[15L]'
p1164
ag10
aS'[]'
p1165
ag10
aS'[]'
p1166
ag10
aS'[]'
p1167
ag10
aS'[]'
p1168
ag10
aS'0'
p1169
aS'0'
p1170
aS'0'
p1171
aS'0'
p1172
aS'1'
p1173
aS'1'
p1174
aS'1'
p1175
aS'1'
p1176
aS'2'
p1177
aS'3'
p1178
aS'2'
p1179
aS'3'
p1180
aS'3'
p1181
aS'5'
p1182
aS'2'
p1183
aS'5'
p1184
aS'4'
p1185
aS'6'
p1186
aS'None'
p1187
aS'6'
p1188
aS'5'
p1189
aS'7'
p1190
aS'3'
p1191
aS'7'
p1192
aS'6'
p1193
aS'8'
p1194
aS'4'
p1195
aS'8'
p1196
aS'7'
p1197
aS'9'
p1198
aS'5'
p1199
aS'9'
p1200
aS'8'
p1201
aS'10'
p1202
aS'6'
p1203
aS'10'
p1204
aS'9'
p1205
aS'11'
p1206
aS'7'
p1207
aS'11'
p1208
aS'10'
p1209
aS'12'
p1210
aS'8'
p1211
aS'12'
p1212
aS'11'
p1213
aS'14'
p1214
aS'9'
p1215
aS'13'
p1216
aS'12'
p1217
aS'15'
p1218
aS'10'
p1219
aS'14'
p1220
aS'13'
p1221
aS'16'
p1222
aS'11'
p1223
aS'15'
p1224
aS'14'
p1225
aS'17'
p1226
aS'12'
p1227
aS'16'
p1228
aS'15'
p1229
aS'18'
p1230
aS'13'
p1231
aS'17'
p1232
aS'16'
p1233
aS'19'
p1234
aS'14'
p1235
aS'18'
p1236
aS'17'
p1237
aS'20'
p1238
aS'15'
p1239
aS'19'
p1240
aS'18'
p1241
aS'21'
p1242
aS'16'
p1243
aS'20'
p1244
aS'19'
p1245
aS'22'
p1246
aS'17'
p1247
aS'21'
p1248
aS'20'
p1249
aS'23'
p1250
aS'18'
p1251
aS'22'
p1252
aS'21'
p1253
aS'24'
p1254
aS'19'
p1255
aS'23'
p1256
aS'22'
p1257
aS'25'
p1258
aS'20'
p1259
aS'24'
p1260
aS'23'
p1261
aS'26'
p1262
aS'None'
p1263
aS'25'
p1264
aS'24'
p1265
aS'27'
p1266
aS'21'
p1267
aS'26'
p1268
aS'25'
p1269
aS'29'
p1270
aS'21'
p1271
aS'28'
p1272
aS'26'
p1273
aS'31'
p1274
aS'21'
p1275
aS'30'
p1276
aS'27'
p1277
aS'32'
p1278
aS'22'
p1279
aS'31'
p1280
aS'28'
p1281
aS'33'
p1282
aS'23'
p1283
aS'32'
p1284
aS'29'
p1285
aS'34'
p1286
aS'24'
p1287
aS'33'
p1288
aS'30'
p1289
aS'35'
p1290
aS'25'
p1291
aS'34'
p1292
aS'31'
p1293
aS'36'
p1294
aS'26'
p1295
aS'35'
p1296
aS'32'
p1297
aS'37'
p1298
aS'27'
p1299
aS'36'
p1300
aS'33'
p1301
aS'38'
p1302
aS'28'
p1303
aS'37'
p1304
aS'34'
p1305
aS'39'
p1306
aS'29'
p1307
aS'38'
p1308
aS'35'
p1309
aS'40'
p1310
aS'30'
p1311
aS'39'
p1312
aS'36'
p1313
aS'41'
p1314
aS'31'
p1315
aS'40'
p1316
aS'37'
p1317
aS'42'
p1318
aS'32'
p1319
aS'41'
p1320
aS'38'
p1321
aS'43'
p1322
aS'33'
p1323
aS'42'
p1324
aS'None'
p1325
aS'[]'
p1326
ag10
aS'None'
p1327
aS'[]'
p1328
ag10
aS'None'
p1329
aS'[]'
p1330
ag10
aS'None'
p1331
aS'[]'
p1332
ag10
aS'None'
p1333
aS'[]'
p1334
ag10
aS'None'
p1335
aS'[]'
p1336
ag10
aS'None'
p1337
aS'[]'
p1338
ag10
aS'None'
p1339
aS'[]'
p1340
ag10
aS'None'
p1341
aS'[]'
p1342
ag10
aS'None'
p1343
aS'[]'
p1344
ag10
aS'None'
p1345
aS'[]'
p1346
ag10
aS'None'
p1347
aS'[]'
p1348
ag10
aS'None'
p1349
aS'[]'
p1350
ag10
aS'None'
p1351
aS'[]'
p1352
ag10
aS'None'
p1353
aS'[]'
p1354
ag10
aS'None'
p1355
aS'[]'
p1356
ag10
aS'None'
p1357
aS'[]'
p1358
ag10
aS'None'
p1359
aS'[]'
p1360
ag10
aS'None'
p1361
aS'[]'
p1362
ag10
aS'None'
p1363
aS'[]'
p1364
ag10
aS'None'
p1365
aS'[]'
p1366
ag10
aS'None'
p1367
aS'[]'
p1368
ag10
aS'None'
p1369
aS'[]'
p1370
ag10
aS'None'
p1371
aS'[]'
p1372
ag10
aS'None'
p1373
aS'[]'
p1374
ag10
aS'None'
p1375
aS'[]'
p1376
ag10
aS'None'
p1377
aS'[]'
p1378
ag10
aS'None'
p1379
aS'[]'
p1380
ag10
aS'None'
p1381
aS'[]'
p1382
ag10
aS'None'
p1383
aS'[]'
p1384
ag10
aS'None'
p1385
aS'[]'
p1386
ag10
aS'None'
p1387
aS'[]'
p1388
ag10
aS'None'
p1389
aS'[]'
p1390
ag10
aS'None'
p1391
aS'[]'
p1392
ag10
aS'None'
p1393
aS'[]'
p1394
ag10
aS'None'
p1395
aS'[]'
p1396
ag10
aS'None'
p1397
aS'[]'
p1398
ag10
aS'None'
p1399
aS'[]'
p1400
ag10
aS'None'
p1401
aS'[]'
p1402
ag10
aS'None'
p1403
aS'[]'
p1404
ag10
aS'None'
p1405
aS'[]'
p1406
ag10
aS'None'
p1407
aS'[]'
p1408
ag10
aS'None'
p1409
aS'[]'
p1410
ag10
aS'None'
p1411
aS'[]'
p1412
ag10
aS'None'
p1413
aS'[]'
p1414
ag10
aS'None'
p1415
aS'[]'
p1416
ag10
aS'None'
p1417
aS'[]'
p1418
ag10
aS'None'
p1419
aS'[]'
p1420
ag10
aS'None'
p1421
aS'[]'
p1422
ag10
aS'None'
p1423
aS'[]'
p1424
ag10
aS'None'
p1425
aS'[]'
p1426
ag10
aS'None'
p1427
aS'[]'
p1428
ag10
aS'None'
p1429
aS'[]'
p1430
ag10
aS'None'
p1431
aS'[]'
p1432
ag10
aS'None'
p1433
aS'[]'
p1434
ag10
aS'None'
p1435
aS'[]'
p1436
ag10
aS'None'
p1437
aS'[]'
p1438
ag10
aS'None'
p1439
aS'[]'
p1440
ag10
aS'None'
p1441
aS'[]'
p1442
ag10
aS'None'
p1443
aS'[]'
p1444
ag10
aS'None'
p1445
aS'[]'
p1446
ag10
aS'None'
p1447
aS'[]'
p1448
ag10
aS'None'
p1449
aS'[]'
p1450
ag10
aS'None'
p1451
aS'[]'
p1452
ag10
aS'None'
p1453
aS'[]'
p1454
ag10
aS'[]'
p1455
ag10
aS'[]'
p1456
ag10
aS'[]'
p1457
ag10
aS'[]'
p1458
ag10
aS'[]'
p1459
ag10
aS'[]'
p1460
ag10
aS'[]'
p1461
ag10
aS'[]'
p1462
ag10
aS'[]'
p1463
ag10
aS'[]'
p1464
ag10
aS'[]'
p1465
ag10
aS'0'
p1466
aS'0'
p1467
aS'0'
p1468
aS'0'
p1469
aS'None'
p1470
aS'[]'
p1471
ag10
aS'None'
p1472
aS'[]'
p1473
ag10
aS'None'
p1474
aS'[]'
p1475
ag10
aS'None'
p1476
aS'[]'
p1477
ag10
aS'None'
p1478
aS'[]'
p1479
ag10
aS'None'
p1480
aS'[]'
p1481
ag10
aS'None'
p1482
aS'[]'
p1483
ag10
aS'None'
p1484
aS'[]'
p1485
ag10
aS'None'
p1486
aS'[]'
p1487
ag10
aS'None'
p1488
aS'[]'
p1489
ag10
aS'None'
p1490
aS'[]'
p1491
ag10
aS'None'
p1492
aS'[]'
p1493
ag10
aS'None'
p1494
aS'[]'
p1495
ag10
aS'None'
p1496
aS'[]'
p1497
ag10
aS'None'
p1498
aS'[]'
p1499
ag10
aS'None'
p1500
aS'[]'
p1501
ag10
aS'None'
p1502
aS'[]'
p1503
ag10
aS'None'
p1504
aS'[]'
p1505
ag10
aS'None'
p1506
aS'[]'
p1507
ag10
aS'None'
p1508
aS'[]'
p1509
ag10
aS'None'
p1510
aS'[]'
p1511
ag10
aS'None'
p1512
aS'[]'
p1513
ag10
aS'None'
p1514
aS'[]'
p1515
ag10
aS'None'
p1516
aS'[]'
p1517
ag10
aS'None'
p1518
aS'[]'
p1519
ag10
aS'None'
p1520
aS'[]'
p1521
ag10
aS'None'
p1522
aS'[]'
p1523
ag10
aS'None'
p1524
aS'[]'
p1525
ag10
aS'None'
p1526
aS'[]'
p1527
ag10
aS'None'
p1528
aS'[]'
p1529
ag10
aS'None'
p1530
aS'[]'
p1531
ag10
aS'None'
p1532
aS'[]'
p1533
ag10
aS'None'
p1534
aS'[]'
p1535
ag10
aS'None'
p1536
aS'[]'
p1537
ag10
aS'None'
p1538
aS'[]'
p1539
ag10
aS'None'
p1540
aS'[]'
p1541
ag10
aS'None'
p1542
aS'[]'
p1543
ag10
aS'None'
p1544
aS'[]'
p1545
ag10
aS'None'
p1546
aS'[]'
p1547
ag10
aS'None'
p1548
aS'[]'
p1549
ag10
aS'None'
p1550
aS'[]'
p1551
ag10
aS'None'
p1552
aS'[]'
p1553
ag10
aS'None'
p1554
aS'[]'
p1555
ag10
aS'None'
p1556
aS'[]'
p1557
ag10
aS'None'
p1558
aS'[]'
p1559
ag10
aS'None'
p1560
aS'[]'
p1561
ag10
aS'None'
p1562
aS'[]'
p1563
ag10
aS'0'
p1564
aS'[1L]'
p1565
ag10
aS'None'
p1566
aS'[]'
p1567
ag10
aS'None'
p1568
aS'[]'
p1569
ag10
aS'None'
p1570
aS'[]'
p1571
ag10
aS'None'
p1572
aS'[]'
p1573
ag10
aS'None'
p1574
aS'[]'
p1575
ag10
aS'None'
p1576
aS'[]'
p1577
ag10
aS'None'
p1578
aS'[]'
p1579
ag10
aS'None'
p1580
aS'[]'
p1581
ag10
aS'None'
p1582
aS'[]'
p1583
ag10
aS'None'
p1584
aS'[]'
p1585
ag10
aS'None'
p1586
aS'[]'
p1587
ag10
aS'None'
p1588
aS'[]'
p1589
ag10
aS'None'
p1590
aS'[]'
p1591
ag10
aS'None'
p1592
aS'[]'
p1593
ag10
aS'None'
p1594
aS'[]'
p1595
ag10
aS'None'
p1596
aS'[]'
p1597
ag10
aS'None'
p1598
aS'[]'
p1599
ag10
aS'[]'
p1600
ag10
aS'[]'
p1601
ag10
aS'[]'
p1602
ag10
aS'[]'
p1603
ag10
aS'[]'
p1604
ag10
aS'[]'
p1605
ag10
aS'[]'
p1606
ag10
aS'[]'
p1607
ag10
aS'[]'
p1608
ag10
aS'[]'
p1609
ag10
aS'[]'
p1610
ag10
aS'0'
p1611
aS'0'
p1612
aS'0'
p1613
aS'0'
p1614
aS'1'
p1615
aS'1'
p1616
aS'1'
p1617
aS'1'
p1618
aS'2'
p1619
aS'2'
p1620
aS'2'
p1621
aS'2'
p1622
asS'test_med_il_instructions'
p1623
(lp1624
S'None'
p1625
aS'eax#1 = [esp#0 + 4].d @ mem#0'
p1626
ag10
aS'<undetermined>'
p1627
aS'{}'
p1628
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_35', 'testautovar']"
p1629
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_35', 'testautovar']"
p1630
aS'eax_35#1 = testautovar#0'
p1631
aS'eax_35 = testautovar'
p1632
aS'None'
p1633
aS'edx#1:eax#2 = sx.q(eax#1)'
p1634
ag10
ag1627
aS'{}'
p1635
aS"['<MLIL_SET_VAR_SPLIT 4>', '<MLIL_SX 8>', '<MLIL_VAR 4>', 'eax', 'eax_35', 'edx']"
p1636
aS"['<MLIL_SET_VAR_SPLIT 4>', '<MLIL_SX 8>', '<MLIL_VAR 4>', 'eax', 'eax_35', 'edx']"
p1637
aS'edx#1:eax#2 = sx.q(eax_35#1)'
p1638
aS'edx:eax = sx.q(eax_35)'
p1639
aS'None'
p1640
aS'ecx#1 = [0x2000].d @ mem#0'
p1641
ag10
ag1627
aS'{}'
p1642
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_SET_VAR 4>', 'ecx']"
p1643
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_SET_VAR 4>', 'ecx']"
p1644
aS'ecx#1 = [0x2000].d @ mem#0'
p1645
aS'ecx = [0x2000].d'
p1646
aS'None'
p1647
aS'ecx#2 = ecx#1 + 1'
p1648
ag10
ag1627
aS'{}'
p1649
aS"['1', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'ecx', 'ecx_1']"
p1650
aS"['1', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'ecx', 'ecx_1']"
p1651
aS'ecx_1#2 = ecx#1 + 1'
p1652
aS'ecx_1 = ecx + 1'
p1653
aS'None'
p1654
aS'[0x2000].d = ecx#2 @ mem#0 -> mem#1'
p1655
ag10
ag1627
aS'{}'
p1656
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'ecx_1']"
p1657
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'ecx_1']"
p1658
aS'[0x2000].d = ecx_1#2 @ mem#0 -> mem#1'
p1659
aS'[0x2000].d = ecx_1'
p1660
aS'None'
p1661
aS'[esp#0 - 4].d = ecx#2 @ mem#1 -> mem#2'
p1662
ag10
ag1627
aS'{}'
p1663
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'ecx_1', 'var_4']"
p1664
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'ecx_1', 'var_4']"
p1665
aS'var_4#1 = ecx_1#2'
p1666
aS'var_4 = ecx_1'
p1667
aS'None'
p1668
aS'eax#3 = [esp#1].d @ mem#2'
p1669
ag10
ag1627
aS'{}'
p1670
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'var_4']"
p1671
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'var_4']"
p1672
aS'eax_1#3 = var_4#1'
p1673
aS'eax_1 = var_4'
p1674
aS'None'
p1675
aS'eax#4 = eax#3 + 0xa'
p1676
ag10
ag1627
aS'{}'
p1677
aS"['10', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'eax_2']"
p1678
aS"['10', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'eax_2']"
p1679
aS'eax_2#4 = eax_1#3 + 0xa'
p1680
aS'eax_2 = eax_1 + 0xa'
p1681
aS'None'
p1682
aS'[0x2000].d = [0x2000].d @ mem#2 + eax#4 @ mem#2 -> mem#3'
p1683
ag10
ag1627
aS'{}'
p1684
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_2']"
p1685
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_2']"
p1686
aS'[0x2000].d = [0x2000].d @ mem#1 + eax_2#4 @ mem#1 -> mem#2'
p1687
aS'[0x2000].d = [0x2000].d + eax_2'
p1688
aS'None'
p1689
aS'temp2#1.d = eax#4'
p1690
ag10
ag1627
aS'{}'
p1691
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_2', 'temp2']"
p1692
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_2', 'temp2']"
p1693
aS'temp2#1 = eax_2#4'
p1694
aS'temp2 = eax_2'
p1695
aS'None'
p1696
aS'eax#5 = temp2#1.d + ebx#1'
p1697
ag10
ag1627
aS'{}'
p1698
aS"['7808', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_3', 'temp2']"
p1699
aS"['7808', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_3', 'temp2']"
p1700
aS'eax_3#5 = temp2#1 + 0x1e80'
p1701
aS'eax_3 = temp2 + 0x1e80'
p1702
aS'None'
p1703
aS'[esp#4 - 4].d = flagbit.d(flag:flag63#0, 0xb) | (flagbit.d(flag:flag60#0, 0xa) | (flagbit.d(flag:flag57#0, 7) | (flagbit.d(flag:flag54#0, 6) | (flagbit.d(flag:flag51#0, 4) | (flagbit.d(flag:flag48#0, 2) | flagbit.d(flag:flag46#0, 0)))))) @ mem#4 -> mem#5'
p1704
ag10
ag1627
aS'{}'
p1705
aS"['0', '10', '11', '2', '4', '6', '7', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_OR 4>', '<MLIL_OR 4>', '<MLIL_OR 4>', '<MLIL_OR 4>', '<MLIL_OR 4>', '<MLIL_OR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'flag46', 'flag48', 'flag51', 'flag54', 'flag57', 'flag60', 'flag63', 'var_4_1']"
p1706
aS"['0', '10', '11', '2', '4', '6', '7', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_BOOL_TO_INT 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_CONST 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_LSL 4>', '<MLIL_OR 4>', '<MLIL_OR 4>', '<MLIL_OR 4>', '<MLIL_OR 4>', '<MLIL_OR 4>', '<MLIL_OR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'flag46', 'flag48', 'flag51', 'flag54', 'flag57', 'flag60', 'flag63', 'var_4_1']"
p1707
aS'var_4_1#2 = (flag63#0 ? 1 : 0 << 0xb) | ((flag60#0 ? 1 : 0 << 0xa) | ((flag57#0 ? 1 : 0 << 7) | ((flag54#0 ? 1 : 0 << 6) | ((flag51#0 ? 1 : 0 << 4) | ((flag48#0 ? 1 : 0 << 2) | (flag46#0 ? 1 : 0 << 0))))))'
p1708
aS'var_4_1 = (flag63 ? 1 : 0 << 0xb) | ((flag60 ? 1 : 0 << 0xa) | ((flag57 ? 1 : 0 << 7) | ((flag54 ? 1 : 0 << 6) | ((flag51 ? 1 : 0 << 4) | ((flag48 ? 1 : 0 << 2) | (flag46 ? 1 : 0 << 0))))))'
p1709
aS'None'
p1710
aS'eax#6 = [esp#5].d @ mem#5'
p1711
ag10
ag1627
aS'{}'
p1712
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_4', 'var_4_1']"
p1713
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_4', 'var_4_1']"
p1714
aS'eax_4#6 = var_4_1#2'
p1715
aS'eax_4 = var_4_1'
p1716
aS'None'
p1717
aS'[0x2000].d = [0x2000].d @ mem#5 + eax#6 @ mem#5 -> mem#6'
p1718
ag10
ag1627
aS'{}'
p1719
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_4']"
p1720
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_4']"
p1721
aS'[0x2000].d = [0x2000].d @ mem#2 + eax_4#6 @ mem#2 -> mem#3'
p1722
aS'[0x2000].d = [0x2000].d + eax_4'
p1723
aS'None'
p1724
aS'eax#7 = adc.d(eax#6, eax#6, flag:c#3)'
p1725
ag10
ag1627
aS'{}'
p1726
aS"['1', '<MLIL_ADC 4>', '<MLIL_CONST>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_4', 'eax_4', 'eax_5']"
p1727
aS"['1', '<MLIL_ADC 4>', '<MLIL_CONST>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_4', 'eax_4', 'eax_5']"
p1728
aS'eax_5#7 = adc.d(eax_4#6, eax_4#6, true)'
p1729
aS'eax_5 = adc.d(eax_4, eax_4, true)'
p1730
aS'None'
p1731
aS'ebx#2 = eax#7'
p1732
ag10
ag1627
aS'{}'
p1733
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_5', 'ebx']"
p1734
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_5', 'ebx']"
p1735
aS'ebx#1 = eax_5#7'
p1736
aS'ebx = eax_5'
p1737
aS'None'
p1738
aS'eax#8 = sbb.d(eax#7, eax#7, flag:c#4)'
p1739
ag10
ag1627
aS'{}'
p1740
aS"['1', '<MLIL_CONST>', '<MLIL_SBB 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_5', 'eax_5', 'eax_6']"
p1741
aS"['1', '<MLIL_CONST>', '<MLIL_SBB 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_5', 'eax_5', 'eax_6']"
p1742
aS'eax_6#8 = sbb.d(eax_5#7, eax_5#7, true)'
p1743
aS'eax_6 = sbb.d(eax_5, eax_5, true)'
p1744
aS'None'
p1745
aS'eax#9 = eax#8 - ebx#2'
p1746
ag10
ag1627
aS'{}'
p1747
aS"['<MLIL_SET_VAR 4>', '<MLIL_SUB 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_6', 'eax_7', 'ebx']"
p1748
aS"['<MLIL_SET_VAR 4>', '<MLIL_SUB 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_6', 'eax_7', 'ebx']"
p1749
aS'eax_7#9 = eax_6#8 - ebx#1'
p1750
aS'eax_7 = eax_6 - ebx'
p1751
aS'None'
p1752
aS'eax#10 = eax#9 & 0xffff'
p1753
ag10
ag1627
aS'{}'
p1754
aS"['65535', '<MLIL_AND 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_7', 'eax_8']"
p1755
aS"['65535', '<MLIL_AND 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_7', 'eax_8']"
p1756
aS'eax_8#10 = eax_7#9 & 0xffff'
p1757
aS'eax_8 = eax_7 & 0xffff'
p1758
aS'None'
p1759
aS'eax#11 = eax#10 | 0x5555'
p1760
ag10
ag1627
aS'{}'
p1761
aS"['21845', '<MLIL_CONST 4>', '<MLIL_OR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_8', 'eax_9']"
p1762
aS"['21845', '<MLIL_CONST 4>', '<MLIL_OR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_8', 'eax_9']"
p1763
aS'eax_9#11 = eax_8#10 | 0x5555'
p1764
aS'eax_9 = eax_8 | 0x5555'
p1765
aS'None'
p1766
aS'eax#12 = eax#11 ^ 0x8888'
p1767
ag10
ag1627
aS'{}'
p1768
aS"['34952', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_XOR 4>', 'eax_10', 'eax_9']"
p1769
aS"['34952', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_XOR 4>', 'eax_10', 'eax_9']"
p1770
aS'eax_10#12 = eax_9#11 ^ 0x8888'
p1771
aS'eax_10 = eax_9 ^ 0x8888'
p1772
aS'None'
p1773
aS'eax#13 = eax#12 << 0x10'
p1774
ag10
ag1627
aS'{}'
p1775
aS"['16', '<MLIL_CONST 1>', '<MLIL_LSL 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_10', 'eax_11']"
p1776
aS"['16', '<MLIL_CONST 1>', '<MLIL_LSL 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_10', 'eax_11']"
p1777
aS'eax_11#13 = eax_10#12 << 0x10'
p1778
aS'eax_11 = eax_10 << 0x10'
p1779
aS'None'
p1780
aS'[0x2000].d = [0x2000].d @ mem#6 + eax#13 @ mem#6 -> mem#7'
p1781
ag10
ag1627
aS'{}'
p1782
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_11']"
p1783
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_11']"
p1784
aS'[0x2000].d = [0x2000].d @ mem#3 + eax_11#13 @ mem#3 -> mem#4'
p1785
aS'[0x2000].d = [0x2000].d + eax_11'
p1786
aS'None'
p1787
aS'eax#14 = eax#13 s>> 4'
p1788
ag10
ag1627
aS'{}'
p1789
aS"['4', '<MLIL_ASR 4>', '<MLIL_CONST 1>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_11', 'eax_12']"
p1790
aS"['4', '<MLIL_ASR 4>', '<MLIL_CONST 1>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_11', 'eax_12']"
p1791
aS'eax_12#14 = eax_11#13 s>> 4'
p1792
aS'eax_12 = eax_11 s>> 4'
p1793
aS'None'
p1794
aS'eax#15 = eax#14 u>> 8'
p1795
ag10
ag1627
aS'{}'
p1796
aS"['8', '<MLIL_CONST 1>', '<MLIL_LSR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_12', 'eax_13']"
p1797
aS"['8', '<MLIL_CONST 1>', '<MLIL_LSR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_12', 'eax_13']"
p1798
aS'eax_13#15 = eax_12#14 u>> 8'
p1799
aS'eax_13 = eax_12 u>> 8'
p1800
aS'None'
p1801
aS'eax#16 = rol.d(eax#15, 0x10)'
p1802
ag10
ag1627
aS'{}'
p1803
aS"['16', '<MLIL_CONST 1>', '<MLIL_ROL 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_13', 'eax_14']"
p1804
aS"['16', '<MLIL_CONST 1>', '<MLIL_ROL 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_13', 'eax_14']"
p1805
aS'eax_14#16 = rol.d(eax_13#15, 0x10)'
p1806
aS'eax_14 = rol.d(eax_13, 0x10)'
p1807
aS'None'
p1808
aS'[0x2000].d = [0x2000].d @ mem#7 + eax#16 @ mem#7 -> mem#8'
p1809
ag10
ag1627
aS'{}'
p1810
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_14']"
p1811
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_14']"
p1812
aS'[0x2000].d = [0x2000].d @ mem#4 + eax_14#16 @ mem#4 -> mem#5'
p1813
aS'[0x2000].d = [0x2000].d + eax_14'
p1814
aS'None'
p1815
aS'eax#17 = ror.d(eax#16, 8)'
p1816
ag10
ag1627
aS'{}'
p1817
aS"['8', '<MLIL_CONST 1>', '<MLIL_ROR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_14', 'eax_15']"
p1818
aS"['8', '<MLIL_CONST 1>', '<MLIL_ROR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_14', 'eax_15']"
p1819
aS'eax_15#17 = ror.d(eax_14#16, 8)'
p1820
aS'eax_15 = ror.d(eax_14, 8)'
p1821
aS'None'
p1822
aS'eax#18 = rrc.d(eax#17, 1, flag:c#5)'
p1823
ag10
ag1627
aS'{}'
p1824
aS"['0', '1', '<MLIL_CONST 1>', '<MLIL_CONST>', '<MLIL_RRC 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_15', 'eax_16']"
p1825
aS"['0', '1', '<MLIL_CONST 1>', '<MLIL_CONST>', '<MLIL_RRC 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_15', 'eax_16']"
p1826
aS'eax_16#18 = rrc.d(eax_15#17, 1, false)'
p1827
aS'eax_16 = rrc.d(eax_15, 1, false)'
p1828
aS'None'
p1829
aS'eax#19 = rlc.d(eax#18, 1, flag:c#6)'
p1830
ag10
ag1627
aS'{}'
p1831
aS"['1', '1', '<MLIL_CONST 1>', '<MLIL_CONST>', '<MLIL_RRC 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_16', 'eax_17']"
p1832
aS"['1', '1', '<MLIL_CONST 1>', '<MLIL_CONST>', '<MLIL_RRC 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_16', 'eax_17']"
p1833
aS'eax_17#19 = rrc.d(eax_16#18, 1, true)'
p1834
aS'eax_17 = rrc.d(eax_16, 1, true)'
p1835
aS'None'
p1836
aS'[0x2000].d = [0x2000].d @ mem#8 + eax#19 @ mem#8 -> mem#9'
p1837
ag10
ag1627
aS'{}'
p1838
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_17']"
p1839
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_17']"
p1840
aS'[0x2000].d = [0x2000].d @ mem#5 + eax_17#19 @ mem#5 -> mem#6'
p1841
aS'[0x2000].d = [0x2000].d + eax_17'
p1842
aS'None'
p1843
aS'eax#20.al = 0x10'
p1844
ag10
ag1627
aS'{}'
p1845
aS"['0', '16', '<MLIL_CONST 1>', '<MLIL_SET_VAR_FIELD 1>', 'eax_17']"
p1846
aS"['0', '16', '<MLIL_CONST 1>', '<MLIL_SET_VAR_FIELD 1>', 'eax_17']"
p1847
aS'eax_17#20.al = 0x10 @ eax_17#19'
p1848
aS'eax_17.al = 0x10'
p1849
aS'None'
p1850
aS'eax#21.al = eax#20.al + eax#20.ah'
p1851
ag10
ag1627
aS'{}'
p1852
aS"['0', '0', '1', '<MLIL_ADD 1>', '<MLIL_SET_VAR_FIELD 1>', '<MLIL_VAR_FIELD 1>', '<MLIL_VAR_FIELD 1>', 'eax_17', 'eax_17', 'eax_17']"
p1853
aS"['0', '0', '1', '<MLIL_ADD 1>', '<MLIL_SET_VAR_FIELD 1>', '<MLIL_VAR_FIELD 1>', '<MLIL_VAR_FIELD 1>', 'eax_17', 'eax_17', 'eax_17']"
p1854
aS'eax_17#21.al = eax_17#20.al + eax_17#20.ah @ eax_17#20'
p1855
aS'eax_17.al = eax_17.al + eax_17.ah'
p1856
aS'None'
p1857
aS'[0x2000].d = [0x2000].d @ mem#9 + eax#21 @ mem#9 -> mem#10'
p1858
ag10
ag1627
aS'{}'
p1859
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_17']"
p1860
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_17']"
p1861
aS'[0x2000].d = [0x2000].d @ mem#6 + eax_17#21 @ mem#6 -> mem#7'
p1862
aS'[0x2000].d = [0x2000].d + eax_17'
p1863
aS'None'
p1864
aS'eax#22 = eax#21 * eax#21'
p1865
ag10
ag1627
aS'{}'
p1866
aS"['<MLIL_MUL 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_17', 'eax_17', 'eax_18']"
p1867
aS"['<MLIL_MUL 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_17', 'eax_17', 'eax_18']"
p1868
aS'eax_18#22 = eax_17#21 * eax_17#21'
p1869
aS'eax_18 = eax_17 * eax_17'
p1870
aS'None'
p1871
aS'edx#2:eax#23 = mulu.dp.d(eax#22, ecx#3)'
p1872
ag10
ag1627
aS'{}'
p1873
aS"['5', '<MLIL_CONST 4>', '<MLIL_MULU_DP 4>', '<MLIL_SET_VAR_SPLIT 4>', '<MLIL_VAR 4>', 'eax_18', 'eax_19', 'edx_1']"
p1874
aS"['5', '<MLIL_CONST 4>', '<MLIL_MULU_DP 4>', '<MLIL_SET_VAR_SPLIT 4>', '<MLIL_VAR 4>', 'eax_18', 'eax_19', 'edx_1']"
p1875
aS'edx_1#2:eax_19#23 = mulu.dp.d(eax_18#22, 5)'
p1876
aS'edx_1:eax_19 = mulu.dp.d(eax_18, 5)'
p1877
aS'None'
p1878
aS'ecx#4 = edx#2'
p1879
ag10
ag1627
aS'{}'
p1880
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'ecx_2', 'edx_1']"
p1881
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'ecx_2', 'edx_1']"
p1882
aS'ecx_2#3 = edx_1#2'
p1883
aS'ecx_2 = edx_1'
p1884
aS'None'
p1885
aS'edx#3:eax#24 = muls.dp.d(eax#23, ecx#4)'
p1886
ag10
ag1627
aS'{}'
p1887
aS"['<MLIL_MULS_DP 4>', '<MLIL_SET_VAR_SPLIT 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_19', 'eax_20', 'ecx_2', 'edx_2']"
p1888
aS"['<MLIL_MULS_DP 4>', '<MLIL_SET_VAR_SPLIT 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_19', 'eax_20', 'ecx_2', 'edx_2']"
p1889
aS'edx_2#3:eax_20#24 = muls.dp.d(eax_19#23, ecx_2#3)'
p1890
aS'edx_2:eax_20 = muls.dp.d(eax_19, ecx_2)'
p1891
aS'None'
p1892
aS'temp0#1.d = divs.dp.d(edx#3:eax#24, ecx#5)'
p1893
ag10
ag1627
aS'{}'
p1894
aS"['9', '<MLIL_CONST 4>', '<MLIL_DIVS_DP 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR_SPLIT 4>', 'eax_20', 'edx_2', 'temp0']"
p1895
aS"['9', '<MLIL_CONST 4>', '<MLIL_DIVS_DP 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR_SPLIT 4>', 'eax_20', 'edx_2', 'temp0']"
p1896
aS'temp0#1 = divs.dp.d(edx_2#3:eax_20#24, 9)'
p1897
aS'temp0 = divs.dp.d(edx_2:eax_20, 9)'
p1898
aS'None'
p1899
aS'temp1#1.d = mods.dp.d(edx#3:eax#24, ecx#5)'
p1900
ag10
ag1627
aS'{}'
p1901
aS"['9', '<MLIL_CONST 4>', '<MLIL_MODS_DP 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR_SPLIT 4>', 'eax_20', 'edx_2', 'temp1']"
p1902
aS"['9', '<MLIL_CONST 4>', '<MLIL_MODS_DP 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR_SPLIT 4>', 'eax_20', 'edx_2', 'temp1']"
p1903
aS'temp1#1 = mods.dp.d(edx_2#3:eax_20#24, 9)'
p1904
aS'temp1 = mods.dp.d(edx_2:eax_20, 9)'
p1905
aS'None'
p1906
aS'eax#25 = temp0#1.d'
p1907
ag10
ag1627
aS'{}'
p1908
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_21', 'temp0']"
p1909
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_21', 'temp0']"
p1910
aS'eax_21#25 = temp0#1'
p1911
aS'eax_21 = temp0'
p1912
aS'None'
p1913
aS'edx#4 = temp1#1.d'
p1914
ag10
ag1627
aS'{}'
p1915
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'edx_3', 'temp1']"
p1916
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'edx_3', 'temp1']"
p1917
aS'edx_3#4 = temp1#1'
p1918
aS'edx_3 = temp1'
p1919
aS'None'
p1920
aS'[0x2000].d = [0x2000].d @ mem#10 + edx#4 @ mem#10 -> mem#11'
p1921
ag10
ag1627
aS'{}'
p1922
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'edx_3']"
p1923
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'edx_3']"
p1924
aS'[0x2000].d = [0x2000].d @ mem#7 + edx_3#4 @ mem#7 -> mem#8'
p1925
aS'[0x2000].d = [0x2000].d + edx_3'
p1926
aS'None'
p1927
aS'edx#5:eax#26 = sx.q(eax#25)'
p1928
ag10
ag1627
aS'{}'
p1929
aS"['<MLIL_SET_VAR_SPLIT 4>', '<MLIL_SX 8>', '<MLIL_VAR 4>', 'eax_21', 'eax_22', 'edx_4']"
p1930
aS"['<MLIL_SET_VAR_SPLIT 4>', '<MLIL_SX 8>', '<MLIL_VAR 4>', 'eax_21', 'eax_22', 'edx_4']"
p1931
aS'edx_4#5:eax_22#26 = sx.q(eax_21#25)'
p1932
aS'edx_4:eax_22 = sx.q(eax_21)'
p1933
aS'None'
p1934
aS'temp0#2.d = divu.dp.d(edx#5:eax#26, ecx#6)'
p1935
ag10
ag1627
aS'{}'
p1936
aS"['3', '<MLIL_CONST 4>', '<MLIL_DIVU_DP 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR_SPLIT 4>', 'eax_22', 'edx_4', 'temp0_1']"
p1937
aS"['3', '<MLIL_CONST 4>', '<MLIL_DIVU_DP 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR_SPLIT 4>', 'eax_22', 'edx_4', 'temp0_1']"
p1938
aS'temp0_1#2 = divu.dp.d(edx_4#5:eax_22#26, 3)'
p1939
aS'temp0_1 = divu.dp.d(edx_4:eax_22, 3)'
p1940
aS'None'
p1941
aS'temp1#2.d = modu.dp.d(edx#5:eax#26, ecx#6)'
p1942
ag10
ag1627
aS'{}'
p1943
aS"['3', '<MLIL_CONST 4>', '<MLIL_MODU_DP 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR_SPLIT 4>', 'eax_22', 'edx_4', 'temp1_1']"
p1944
aS"['3', '<MLIL_CONST 4>', '<MLIL_MODU_DP 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR_SPLIT 4>', 'eax_22', 'edx_4', 'temp1_1']"
p1945
aS'temp1_1#2 = modu.dp.d(edx_4#5:eax_22#26, 3)'
p1946
aS'temp1_1 = modu.dp.d(edx_4:eax_22, 3)'
p1947
aS'None'
p1948
aS'eax#27 = temp0#2.d'
p1949
ag10
ag1627
aS'{}'
p1950
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_23', 'temp0_1']"
p1951
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_23', 'temp0_1']"
p1952
aS'eax_23#27 = temp0_1#2'
p1953
aS'eax_23 = temp0_1'
p1954
aS'None'
p1955
aS'edx#6 = temp1#2.d'
p1956
ag10
ag1627
aS'{}'
p1957
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'edx_5', 'temp1_1']"
p1958
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'edx_5', 'temp1_1']"
p1959
aS'edx_5#6 = temp1_1#2'
p1960
aS'edx_5 = temp1_1'
p1961
aS'None'
p1962
aS'[0x2000].d = [0x2000].d @ mem#11 + edx#6 @ mem#11 -> mem#12'
p1963
ag10
ag1627
aS'{}'
p1964
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'edx_5']"
p1965
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'edx_5']"
p1966
aS'[0x2000].d = [0x2000].d @ mem#8 + edx_5#6 @ mem#8 -> mem#9'
p1967
aS'[0x2000].d = [0x2000].d + edx_5'
p1968
aS'None'
p1969
aS'[0x2000].d = [0x2000].d @ mem#12 + eax#27 @ mem#12 -> mem#13'
p1970
ag10
ag1627
aS'{}'
p1971
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_23']"
p1972
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_23']"
p1973
aS'[0x2000].d = [0x2000].d @ mem#9 + eax_23#27 @ mem#9 -> mem#10'
p1974
aS'[0x2000].d = [0x2000].d + eax_23'
p1975
aS'None'
p1976
aS'eax#28 = neg.d(eax#27)'
p1977
ag10
ag1627
aS'{}'
p1978
aS"['<MLIL_NEG 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_23', 'eax_24']"
p1979
aS"['<MLIL_NEG 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_23', 'eax_24']"
p1980
aS'eax_24#28 = neg.d(eax_23#27)'
p1981
aS'eax_24 = neg.d(eax_23)'
p1982
aS'None'
p1983
aS'eax#29 = not.d(eax#28)'
p1984
ag10
ag1627
aS'{}'
p1985
aS"['<MLIL_NOT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_24', 'eax_25']"
p1986
aS"['<MLIL_NOT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_24', 'eax_25']"
p1987
aS'eax_25#29 = not.d(eax_24#28)'
p1988
aS'eax_25 = not.d(eax_24)'
p1989
aS'None'
p1990
aS'[0x2000].d = [0x2000].d @ mem#13 + eax#29 @ mem#13 -> mem#14'
p1991
ag10
ag1627
aS'{}'
p1992
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_25']"
p1993
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_25']"
p1994
aS'[0x2000].d = [0x2000].d @ mem#10 + eax_25#29 @ mem#10 -> mem#11'
p1995
aS'[0x2000].d = [0x2000].d + eax_25'
p1996
aS'None'
p1997
aS'eax#30 = sx.d(eax#29.ax)'
p1998
ag10
ag1627
aS'{}'
p1999
aS"['0', '<MLIL_SET_VAR 4>', '<MLIL_SX 4>', '<MLIL_VAR_FIELD 2>', 'eax_25', 'eax_26']"
p2000
aS"['0', '<MLIL_SET_VAR 4>', '<MLIL_SX 4>', '<MLIL_VAR_FIELD 2>', 'eax_25', 'eax_26']"
p2001
aS'eax_26#30 = sx.d(eax_25#29.ax)'
p2002
aS'eax_26 = sx.d(eax_25.ax)'
p2003
aS'None'
p2004
aS'edx#7 = zx.d(edx#6.dx)'
p2005
ag10
ag1627
aS'{}'
p2006
aS"['0', '<MLIL_SET_VAR 4>', '<MLIL_VAR_FIELD 2>', '<MLIL_ZX 4>', 'edx_5', 'edx_6']"
p2007
aS"['0', '<MLIL_SET_VAR 4>', '<MLIL_VAR_FIELD 2>', '<MLIL_ZX 4>', 'edx_5', 'edx_6']"
p2008
aS'edx_6#7 = zx.d(edx_5#6.dx)'
p2009
aS'edx_6 = zx.d(edx_5.dx)'
p2010
aS'None'
p2011
aS'eax#31 = eax#30 + edx#7'
p2012
ag10
ag1627
aS'{}'
p2013
aS"['<MLIL_ADD 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_26', 'eax_27', 'edx_6']"
p2014
aS"['<MLIL_ADD 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_26', 'eax_27', 'edx_6']"
p2015
aS'eax_27#31 = eax_26#30 + edx_6#7'
p2016
aS'eax_27 = eax_26 + edx_6'
p2017
aS'None'
p2018
aS'[0x2000].d = [0x2000].d @ mem#14 + eax#31 @ mem#14 -> mem#15'
p2019
ag10
ag1627
aS'{}'
p2020
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_27']"
p2021
aS"['8192', '8192', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_27']"
p2022
aS'[0x2000].d = [0x2000].d @ mem#11 + eax_27#31 @ mem#11 -> mem#12'
p2023
aS'[0x2000].d = [0x2000].d + eax_27'
p2024
aS'None'
p2025
aS'eax#32 = [0x2000].d @ mem#15'
p2026
ag10
ag1627
aS'{}'
p2027
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_SET_VAR 4>', 'eax_28']"
p2028
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_SET_VAR 4>', 'eax_28']"
p2029
aS'eax_28#32 = [0x2000].d @ mem#12'
p2030
aS'eax_28 = [0x2000].d'
p2031
aS'None'
p2032
aS'eax#33 = eax#32 & 0x10'
p2033
ag10
ag1627
aS'{}'
p2034
aS"['16', '<MLIL_AND 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_28', 'eax_29']"
p2035
aS"['16', '<MLIL_AND 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_28', 'eax_29']"
p2036
aS'eax_29#33 = eax_28#32 & 0x10'
p2037
aS'eax_29 = eax_28 & 0x10'
p2038
aS'None'
p2039
aS'if (eax#33 == 0) then 78 @ 0x1fed else 80 @ 0x1f2d'
p2040
ag10
ag1627
aS'{}'
p2041
aS"['0', '60', '62', '<MLIL_CMP_E 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_29']"
p2042
aS"['0', '60', '62', '<MLIL_CMP_E 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_29']"
p2043
aS'if (eax_29#33 == 0) then 60 @ 0x1fed else 62 @ 0x1f2d'
p2044
aS'if (eax_29 == 0) then 60 @ 0x1fed else 62 @ 0x1f2d'
p2045
aS'None'
p2046
aS'eax#34 = [0x2000].d @ mem#15'
p2047
ag10
ag1627
aS'{59L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2048
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_SET_VAR 4>', 'eax_34']"
p2049
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_SET_VAR 4>', 'eax_34']"
p2050
aS'eax_34#34 = [0x2000].d @ mem#12'
p2051
aS'eax_34 = [0x2000].d'
p2052
aS'None'
p2053
aS'jump(eax#34)'
p2054
ag10
ag1627
aS'{59L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2055
aS"['<MLIL_JUMP>', '<MLIL_VAR 4>', 'eax_34']"
p2056
aS"['<MLIL_JUMP>', '<MLIL_VAR 4>', 'eax_34']"
p2057
aS'jump(eax_34#34)'
p2058
aS'jump(eax_34)'
p2059
aS'None'
p2060
aS'eax#35 = eax#33 & 0x1'
p2061
ag10
ag1627
aS'{59L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2062
aS"['1', '<MLIL_AND 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_29', 'eax_30']"
p2063
aS"['1', '<MLIL_AND 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_29', 'eax_30']"
p2064
aS'eax_30#35 = eax_29#33 & 1'
p2065
aS'eax_30 = eax_29 & 1'
p2066
aS'None'
p2067
aS'eax#36 = [(eax#35 << 2) + 0x1f3b].d @ mem#15'
p2068
ag10
ag1627
aS'{59L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2069
aS"['2', '7995', '<MLIL_ADD 4>', '<MLIL_CONST 1>', '<MLIL_CONST 4>', '<MLIL_LOAD 4>', '<MLIL_LSL 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_30', 'eax_31']"
p2070
aS"['2', '7995', '<MLIL_ADD 4>', '<MLIL_CONST 1>', '<MLIL_CONST 4>', '<MLIL_LOAD 4>', '<MLIL_LSL 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_30', 'eax_31']"
p2071
aS'eax_31#36 = [(eax_30#35 << 2) + 0x1f3b].d @ mem#12'
p2072
aS'eax_31 = [(eax_30 << 2) + 0x1f3b].d'
p2073
aS'None'
p2074
aS'jump(eax#36 => 83 @ 0x1f43)'
p2075
ag10
ag1627
aS'{59L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2076
aS"['<MLIL_JUMP_TO>', '<MLIL_VAR 4>', '[65L]', 'eax_31']"
p2077
aS"['<MLIL_JUMP_TO>', '<MLIL_VAR 4>', '[65L]', 'eax_31']"
p2078
aS'jump(eax_31#36 => 65 @ 0x1f43)'
p2079
aS'jump(eax_31 => 65 @ 0x1f43)'
p2080
aS'None'
p2081
aS'eax#37 = eax#36 + 1'
p2082
ag10
ag1627
aS'{59L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2083
aS"['1', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_31', 'eax_32']"
p2084
aS"['1', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_31', 'eax_32']"
p2085
aS'eax_32#37 = eax_31#36 + 1'
p2086
aS'eax_32 = eax_31 + 1'
p2087
aS'None'
p2088
aS'eax#38, ecx#7, edx#8, mem#16 = <return> tailcall(0x1f4f, stack = esp#6 @ mem#15, params = eax#37)'
p2089
ag10
ag1627
aS'{59L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2090
aS"['8015', '<MLIL_CONST_PTR 4>', '<MLIL_TAILCALL>', '[<il: eax_32>]', '[<var int32_t eax_33>, <var int32_t ecx_3>, <var int32_t edx_7>]']"
p2091
aS"['8015', '<MLIL_CONST_PTR 4>', '<MLIL_TAILCALL>', '[<il: eax_32>]', '[<var int32_t eax_33>, <var int32_t ecx_3>, <var int32_t edx_7>]']"
p2092
aS'return 0x1f4f(eax_32#37) __tailcall'
p2093
aS'return 0x1f4f(eax_32) __tailcall'
p2094
aS'None'
p2095
aS'[0x2000].d = eax#0 @ mem#0 -> mem#1'
p2096
ag10
ag1627
aS'{}'
p2097
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'arg1']"
p2098
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'arg1']"
p2099
aS'[0x2000].d = arg1#0 @ mem#0 -> mem#1'
p2100
aS'[0x2000].d = arg1'
p2101
aS'None'
p2102
aS'[esp#0 - 4].d = eax#0 @ mem#1 -> mem#2'
p2103
ag10
ag1627
aS'{}'
p2104
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'arg1', 'var_4']"
p2105
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'arg1', 'var_4']"
p2106
aS'var_4#1 = arg1#0'
p2107
aS'var_4 = arg1'
p2108
aS'None'
p2109
aS'eax#1, mem#4 = call(0x1ff7, stack = esp#2 @ mem#3)'
p2110
ag10
ag1627
aS'{}'
p2111
aS"['8183', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: 5>, <il: var_4>]', '[<var int32_t eax>]']"
p2112
aS"['8183', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: 5>, <il: var_4>]', '[<var int32_t eax>]']"
p2113
aS'eax#1, mem#2 = 0x1ff7(5, var_4#1) @ mem#1'
p2114
aS'eax = 0x1ff7(5, var_4)'
p2115
aS'None'
p2116
aS'[0x2000].d = eax#1 @ mem#4 -> mem#5'
p2117
ag10
ag1627
aS'{}'
p2118
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax']"
p2119
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax']"
p2120
aS'[0x2000].d = eax#1 @ mem#2 -> mem#3'
p2121
aS'[0x2000].d = eax'
p2122
aS'None'
p2123
aS'eax#2 = eax#1 & 0x80'
p2124
ag10
ag1627
aS'{}'
p2125
aS"['128', '<MLIL_AND 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'eax_1']"
p2126
aS"['128', '<MLIL_AND 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'eax_1']"
p2127
aS'eax_1#2 = eax#1 & 0x80'
p2128
aS'eax_1 = eax & 0x80'
p2129
aS'None'
p2130
aS'if (eax#2 != 0) then 10 @ 0x1f7b else 11 @ 0x1f71'
p2131
ag10
ag1627
aS'{}'
p2132
aS"['0', '6', '7', '<MLIL_CMP_NE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2133
aS"['0', '6', '7', '<MLIL_CMP_NE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2134
aS'if (eax_1#2 != 0) then 6 @ 0x1f7b else 7 @ 0x1f71'
p2135
aS'if (eax_1 != 0) then 6 @ 0x1f7b else 7 @ 0x1f71'
p2136
aS'None'
p2137
aS'if (eax#2 == 5) then 13 @ 0x1fc2 else 19 @ 0x1f82'
p2138
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2139
aS"['14', '5', '9', '<MLIL_CMP_E 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2140
aS"['14', '5', '9', '<MLIL_CMP_E 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2141
aS'if (eax_1#2 == 5) then 9 @ 0x0 else 10 @ 0x1f82'
p2142
aS'if (eax_1 == 5) then 9 @ 0x1fc2 else 14 @ 0x1f82'
p2143
aS'None'
p2144
aS'mem#11 = call(0x1ff4, stack = esp#3 @ mem#5)'
p2145
ag10
ag1627
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2146
aS"['8180', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[]', '[]']"
p2147
aS"['8180', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[]', '[]']"
p2148
aS'mem#7 = 0x1ff4() @ mem#3'
p2149
aS'0x1ff4()'
p2150
aS'None'
p2151
aS'noreturn'
p2152
ag10
ag1627
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2153
aS"['<MLIL_NORET>']"
p2154
aS"['<MLIL_NORET>']"
p2155
aS'noreturn'
p2156
aS'noreturn'
p2157
aS'None'
p2158
aS'[0x2000].d = eax#3 @ mem#5 -> mem#6'
p2159
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2160
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_1']"
p2161
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_1']"
p2162
aS'[0x2000].d = eax_1#4 @ mem#3 -> mem#4'
p2163
aS'[0x2000].d = eax_1'
p2164
aS'None'
p2165
aS'temp0#1.d = eax#3'
p2166
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2167
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'temp0']"
p2168
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'temp0']"
p2169
aS'temp0#1 = eax_1#4'
p2170
aS'temp0 = eax_1'
p2171
aS'None'
p2172
aS'eax#4 = temp0#1.d + 8'
p2173
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2174
aS"['8', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_2', 'temp0']"
p2175
aS"['8', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_2', 'temp0']"
p2176
aS'eax_2#5 = temp0#1 + 8'
p2177
aS'eax_2 = temp0 + 8'
p2178
aS'None'
p2179
aS'flag:o#1 = add_overflow(temp0#1.d, 8)'
p2180
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2181
aS"['8', '<MLIL_ADD_OVERFLOW>', '<MLIL_CONST 4>', '<MLIL_SET_VAR>', '<MLIL_VAR 4>', 'o', 'temp0']"
p2182
aS"['8', '<MLIL_ADD_OVERFLOW>', '<MLIL_CONST 4>', '<MLIL_SET_VAR>', '<MLIL_VAR 4>', 'o', 'temp0']"
p2183
aS'o#1 = add_overflow(temp0#1, 8)'
p2184
aS'o = add_overflow(temp0, 8)'
p2185
aS'None'
p2186
aS'if (not(flag:o#1)) then 20 @ 0x1fd0 else 23 @ 0x1fce'
p2187
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2188
aS"['15', '18', '<MLIL_IF>', '<MLIL_NOT>', '<MLIL_VAR>', 'o']"
p2189
aS"['15', '18', '<MLIL_IF>', '<MLIL_NOT>', '<MLIL_VAR>', 'o']"
p2190
aS'if (not(o#1)) then 19 @ 0x1fd0 else 22 @ 0x1fce'
p2191
aS'if (not(o)) then 15 @ 0x1fd0 else 18 @ 0x1fce'
p2192
aS'None'
p2193
aS'if (eax#2 != 8) then 24 @ 0x1f8e else 25 @ 0x1f84'
p2194
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>, 6L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2195
aS"['19', '20', '8', '<MLIL_CMP_NE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2196
aS"['19', '20', '8', '<MLIL_CMP_NE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2197
aS'if (eax_1#2 != 8) then 17 @ 0x1f8e else 18 @ 0x1f84'
p2198
aS'if (eax_1 != 8) then 19 @ 0x1f8e else 20 @ 0x1f84'
p2199
aS'None'
p2200
aS'[0x2000].d = eax#4 @ mem#6 -> mem#7'
p2201
ag10
ag1627
aS'{13L: <ILBranchDependence.TrueBranchDependent: 1>, 5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2202
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_2']"
p2203
aS"['8192', '<MLIL_CONST_PTR 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax_2']"
p2204
aS'[0x2000].d = eax_2#5 @ mem#4 -> mem#5'
p2205
aS'[0x2000].d = eax_2'
p2206
aS'None'
p2207
aS'eax#5 = eax#4 & 0x1'
p2208
ag10
ag1627
aS'{13L: <ILBranchDependence.TrueBranchDependent: 1>, 5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2209
aS"['1', '<MLIL_AND 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_2', 'eax_3']"
p2210
aS"['1', '<MLIL_AND 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_2', 'eax_3']"
p2211
aS'eax_3#6 = eax_2#5 & 1'
p2212
aS'eax_3 = eax_2 & 1'
p2213
aS'None'
p2214
aS'if (eax#5 == 0) then 26 @ 0x1fdf else 33 @ 0x1fdc'
p2215
ag10
ag1627
aS'{13L: <ILBranchDependence.TrueBranchDependent: 1>, 5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2216
aS"['0', '21', '23', '<MLIL_CMP_E 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_3']"
p2217
aS"['0', '21', '23', '<MLIL_CMP_E 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_3']"
p2218
aS'if (eax_3#6 == 0) then 25 @ 0x1fea else 27 @ 0x1fdc'
p2219
aS'if (eax_3 == 0) then 21 @ 0x1fea else 23 @ 0x1fdc'
p2220
aS'None'
p2221
aS'trap(6)'
p2222
ag10
ag1627
aS'{13L: <ILBranchDependence.FalseBranchDependent: 2>, 5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2223
aS"['6', '<MLIL_TRAP>']"
p2224
aS"['6', '<MLIL_TRAP>']"
p2225
aS'trap(6)'
p2226
aS'trap(6)'
p2227
aS'None'
p2228
aS'if (eax#2 s< 0xc) then 13 @ 0x1fc2 else 35 @ 0x1f95'
p2229
ag10
ag1627
aS'{6L: <ILBranchDependence.FalseBranchDependent: 2>, 14L: <ILBranchDependence.TrueBranchDependent: 1>, 5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2230
aS"['12', '25', '9', '<MLIL_CMP_SLT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2231
aS"['12', '25', '9', '<MLIL_CMP_SLT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2232
aS'if (eax_1#2 s< 0xc) then 23 @ 0x0 else 24 @ 0x1f95'
p2233
aS'if (eax_1 s< 0xc) then 9 @ 0x1fc2 else 25 @ 0x1f95'
p2234
aS'None'
p2235
aS'goto 13 @ 0x1fc2'
p2236
ag10
ag1627
aS'{6L: <ILBranchDependence.FalseBranchDependent: 2>, 5L: <ILBranchDependence.TrueBranchDependent: 1>, 14L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2237
aS"['9', '<MLIL_GOTO>']"
p2238
aS"['9', '<MLIL_GOTO>']"
p2239
aS'goto 11 @ 0x1fc2'
p2240
aS'goto 9 @ 0x1fc2'
p2241
aS'None'
p2242
aS'eax#7, edx#1, ecx#1, mem#10 = syscall(stack = esp#5 @ mem#9)'
p2243
ag10
ag1627
aS'{17L: <ILBranchDependence.TrueBranchDependent: 1>, 13L: <ILBranchDependence.TrueBranchDependent: 1>, 5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2244
aS"['<MLIL_SYSCALL>', '[<il: 1>, <il: 0>]', '[<var int32_t eax_5>]']"
p2245
aS"['<MLIL_SYSCALL>', '[<il: 1>, <il: 0>]', '[<var int32_t eax_5>]']"
p2246
aS'eax_5#7, mem#6 = syscall(1, 0) @ mem#5'
p2247
aS'eax_5 = syscall(1, 0)'
p2248
aS'None'
p2249
aS'<return> jump([esp#5].d @ mem#10)'
p2250
ag10
ag1627
aS'{17L: <ILBranchDependence.TrueBranchDependent: 1>, 13L: <ILBranchDependence.TrueBranchDependent: 1>, 5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2251
aS"['<MLIL_RET>', '[<il: eax_5>]']"
p2252
aS"['<MLIL_RET>', '[<il: eax_5>]']"
p2253
aS'return eax_5#7'
p2254
aS'return eax_5'
p2255
aS'None'
p2256
aS'eax#8 = 0'
p2257
ag10
ag1627
aS'{17L: <ILBranchDependence.FalseBranchDependent: 2>, 13L: <ILBranchDependence.TrueBranchDependent: 1>, 5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2258
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax_4']"
p2259
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax_4']"
p2260
aS'eax_4#8 = 0'
p2261
aS'eax_4 = 0'
p2262
aS'None'
p2263
aS'<return> jump([esp#3].d @ mem#7)'
p2264
ag10
ag1627
aS'{17L: <ILBranchDependence.FalseBranchDependent: 2>, 13L: <ILBranchDependence.TrueBranchDependent: 1>, 5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2265
aS"['<MLIL_RET>', '[<il: 0>]']"
p2266
aS"['<MLIL_RET>', '[<il: 0>]']"
p2267
aS'return 0'
p2268
aS'return 0'
p2269
aS'None'
p2270
aS'if (eax#2 u< 0xe) then 13 @ 0x1fc2 else 36 @ 0x1f9c'
p2271
ag10
ag1627
aS'{19L: <ILBranchDependence.FalseBranchDependent: 2>, 14L: <ILBranchDependence.TrueBranchDependent: 1>, 6L: <ILBranchDependence.FalseBranchDependent: 2>, 5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2272
aS"['14', '26', '9', '<MLIL_CMP_ULT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2273
aS"['14', '26', '9', '<MLIL_CMP_ULT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2274
aS'if (eax_1#2 u< 0xe) then 29 @ 0x0 else 30 @ 0x1f9c'
p2275
aS'if (eax_1 u< 0xe) then 9 @ 0x1fc2 else 26 @ 0x1f9c'
p2276
aS'None'
p2277
aS'if (eax#2 s<= 0x12) then 13 @ 0x1fc2 else 37 @ 0x1fa3'
p2278
ag10
ag1627
aS'{25L: <ILBranchDependence.FalseBranchDependent: 2>, 19L: <ILBranchDependence.FalseBranchDependent: 2>, 14L: <ILBranchDependence.TrueBranchDependent: 1>, 6L: <ILBranchDependence.FalseBranchDependent: 2>, 5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2279
aS"['18', '27', '9', '<MLIL_CMP_SLE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2280
aS"['18', '27', '9', '<MLIL_CMP_SLE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2281
aS'if (eax_1#2 s<= 0x12) then 31 @ 0x0 else 32 @ 0x1fa3'
p2282
aS'if (eax_1 s<= 0x12) then 9 @ 0x1fc2 else 27 @ 0x1fa3'
p2283
aS'None'
p2284
aS'if (eax#2 u<= 0x16) then 13 @ 0x1fc2 else 38 @ 0x1faa'
p2285
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>, 6L: <ILBranchDependence.FalseBranchDependent: 2>, 14L: <ILBranchDependence.TrueBranchDependent: 1>, 19L: <ILBranchDependence.FalseBranchDependent: 2>, 25L: <ILBranchDependence.FalseBranchDependent: 2>, 26L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2286
aS"['22', '28', '9', '<MLIL_CMP_ULE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2287
aS"['22', '28', '9', '<MLIL_CMP_ULE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2288
aS'if (eax_1#2 u<= 0x16) then 33 @ 0x0 else 34 @ 0x1faa'
p2289
aS'if (eax_1 u<= 0x16) then 9 @ 0x1fc2 else 28 @ 0x1faa'
p2290
aS'None'
p2291
aS'if (eax#2 s>= 0x28) then 13 @ 0x1fc2 else 39 @ 0x1fb1'
p2292
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>, 6L: <ILBranchDependence.FalseBranchDependent: 2>, 14L: <ILBranchDependence.TrueBranchDependent: 1>, 19L: <ILBranchDependence.FalseBranchDependent: 2>, 25L: <ILBranchDependence.FalseBranchDependent: 2>, 26L: <ILBranchDependence.FalseBranchDependent: 2>, 27L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2293
aS"['29', '40', '9', '<MLIL_CMP_SGE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2294
aS"['29', '40', '9', '<MLIL_CMP_SGE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2295
aS'if (eax_1#2 s>= 0x28) then 35 @ 0x0 else 36 @ 0x1fb1'
p2296
aS'if (eax_1 s>= 0x28) then 9 @ 0x1fc2 else 29 @ 0x1fb1'
p2297
aS'None'
p2298
aS'if (eax#2 u>= 0x24) then 13 @ 0x1fc2 else 40 @ 0x1fb8'
p2299
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>, 6L: <ILBranchDependence.FalseBranchDependent: 2>, 14L: <ILBranchDependence.TrueBranchDependent: 1>, 19L: <ILBranchDependence.FalseBranchDependent: 2>, 25L: <ILBranchDependence.FalseBranchDependent: 2>, 26L: <ILBranchDependence.FalseBranchDependent: 2>, 27L: <ILBranchDependence.FalseBranchDependent: 2>, 28L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2300
aS"['30', '36', '9', '<MLIL_CMP_UGE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2301
aS"['30', '36', '9', '<MLIL_CMP_UGE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2302
aS'if (eax_1#2 u>= 0x24) then 37 @ 0x0 else 38 @ 0x1fb8'
p2303
aS'if (eax_1 u>= 0x24) then 9 @ 0x1fc2 else 30 @ 0x1fb8'
p2304
aS'None'
p2305
aS'if (eax#2 s> 0x20) then 13 @ 0x1fc2 else 41 @ 0x1fbf'
p2306
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>, 6L: <ILBranchDependence.FalseBranchDependent: 2>, 14L: <ILBranchDependence.TrueBranchDependent: 1>, 19L: <ILBranchDependence.FalseBranchDependent: 2>, 25L: <ILBranchDependence.FalseBranchDependent: 2>, 26L: <ILBranchDependence.FalseBranchDependent: 2>, 27L: <ILBranchDependence.FalseBranchDependent: 2>, 28L: <ILBranchDependence.FalseBranchDependent: 2>, 29L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2307
aS"['31', '32', '9', '<MLIL_CMP_SGT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2308
aS"['31', '32', '9', '<MLIL_CMP_SGT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2309
aS'if (eax_1#2 s> 0x20) then 39 @ 0x0 else 40 @ 0x1fbf'
p2310
aS'if (eax_1 s> 0x20) then 9 @ 0x1fc2 else 31 @ 0x1fbf'
p2311
aS'None'
p2312
aS'if (eax#2 u> 0x1b) then 13 @ 0x1fc2 else 42 @ 0x1fc1'
p2313
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>, 6L: <ILBranchDependence.FalseBranchDependent: 2>, 14L: <ILBranchDependence.TrueBranchDependent: 1>, 19L: <ILBranchDependence.FalseBranchDependent: 2>, 25L: <ILBranchDependence.FalseBranchDependent: 2>, 26L: <ILBranchDependence.FalseBranchDependent: 2>, 27L: <ILBranchDependence.FalseBranchDependent: 2>, 28L: <ILBranchDependence.FalseBranchDependent: 2>, 29L: <ILBranchDependence.FalseBranchDependent: 2>, 30L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2314
aS"['27', '32', '9', '<MLIL_CMP_UGT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2315
aS"['27', '32', '9', '<MLIL_CMP_UGT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_1']"
p2316
aS'if (eax_1#2 u> 0x1b) then 41 @ 0x0 else 42 @ 0x1fc1'
p2317
aS'if (eax_1 u> 0x1b) then 9 @ 0x1fc2 else 32 @ 0x1fc1'
p2318
aS'None'
p2319
aS'eax#9 = eax#2 + 1'
p2320
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>, 6L: <ILBranchDependence.FalseBranchDependent: 2>, 14L: <ILBranchDependence.TrueBranchDependent: 1>, 19L: <ILBranchDependence.FalseBranchDependent: 2>, 25L: <ILBranchDependence.FalseBranchDependent: 2>, 26L: <ILBranchDependence.FalseBranchDependent: 2>, 27L: <ILBranchDependence.FalseBranchDependent: 2>, 28L: <ILBranchDependence.FalseBranchDependent: 2>, 29L: <ILBranchDependence.FalseBranchDependent: 2>, 30L: <ILBranchDependence.FalseBranchDependent: 2>, 31L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2321
aS"['1', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'eax_1']"
p2322
aS"['1', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'eax_1']"
p2323
aS'eax_1#3 = eax_1#2 + 1'
p2324
aS'eax_1 = eax_1 + 1'
p2325
aS'None'
p2326
aS'goto 13 @ 0x1fc2'
p2327
ag10
ag1627
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>, 6L: <ILBranchDependence.FalseBranchDependent: 2>, 14L: <ILBranchDependence.TrueBranchDependent: 1>, 19L: <ILBranchDependence.FalseBranchDependent: 2>, 25L: <ILBranchDependence.FalseBranchDependent: 2>, 26L: <ILBranchDependence.FalseBranchDependent: 2>, 27L: <ILBranchDependence.FalseBranchDependent: 2>, 28L: <ILBranchDependence.FalseBranchDependent: 2>, 29L: <ILBranchDependence.FalseBranchDependent: 2>, 30L: <ILBranchDependence.FalseBranchDependent: 2>, 31L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2328
aS"['9', '<MLIL_GOTO>']"
p2329
aS"['9', '<MLIL_GOTO>']"
p2330
aS'goto 11 @ 0x1fc2'
p2331
aS'goto 9 @ 0x1fc2'
p2332
aS'None'
p2333
aS'breakpoint'
p2334
ag10
ag1627
aS'{}'
p2335
aS"['<MLIL_BP>']"
p2336
aS"['<MLIL_BP>']"
p2337
aS'breakpoint'
p2338
aS'breakpoint'
p2339
aS'None'
p2340
aS'eax#1 = [esp#0 + 4].d @ mem#0'
p2341
ag10
ag1627
aS'{}'
p2342
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'testautovar']"
p2343
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'testautovar']"
p2344
aS'eax_1#1 = testautovar#0'
p2345
aS'eax_1 = testautovar'
p2346
aS'None'
p2347
aS'eax#2 = eax#1 + [esp#0 + 8].d @ mem#0'
p2348
ag10
ag1627
aS'{}'
p2349
aS"['<MLIL_ADD 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'arg2', 'eax', 'eax_1']"
p2350
aS"['<MLIL_ADD 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'arg2', 'eax', 'eax_1']"
p2351
aS'eax#2 = eax_1#1 + arg2#0'
p2352
aS'eax = eax_1 + arg2'
p2353
aS'None'
p2354
aS'<return> jump([esp#0].d @ mem#0)'
p2355
ag10
ag1627
aS'{}'
p2356
aS"['<MLIL_RET>', '[<il: eax>]']"
p2357
aS"['<MLIL_RET>', '[<il: eax>]']"
p2358
aS'return eax#2'
p2359
aS'return eax'
p2360
asS'test_function_symbol_names'
p2361
(lp2362
S'_main SymbolType.DataSymbol 0x1e5bL'
p2363
aS'cont SymbolType.DataSymbol 0x1f4fL'
p2364
aS'hang SymbolType.DataSymbol 0x1ff4L'
p2365
aS'addfunc SymbolType.DataSymbol 0x1ff7L'
p2366
asS'test_BinaryView'
p2367
(lp2368
S'void*'
p2369
aS'[<segment: 0x1000-0x2000, r-x>, <segment: 0x2000-0x3000, rw->, <segment: 0x3000-0x4000, r-->]'
p2370
aS"{'__text': <section __text: 0x1e5b-0x2000>, '__data': <section __data: 0x2000-0x2004>}"
p2371
aS'[<0x1000-0x4000>]'
p2372
aS'{}'
p2373
aS'4096'
p2374
aS'7808'
p2375
aS'8130'
p2376
aS'8003'
p2377
aS'8144'
p2378
aS'8192'
p2379
aS'7995'
p2380
aS'8183'
p2381
aS'8173'
p2382
aS'8015'
p2383
aS'8073'
p2384
aS'8180'
p2385
aS'8054'
p2386
aS'8009'
p2387
aS'7771'
p2388
aS'8159'
p2389
aS'<func: x86@0x1e5b>'
p2390
aS'<func: x86@0x1e5b>'
p2391
aS'<func: x86@0x1f4f>'
p2392
aS'<func: x86@0x1ff4>'
p2393
aS'<func: x86@0x1ff7>'
p2394
aS'0x1e5bL'
p2395
aS'0x1000L'
p2396
aS'length: 0x3000'
p2397
asS'test_available_types'
p2398
(lp2399
S'Raw'
p2400
aS'Mach-O'
p2401
asS'test_function_basic_blocks'
p2402
(lp2403
S'0x1e5bL 0x1f2dL False'
p2404
aS'0x1fedL 0x1ff4L True'
p2405
aS'0x1f2dL 0x1f3bL False'
p2406
aS'0x1f43L 0x1f49L False'
p2407
aS'0x1f4fL 0x1f71L False'
p2408
aS'0x1f76L 0x1f7dL False'
p2409
aS'0x1f71L 0x1f76L False'
p2410
aS'0x1fc2L 0x1fceL False'
p2411
aS'0x1f7dL 0x1f84L False'
p2412
aS'0x1fd0L 0x1fdcL False'
p2413
aS'0x1fceL 0x1fd0L True'
p2414
aS'0x1f89L 0x1f90L False'
p2415
aS'0x1f84L 0x1f89L False'
p2416
aS'0x1fdfL 0x1fedL True'
p2417
aS'0x1fdcL 0x1fdfL True'
p2418
aS'0x1f90L 0x1f97L False'
p2419
aS'0x1f97L 0x1f9eL False'
p2420
aS'0x1f9eL 0x1fa5L False'
p2421
aS'0x1fa5L 0x1facL False'
p2422
aS'0x1facL 0x1fb3L False'
p2423
aS'0x1fb3L 0x1fbaL False'
p2424
aS'0x1fbaL 0x1fc1L False'
p2425
aS'0x1fc1L 0x1fc2L False'
p2426
aS'0x1ff4L 0x1ff5L True'
p2427
aS'0x1ff7L 0x2000L True'
p2428
asS'test_function_med_il_basic_blocks'
p2429
(lp2430
S'0x0L 0x3cL 2'
p2431
aS'0x3cL 0x3eL 0'
p2432
aS'0x3eL 0x41L 1'
p2433
aS'0x41L 0x43L 0'
p2434
aS'0x0L 0x6L 2'
p2435
aS'0x6L 0x7L 2'
p2436
aS'0x7L 0x9L 0'
p2437
aS'0x9L 0xeL 2'
p2438
aS'0xeL 0xfL 2'
p2439
aS'0xfL 0x12L 2'
p2440
aS'0x12L 0x13L 0'
p2441
aS'0x13L 0x14L 2'
p2442
aS'0x14L 0x15L 1'
p2443
aS'0x15L 0x17L 0'
p2444
aS'0x17L 0x19L 0'
p2445
aS'0x19L 0x1aL 2'
p2446
aS'0x1aL 0x1bL 2'
p2447
aS'0x1bL 0x1cL 2'
p2448
aS'0x1cL 0x1dL 2'
p2449
aS'0x1dL 0x1eL 2'
p2450
aS'0x1eL 0x1fL 2'
p2451
aS'0x1fL 0x20L 2'
p2452
aS'0x20L 0x22L 1'
p2453
aS'0x0L 0x1L 0'
p2454
aS'0x0L 0x3L 0'
p2455
asS'test_symbols'
p2456
(lp2457
S'__mh_execute_header'
p2458
aS'_data'
p2459
aS'_main'
p2460
aS'addfunc'
p2461
aS'badjump'
p2462
aS'conddone'
p2463
aS'cont'
p2464
aS'geteip'
p2465
aS'hang'
p2466
aS'jumptable'
p2467
aS'nextcheck'
p2468
aS'nohang'
p2469
aS'onejump'
p2470
aS'overflow'
p2471
aS'syscallexit'
p2472
aS'zerojump'
p2473
asS'test_low_il_instructions'
p2474
(lp2475
S'eax_35 = testautovar'
p2476
aS'eax = testautovar'
p2477
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p2478
aS'[eax, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p2479
aS'eax#1 = [esp#0 + 4].d @ mem#0'
p2480
aS'eax = [esp + 4].d'
p2481
aS'edx:eax = sx.q(eax_35)'
p2482
aS'edx:eax = sx.q(eax)'
p2483
ag10
ag1627
aS'[<LLIL_SET_REG_SPLIT 4>, edx, eax, <LLIL_SX 8>, <LLIL_REG 4>, eax]'
p2484
aS'[edx, eax, eax, <LLIL_REG 4>, <LLIL_SX 8>, <LLIL_SET_REG_SPLIT 4>]'
p2485
aS'edx#1:eax#2 = sx.q(eax#1)'
p2486
aS'edx:eax = sx.q(eax)'
p2487
aS'None'
p2488
aS'd = 1'
p2489
ag10
ag1627
aS'[<LLIL_SET_FLAG>, d, <LLIL_CONST 1>, 1L]'
p2490
aS'[d, 1L, <LLIL_CONST 1>, <LLIL_SET_FLAG>]'
p2491
aS'flag:d#1 = 1'
p2492
aS'flag:d = 1'
p2493
aS'ecx = [0x2000].d'
p2494
aS'ecx = [0x2000].d'
p2495
ag10
ag1627
aS'[<LLIL_SET_REG 4>, ecx, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L]'
p2496
aS'[ecx, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p2497
aS'ecx#1 = [0x2000].d @ mem#0'
p2498
aS'ecx = [0x2000].d'
p2499
aS'ecx_1 = ecx + 1'
p2500
aS'ecx = ecx + 1'
p2501
ag10
ag1627
aS'[<LLIL_SET_REG 4>, ecx, <LLIL_ADD 4>, <LLIL_REG 4>, ecx, <LLIL_CONST 4>, 1L]'
p2502
aS'[ecx, ecx, <LLIL_REG 4>, 1L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p2503
aS'ecx#2 = ecx#1 + 1'
p2504
aS'ecx = ecx + 1'
p2505
aS'[0x2000].d = ecx_1'
p2506
aS'[0x2000].d = ecx'
p2507
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, ecx]'
p2508
aS'[8192L, <LLIL_CONST_PTR 4>, ecx, <LLIL_REG 4>, <LLIL_STORE 4>]'
p2509
aS'[0x2000].d = ecx#2 @ mem#0 -> mem#1'
p2510
aS'[0x2000].d = ecx'
p2511
aS'var_4 = ecx_1'
p2512
aS'var_4 = ecx'
p2513
ag10
ag1627
aS'[<LLIL_PUSH 4>, <LLIL_REG 4>, ecx]'
p2514
aS'[ecx, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p2515
aS'[esp#0 - 4].d = ecx#2 @ mem#1 -> mem#2'
p2516
aS'push(ecx)'
p2517
aS'eax_1 = var_4'
p2518
aS'eax = var_4'
p2519
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_POP 4>]'
p2520
aS'[eax, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p2521
aS'eax#3 = [esp#1].d @ mem#2'
p2522
aS'eax = pop'
p2523
aS'eax_2 = eax_1 + 0xa'
p2524
aS'eax = eax + 0xa'
p2525
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 10L]'
p2526
aS'[eax, eax, <LLIL_REG 4>, 10L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p2527
aS'eax#4 = eax#3 + 0xa'
p2528
aS'eax = eax + 0xa'
p2529
aS'[0x2000].d = [0x2000].d + eax_2'
p2530
aS'[0x2000].d = [0x2000].d + eax'
p2531
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p2532
aS'[8192L, <LLIL_CONST_PTR 4>, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, eax, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_STORE 4>]'
p2533
aS'[0x2000].d = [0x2000].d @ mem#2 + eax#4 @ mem#2 -> mem#3'
p2534
aS'[0x2000].d = [0x2000].d + eax'
p2535
aS'None'
p2536
aS'var_4 = 0x1e80'
p2537
ag10
ag1627
aS'[<LLIL_PUSH 4>, <LLIL_CONST_PTR 4>, 7808L]'
p2538
aS'[7808L, <LLIL_CONST_PTR 4>, <LLIL_PUSH 4>]'
p2539
aS'[esp#2 - 4].d = 0x1e80 @ mem#3 -> mem#4'
p2540
aS'push(0x1e80)'
p2541
aS'None'
p2542
aS'ebx = var_4'
p2543
ag10
ag1627
aS'[<LLIL_SET_REG 4>, ebx, <LLIL_POP 4>]'
p2544
aS'[ebx, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p2545
aS'ebx#1 = [esp#3].d @ mem#4'
p2546
aS'ebx = pop'
p2547
aS'temp2 = eax_2'
p2548
aS'temp2 = eax'
p2549
ag10
ag1627
aS'[<LLIL_SET_REG 4>, temp2, <LLIL_REG 4>, eax]'
p2550
aS'[temp2, eax, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p2551
aS'temp2#1.d = eax#4'
p2552
aS'temp2.d = eax'
p2553
aS'eax_3 = temp2 + 0x1e80'
p2554
aS'eax = temp2 + ebx'
p2555
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, temp2, <LLIL_REG 4>, ebx]'
p2556
aS'[eax, temp2, <LLIL_REG 4>, ebx, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p2557
aS'eax#5 = temp2#1.d + ebx#1'
p2558
aS'eax = temp2.d + ebx'
p2559
aS'None'
p2560
aS'c = temp2 + ebx u< temp2'
p2561
ag10
ag1627
aS'[<LLIL_SET_FLAG>, c, <LLIL_CMP_ULT 4>, <LLIL_ADD 4>, <LLIL_REG 4>, temp2, <LLIL_REG 4>, ebx, <LLIL_REG 4>, temp2]'
p2562
aS'[c, temp2, <LLIL_REG 4>, ebx, <LLIL_REG 4>, <LLIL_ADD 4>, temp2, <LLIL_REG 4>, <LLIL_CMP_ULT 4>, <LLIL_SET_FLAG>]'
p2563
aS'flag:c#1 = temp2#1.d + ebx#1 u< temp2#1.d'
p2564
aS'flag:c = temp2.d + ebx u< temp2.d'
p2565
aS'None'
p2566
aS'c = c ^ 1'
p2567
ag10
ag1627
aS'[<LLIL_SET_FLAG>, c, <LLIL_XOR 1>, <LLIL_FLAG>, c, <LLIL_CONST 1>, 1L]'
p2568
aS'[c, c, <LLIL_FLAG>, 1L, <LLIL_CONST 1>, <LLIL_XOR 1>, <LLIL_SET_FLAG>]'
p2569
aS'flag:c#2 = flag:c#1 ^ 0x1'
p2570
aS'flag:c = flag:c ^ 0x1'
p2571
aS'var_4_1 = (flag63 ? 1 : 0 << 0xb) | ((flag60 ? 1 : 0 << 0xa) | ((flag57 ? 1 : 0 << 7) | ((flag54 ? 1 : 0 << 6) | ((flag51 ? 1 : 0 << 4) | ((flag48 ? 1 : 0 << 2) | (flag46 ? 1 : 0 << 0))))))'
p2572
aS'var_4 = (flag63 ? 1 : 0 << 0xb) | ((flag60 ? 1 : 0 << 0xa) | ((flag57 ? 1 : 0 << 7) | ((flag54 ? 1 : 0 << 6) | ((flag51 ? 1 : 0 << 4) | ((flag48 ? 1 : 0 << 2) | (flag46 ? 1 : 0 << 0))))))'
p2573
ag10
ag1627
aS'[<LLIL_PUSH 4>, <LLIL_OR 4>, <LLIL_FLAG_BIT 4>, flag63, 11L, <LLIL_OR 4>, <LLIL_FLAG_BIT 4>, flag60, 10L, <LLIL_OR 4>, <LLIL_FLAG_BIT 4>, flag57, 7L, <LLIL_OR 4>, <LLIL_FLAG_BIT 4>, flag54, 6L, <LLIL_OR 4>, <LLIL_FLAG_BIT 4>, flag51, 4L, <LLIL_OR 4>, <LLIL_FLAG_BIT 4>, flag48, 2L, <LLIL_FLAG_BIT 4>, flag46, 0L]'
p2574
aS'[flag63, 11L, <LLIL_FLAG_BIT 4>, flag60, 10L, <LLIL_FLAG_BIT 4>, flag57, 7L, <LLIL_FLAG_BIT 4>, flag54, 6L, <LLIL_FLAG_BIT 4>, flag51, 4L, <LLIL_FLAG_BIT 4>, flag48, 2L, <LLIL_FLAG_BIT 4>, flag46, 0L, <LLIL_FLAG_BIT 4>, <LLIL_OR 4>, <LLIL_OR 4>, <LLIL_OR 4>, <LLIL_OR 4>, <LLIL_OR 4>, <LLIL_OR 4>, <LLIL_PUSH 4>]'
p2575
aS'[esp#4 - 4].d = flagbit.d(flag:flag63#0, 0xb) | (flagbit.d(flag:flag60#0, 0xa) | (flagbit.d(flag:flag57#0, 7) | (flagbit.d(flag:flag54#0, 6) | (flagbit.d(flag:flag51#0, 4) | (flagbit.d(flag:flag48#0, 2) | flagbit.d(flag:flag46#0, 0)))))) @ mem#4 -> mem#5'
p2576
aS'push(flagbit.d(flag:flag63, 0xb) | (flagbit.d(flag:flag60, 0xa) | (flagbit.d(flag:flag57, 7) | (flagbit.d(flag:flag54, 6) | (flagbit.d(flag:flag51, 4) | (flagbit.d(flag:flag48, 2) | flagbit.d(flag:flag46, 0)))))))'
p2577
aS'eax_4 = var_4_1'
p2578
aS'eax = var_4'
p2579
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_POP 4>]'
p2580
aS'[eax, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p2581
aS'eax#6 = [esp#5].d @ mem#5'
p2582
aS'eax = pop'
p2583
aS'[0x2000].d = [0x2000].d + eax_4'
p2584
aS'[0x2000].d = [0x2000].d + eax'
p2585
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p2586
aS'[8192L, <LLIL_CONST_PTR 4>, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, eax, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_STORE 4>]'
p2587
aS'[0x2000].d = [0x2000].d @ mem#5 + eax#6 @ mem#5 -> mem#6'
p2588
aS'[0x2000].d = [0x2000].d + eax'
p2589
aS'None'
p2590
aS'c = 1'
p2591
ag10
ag1627
aS'[<LLIL_SET_FLAG>, c, <LLIL_CONST 1>, 1L]'
p2592
aS'[c, 1L, <LLIL_CONST 1>, <LLIL_SET_FLAG>]'
p2593
aS'flag:c#3 = 1'
p2594
aS'flag:c = 1'
p2595
aS'eax_5 = adc.d(eax_4, eax_4, true)'
p2596
aS'eax = adc.d(eax, eax, true)'
p2597
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADC 4>, <LLIL_REG 4>, eax, <LLIL_REG 4>, eax, <LLIL_FLAG>, c]'
p2598
aS'[eax, eax, <LLIL_REG 4>, eax, <LLIL_REG 4>, c, <LLIL_FLAG>, <LLIL_ADC 4>, <LLIL_SET_REG 4>]'
p2599
aS'eax#7 = adc.d(eax#6, eax#6, flag:c#3)'
p2600
aS'eax = adc.d(eax, eax, flag:c)'
p2601
aS'ebx = eax_5'
p2602
aS'ebx = eax'
p2603
ag10
ag1627
aS'[<LLIL_SET_REG 4>, ebx, <LLIL_REG 4>, eax]'
p2604
aS'[ebx, eax, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p2605
aS'ebx#2 = eax#7'
p2606
aS'ebx = eax'
p2607
aS'None'
p2608
aS'c = 1'
p2609
ag10
ag1627
aS'[<LLIL_SET_FLAG>, c, <LLIL_CONST 1>, 1L]'
p2610
aS'[c, 1L, <LLIL_CONST 1>, <LLIL_SET_FLAG>]'
p2611
aS'flag:c#4 = 1'
p2612
aS'flag:c = 1'
p2613
aS'eax_6 = sbb.d(eax_5, eax_5, true)'
p2614
aS'eax = sbb.d(eax, eax, true)'
p2615
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_SBB 4>, <LLIL_REG 4>, eax, <LLIL_REG 4>, eax, <LLIL_FLAG>, c]'
p2616
aS'[eax, eax, <LLIL_REG 4>, eax, <LLIL_REG 4>, c, <LLIL_FLAG>, <LLIL_SBB 4>, <LLIL_SET_REG 4>]'
p2617
aS'eax#8 = sbb.d(eax#7, eax#7, flag:c#4)'
p2618
aS'eax = sbb.d(eax, eax, flag:c)'
p2619
aS'eax_7 = eax_6 - ebx'
p2620
aS'eax = eax - ebx'
p2621
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_SUB 4>, <LLIL_REG 4>, eax, <LLIL_REG 4>, ebx]'
p2622
aS'[eax, eax, <LLIL_REG 4>, ebx, <LLIL_REG 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p2623
aS'eax#9 = eax#8 - ebx#2'
p2624
aS'eax = eax - ebx'
p2625
aS'eax_8 = eax_7 & 0xffff'
p2626
aS'eax = eax & 0xffff'
p2627
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_AND 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 65535L]'
p2628
aS'[eax, eax, <LLIL_REG 4>, 65535L, <LLIL_CONST 4>, <LLIL_AND 4>, <LLIL_SET_REG 4>]'
p2629
aS'eax#10 = eax#9 & 0xffff'
p2630
aS'eax = eax & 0xffff'
p2631
aS'eax_9 = eax_8 | 0x5555'
p2632
aS'eax = eax | 0x5555'
p2633
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_OR 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 21845L]'
p2634
aS'[eax, eax, <LLIL_REG 4>, 21845L, <LLIL_CONST 4>, <LLIL_OR 4>, <LLIL_SET_REG 4>]'
p2635
aS'eax#11 = eax#10 | 0x5555'
p2636
aS'eax = eax | 0x5555'
p2637
aS'eax_10 = eax_9 ^ 0x8888'
p2638
aS'eax = eax ^ 0x8888'
p2639
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_XOR 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 34952L]'
p2640
aS'[eax, eax, <LLIL_REG 4>, 34952L, <LLIL_CONST 4>, <LLIL_XOR 4>, <LLIL_SET_REG 4>]'
p2641
aS'eax#12 = eax#11 ^ 0x8888'
p2642
aS'eax = eax ^ 0x8888'
p2643
aS'eax_11 = eax_10 << 0x10'
p2644
aS'eax = eax << 0x10'
p2645
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LSL 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 16L]'
p2646
aS'[eax, eax, <LLIL_REG 4>, 16L, <LLIL_CONST 1>, <LLIL_LSL 4>, <LLIL_SET_REG 4>]'
p2647
aS'eax#13 = eax#12 << 0x10'
p2648
aS'eax = eax << 0x10'
p2649
aS'[0x2000].d = [0x2000].d + eax_11'
p2650
aS'[0x2000].d = [0x2000].d + eax'
p2651
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p2652
aS'[8192L, <LLIL_CONST_PTR 4>, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, eax, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_STORE 4>]'
p2653
aS'[0x2000].d = [0x2000].d @ mem#6 + eax#13 @ mem#6 -> mem#7'
p2654
aS'[0x2000].d = [0x2000].d + eax'
p2655
aS'eax_12 = eax_11 s>> 4'
p2656
aS'eax = eax s>> 4'
p2657
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ASR 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 4L]'
p2658
aS'[eax, eax, <LLIL_REG 4>, 4L, <LLIL_CONST 1>, <LLIL_ASR 4>, <LLIL_SET_REG 4>]'
p2659
aS'eax#14 = eax#13 s>> 4'
p2660
aS'eax = eax s>> 4'
p2661
aS'eax_13 = eax_12 u>> 8'
p2662
aS'eax = eax u>> 8'
p2663
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LSR 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 8L]'
p2664
aS'[eax, eax, <LLIL_REG 4>, 8L, <LLIL_CONST 1>, <LLIL_LSR 4>, <LLIL_SET_REG 4>]'
p2665
aS'eax#15 = eax#14 u>> 8'
p2666
aS'eax = eax u>> 8'
p2667
aS'eax_14 = rol.d(eax_13, 0x10)'
p2668
aS'eax = rol.d(eax, 0x10)'
p2669
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ROL 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 16L]'
p2670
aS'[eax, eax, <LLIL_REG 4>, 16L, <LLIL_CONST 1>, <LLIL_ROL 4>, <LLIL_SET_REG 4>]'
p2671
aS'eax#16 = rol.d(eax#15, 0x10)'
p2672
aS'eax = rol.d(eax, 0x10)'
p2673
aS'[0x2000].d = [0x2000].d + eax_14'
p2674
aS'[0x2000].d = [0x2000].d + eax'
p2675
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p2676
aS'[8192L, <LLIL_CONST_PTR 4>, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, eax, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_STORE 4>]'
p2677
aS'[0x2000].d = [0x2000].d @ mem#7 + eax#16 @ mem#7 -> mem#8'
p2678
aS'[0x2000].d = [0x2000].d + eax'
p2679
aS'eax_15 = ror.d(eax_14, 8)'
p2680
aS'eax = ror.d(eax, 8)'
p2681
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ROR 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 8L]'
p2682
aS'[eax, eax, <LLIL_REG 4>, 8L, <LLIL_CONST 1>, <LLIL_ROR 4>, <LLIL_SET_REG 4>]'
p2683
aS'eax#17 = ror.d(eax#16, 8)'
p2684
aS'eax = ror.d(eax, 8)'
p2685
aS'None'
p2686
aS'c = 0'
p2687
ag10
ag1627
aS'[<LLIL_SET_FLAG>, c, <LLIL_CONST 1>, 0L]'
p2688
aS'[c, 0L, <LLIL_CONST 1>, <LLIL_SET_FLAG>]'
p2689
aS'flag:c#5 = 0'
p2690
aS'flag:c = 0'
p2691
aS'eax_16 = rrc.d(eax_15, 1, false)'
p2692
aS'eax = rrc.d(eax, 1, false)'
p2693
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_RRC 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 1L, <LLIL_FLAG>, c]'
p2694
aS'[eax, eax, <LLIL_REG 4>, 1L, <LLIL_CONST 1>, c, <LLIL_FLAG>, <LLIL_RRC 4>, <LLIL_SET_REG 4>]'
p2695
aS'eax#18 = rrc.d(eax#17, 1, flag:c#5)'
p2696
aS'eax = rrc.d(eax, 1, flag:c)'
p2697
aS'None'
p2698
aS'c = 1'
p2699
ag10
ag1627
aS'[<LLIL_SET_FLAG>, c, <LLIL_CONST 1>, 1L]'
p2700
aS'[c, 1L, <LLIL_CONST 1>, <LLIL_SET_FLAG>]'
p2701
aS'flag:c#6 = 1'
p2702
aS'flag:c = 1'
p2703
aS'eax_17 = rrc.d(eax_16, 1, true)'
p2704
aS'eax = rrc.d(eax, 1, true)'
p2705
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_RLC 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 1L, <LLIL_FLAG>, c]'
p2706
aS'[eax, eax, <LLIL_REG 4>, 1L, <LLIL_CONST 1>, c, <LLIL_FLAG>, <LLIL_RLC 4>, <LLIL_SET_REG 4>]'
p2707
aS'eax#19 = rlc.d(eax#18, 1, flag:c#6)'
p2708
aS'eax = rlc.d(eax, 1, flag:c)'
p2709
aS'[0x2000].d = [0x2000].d + eax_17'
p2710
aS'[0x2000].d = [0x2000].d + eax'
p2711
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p2712
aS'[8192L, <LLIL_CONST_PTR 4>, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, eax, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_STORE 4>]'
p2713
aS'[0x2000].d = [0x2000].d @ mem#8 + eax#19 @ mem#8 -> mem#9'
p2714
aS'[0x2000].d = [0x2000].d + eax'
p2715
aS'eax_17.al = 0x10'
p2716
aS'eax.al = 0x10'
p2717
ag10
ag1627
aS'[<LLIL_SET_REG 1>, al, <LLIL_CONST 1>, 16L]'
p2718
aS'[al, 16L, <LLIL_CONST 1>, <LLIL_SET_REG 1>]'
p2719
aS'eax#20.al = 0x10'
p2720
aS'al = 0x10'
p2721
aS'eax_17.al = eax_17.al + eax_17.ah'
p2722
aS'eax.al = eax.al + eax.ah'
p2723
ag10
ag1627
aS'[<LLIL_SET_REG 1>, al, <LLIL_ADD 1>, <LLIL_REG 1>, al, <LLIL_REG 1>, ah]'
p2724
aS'[al, al, <LLIL_REG 1>, ah, <LLIL_REG 1>, <LLIL_ADD 1>, <LLIL_SET_REG 1>]'
p2725
aS'eax#21.al = eax#20.al + eax#20.ah'
p2726
aS'al = al + ah'
p2727
aS'[0x2000].d = [0x2000].d + eax_17'
p2728
aS'[0x2000].d = [0x2000].d + eax'
p2729
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p2730
aS'[8192L, <LLIL_CONST_PTR 4>, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, eax, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_STORE 4>]'
p2731
aS'[0x2000].d = [0x2000].d @ mem#9 + eax#21 @ mem#9 -> mem#10'
p2732
aS'[0x2000].d = [0x2000].d + eax'
p2733
aS'eax_18 = eax_17 * eax_17'
p2734
aS'eax = eax * eax'
p2735
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_MUL 4>, <LLIL_REG 4>, eax, <LLIL_REG 4>, eax]'
p2736
aS'[eax, eax, <LLIL_REG 4>, eax, <LLIL_REG 4>, <LLIL_MUL 4>, <LLIL_SET_REG 4>]'
p2737
aS'eax#22 = eax#21 * eax#21'
p2738
aS'eax = eax * eax'
p2739
aS'None'
p2740
aS'ecx = 5'
p2741
ag10
ag1627
aS'[<LLIL_SET_REG 4>, ecx, <LLIL_CONST 4>, 5L]'
p2742
aS'[ecx, 5L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p2743
aS'ecx#3 = 5'
p2744
aS'ecx = 5'
p2745
aS'edx_1:eax_19 = mulu.dp.d(eax_18, 5)'
p2746
aS'edx:eax = mulu.dp.d(eax, 5)'
p2747
ag10
ag1627
aS'[<LLIL_SET_REG_SPLIT 4>, edx, eax, <LLIL_MULU_DP 4>, <LLIL_REG 4>, eax, <LLIL_REG 4>, ecx]'
p2748
aS'[edx, eax, eax, <LLIL_REG 4>, ecx, <LLIL_REG 4>, <LLIL_MULU_DP 4>, <LLIL_SET_REG_SPLIT 4>]'
p2749
aS'edx#2:eax#23 = mulu.dp.d(eax#22, ecx#3)'
p2750
aS'edx:eax = mulu.dp.d(eax, ecx)'
p2751
aS'ecx_2 = edx_1'
p2752
aS'ecx = edx'
p2753
ag10
ag1627
aS'[<LLIL_SET_REG 4>, ecx, <LLIL_REG 4>, edx]'
p2754
aS'[ecx, edx, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p2755
aS'ecx#4 = edx#2'
p2756
aS'ecx = edx'
p2757
aS'edx_2:eax_20 = muls.dp.d(eax_19, ecx_2)'
p2758
aS'edx:eax = muls.dp.d(eax, ecx)'
p2759
ag10
ag1627
aS'[<LLIL_SET_REG_SPLIT 4>, edx, eax, <LLIL_MULS_DP 4>, <LLIL_REG 4>, eax, <LLIL_REG 4>, ecx]'
p2760
aS'[edx, eax, eax, <LLIL_REG 4>, ecx, <LLIL_REG 4>, <LLIL_MULS_DP 4>, <LLIL_SET_REG_SPLIT 4>]'
p2761
aS'edx#3:eax#24 = muls.dp.d(eax#23, ecx#4)'
p2762
aS'edx:eax = muls.dp.d(eax, ecx)'
p2763
aS'None'
p2764
aS'ecx = 9'
p2765
ag10
ag1627
aS'[<LLIL_SET_REG 4>, ecx, <LLIL_CONST 4>, 9L]'
p2766
aS'[ecx, 9L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p2767
aS'ecx#5 = 9'
p2768
aS'ecx = 9'
p2769
aS'temp0 = divs.dp.d(edx_2:eax_20, 9)'
p2770
aS'temp0 = divs.dp.d(edx:eax, 9)'
p2771
ag10
ag1627
aS'[<LLIL_SET_REG 4>, temp0, <LLIL_DIVS_DP 4>, <LLIL_REG_SPLIT 4>, edx, eax, <LLIL_REG 4>, ecx]'
p2772
aS'[temp0, edx, eax, <LLIL_REG_SPLIT 4>, ecx, <LLIL_REG 4>, <LLIL_DIVS_DP 4>, <LLIL_SET_REG 4>]'
p2773
aS'temp0#1.d = divs.dp.d(edx#3:eax#24, ecx#5)'
p2774
aS'temp0.d = divs.dp.d(edx:eax, ecx)'
p2775
aS'temp1 = mods.dp.d(edx_2:eax_20, 9)'
p2776
aS'temp1 = mods.dp.d(edx:eax, 9)'
p2777
ag10
ag1627
aS'[<LLIL_SET_REG 4>, temp1, <LLIL_MODS_DP 4>, <LLIL_REG_SPLIT 4>, edx, eax, <LLIL_REG 4>, ecx]'
p2778
aS'[temp1, edx, eax, <LLIL_REG_SPLIT 4>, ecx, <LLIL_REG 4>, <LLIL_MODS_DP 4>, <LLIL_SET_REG 4>]'
p2779
aS'temp1#1.d = mods.dp.d(edx#3:eax#24, ecx#5)'
p2780
aS'temp1.d = mods.dp.d(edx:eax, ecx)'
p2781
aS'eax_21 = temp0'
p2782
aS'eax = temp0'
p2783
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_REG 4>, temp0]'
p2784
aS'[eax, temp0, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p2785
aS'eax#25 = temp0#1.d'
p2786
aS'eax = temp0.d'
p2787
aS'edx_3 = temp1'
p2788
aS'edx = temp1'
p2789
ag10
ag1627
aS'[<LLIL_SET_REG 4>, edx, <LLIL_REG 4>, temp1]'
p2790
aS'[edx, temp1, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p2791
aS'edx#4 = temp1#1.d'
p2792
aS'edx = temp1.d'
p2793
aS'[0x2000].d = [0x2000].d + edx_3'
p2794
aS'[0x2000].d = [0x2000].d + edx'
p2795
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, edx]'
p2796
aS'[8192L, <LLIL_CONST_PTR 4>, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, edx, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_STORE 4>]'
p2797
aS'[0x2000].d = [0x2000].d @ mem#10 + edx#4 @ mem#10 -> mem#11'
p2798
aS'[0x2000].d = [0x2000].d + edx'
p2799
aS'edx_4:eax_22 = sx.q(eax_21)'
p2800
aS'edx:eax = sx.q(eax)'
p2801
ag10
ag1627
aS'[<LLIL_SET_REG_SPLIT 4>, edx, eax, <LLIL_SX 8>, <LLIL_REG 4>, eax]'
p2802
aS'[edx, eax, eax, <LLIL_REG 4>, <LLIL_SX 8>, <LLIL_SET_REG_SPLIT 4>]'
p2803
aS'edx#5:eax#26 = sx.q(eax#25)'
p2804
aS'edx:eax = sx.q(eax)'
p2805
aS'None'
p2806
aS'ecx = 3'
p2807
ag10
ag1627
aS'[<LLIL_SET_REG 4>, ecx, <LLIL_CONST 4>, 3L]'
p2808
aS'[ecx, 3L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p2809
aS'ecx#6 = 3'
p2810
aS'ecx = 3'
p2811
aS'temp0_1 = divu.dp.d(edx_4:eax_22, 3)'
p2812
aS'temp0 = divu.dp.d(edx:eax, 3)'
p2813
ag10
ag1627
aS'[<LLIL_SET_REG 4>, temp0, <LLIL_DIVU_DP 4>, <LLIL_REG_SPLIT 4>, edx, eax, <LLIL_REG 4>, ecx]'
p2814
aS'[temp0, edx, eax, <LLIL_REG_SPLIT 4>, ecx, <LLIL_REG 4>, <LLIL_DIVU_DP 4>, <LLIL_SET_REG 4>]'
p2815
aS'temp0#2.d = divu.dp.d(edx#5:eax#26, ecx#6)'
p2816
aS'temp0.d = divu.dp.d(edx:eax, ecx)'
p2817
aS'temp1_1 = modu.dp.d(edx_4:eax_22, 3)'
p2818
aS'temp1 = modu.dp.d(edx:eax, 3)'
p2819
ag10
ag1627
aS'[<LLIL_SET_REG 4>, temp1, <LLIL_MODU_DP 4>, <LLIL_REG_SPLIT 4>, edx, eax, <LLIL_REG 4>, ecx]'
p2820
aS'[temp1, edx, eax, <LLIL_REG_SPLIT 4>, ecx, <LLIL_REG 4>, <LLIL_MODU_DP 4>, <LLIL_SET_REG 4>]'
p2821
aS'temp1#2.d = modu.dp.d(edx#5:eax#26, ecx#6)'
p2822
aS'temp1.d = modu.dp.d(edx:eax, ecx)'
p2823
aS'eax_23 = temp0_1'
p2824
aS'eax = temp0'
p2825
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_REG 4>, temp0]'
p2826
aS'[eax, temp0, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p2827
aS'eax#27 = temp0#2.d'
p2828
aS'eax = temp0.d'
p2829
aS'edx_5 = temp1_1'
p2830
aS'edx = temp1'
p2831
ag10
ag1627
aS'[<LLIL_SET_REG 4>, edx, <LLIL_REG 4>, temp1]'
p2832
aS'[edx, temp1, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p2833
aS'edx#6 = temp1#2.d'
p2834
aS'edx = temp1.d'
p2835
aS'[0x2000].d = [0x2000].d + edx_5'
p2836
aS'[0x2000].d = [0x2000].d + edx'
p2837
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, edx]'
p2838
aS'[8192L, <LLIL_CONST_PTR 4>, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, edx, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_STORE 4>]'
p2839
aS'[0x2000].d = [0x2000].d @ mem#11 + edx#6 @ mem#11 -> mem#12'
p2840
aS'[0x2000].d = [0x2000].d + edx'
p2841
aS'[0x2000].d = [0x2000].d + eax_23'
p2842
aS'[0x2000].d = [0x2000].d + eax'
p2843
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p2844
aS'[8192L, <LLIL_CONST_PTR 4>, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, eax, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_STORE 4>]'
p2845
aS'[0x2000].d = [0x2000].d @ mem#12 + eax#27 @ mem#12 -> mem#13'
p2846
aS'[0x2000].d = [0x2000].d + eax'
p2847
aS'eax_24 = neg.d(eax_23)'
p2848
aS'eax = neg.d(eax)'
p2849
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_NEG 4>, <LLIL_REG 4>, eax]'
p2850
aS'[eax, eax, <LLIL_REG 4>, <LLIL_NEG 4>, <LLIL_SET_REG 4>]'
p2851
aS'eax#28 = neg.d(eax#27)'
p2852
aS'eax = neg.d(eax)'
p2853
aS'eax_25 = not.d(eax_24)'
p2854
aS'eax = not.d(eax)'
p2855
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_NOT 4>, <LLIL_REG 4>, eax]'
p2856
aS'[eax, eax, <LLIL_REG 4>, <LLIL_NOT 4>, <LLIL_SET_REG 4>]'
p2857
aS'eax#29 = not.d(eax#28)'
p2858
aS'eax = not.d(eax)'
p2859
aS'[0x2000].d = [0x2000].d + eax_25'
p2860
aS'[0x2000].d = [0x2000].d + eax'
p2861
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p2862
aS'[8192L, <LLIL_CONST_PTR 4>, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, eax, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_STORE 4>]'
p2863
aS'[0x2000].d = [0x2000].d @ mem#13 + eax#29 @ mem#13 -> mem#14'
p2864
aS'[0x2000].d = [0x2000].d + eax'
p2865
aS'eax_26 = sx.d(eax_25.ax)'
p2866
aS'eax = sx.d(eax.ax)'
p2867
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_SX 4>, <LLIL_REG 2>, ax]'
p2868
aS'[eax, ax, <LLIL_REG 2>, <LLIL_SX 4>, <LLIL_SET_REG 4>]'
p2869
aS'eax#30 = sx.d(eax#29.ax)'
p2870
aS'eax = sx.d(ax)'
p2871
aS'edx_6 = zx.d(edx_5.dx)'
p2872
aS'edx = zx.d(edx.dx)'
p2873
ag10
ag1627
aS'[<LLIL_SET_REG 4>, edx, <LLIL_ZX 4>, <LLIL_REG 2>, dx]'
p2874
aS'[edx, dx, <LLIL_REG 2>, <LLIL_ZX 4>, <LLIL_SET_REG 4>]'
p2875
aS'edx#7 = zx.d(edx#6.dx)'
p2876
aS'edx = zx.d(dx)'
p2877
aS'eax_27 = eax_26 + edx_6'
p2878
aS'eax = eax + edx'
p2879
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, eax, <LLIL_REG 4>, edx]'
p2880
aS'[eax, eax, <LLIL_REG 4>, edx, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p2881
aS'eax#31 = eax#30 + edx#7'
p2882
aS'eax = eax + edx'
p2883
aS'[0x2000].d = [0x2000].d + eax_27'
p2884
aS'[0x2000].d = [0x2000].d + eax'
p2885
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p2886
aS'[8192L, <LLIL_CONST_PTR 4>, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, eax, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_STORE 4>]'
p2887
aS'[0x2000].d = [0x2000].d @ mem#14 + eax#31 @ mem#14 -> mem#15'
p2888
aS'[0x2000].d = [0x2000].d + eax'
p2889
aS'eax_28 = [0x2000].d'
p2890
aS'eax = [0x2000].d'
p2891
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L]'
p2892
aS'[eax, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p2893
aS'eax#32 = [0x2000].d @ mem#15'
p2894
aS'eax = [0x2000].d'
p2895
aS'eax_29 = eax_28 & 0x10'
p2896
aS'eax = eax & 0x10'
p2897
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_AND 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 16L]'
p2898
aS'[eax, eax, <LLIL_REG 4>, 16L, <LLIL_CONST 4>, <LLIL_AND 4>, <LLIL_SET_REG 4>]'
p2899
aS'eax#33 = eax#32 & 0x10'
p2900
aS'eax = eax & 0x10'
p2901
aS'None'
p2902
aS'if (eax == 0) then 78 @ 0x1fed else 80 @ 0x1f2d'
p2903
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_E 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 0L, 72L, 74L]'
p2904
aS'[eax, <LLIL_REG 4>, 0L, <LLIL_CONST 4>, <LLIL_CMP_E 4>, 72L, 74L, <LLIL_IF>]'
p2905
aS'if (eax#33 == 0) then 78 @ 0x1fed else 80 @ 0x1f2d'
p2906
aS'if (eax == 0) then 72 @ 0x1fed else 74 @ 0x1f2d'
p2907
aS'eax_34 = [0x2000].d'
p2908
aS'eax = [0x2000].d'
p2909
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8192L]'
p2910
aS'[eax, 8192L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p2911
aS'eax#34 = [0x2000].d @ mem#15'
p2912
aS'eax = [0x2000].d'
p2913
aS'None'
p2914
aS'jump(eax)'
p2915
ag10
ag1627
aS'[<LLIL_JUMP>, <LLIL_REG 4>, eax]'
p2916
aS'[eax, <LLIL_REG 4>, <LLIL_JUMP>]'
p2917
aS'jump(eax#34)'
p2918
aS'jump(eax)'
p2919
aS'eax_30 = eax_29 & 1'
p2920
aS'eax = eax & 1'
p2921
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_AND 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 1L]'
p2922
aS'[eax, eax, <LLIL_REG 4>, 1L, <LLIL_CONST 4>, <LLIL_AND 4>, <LLIL_SET_REG 4>]'
p2923
aS'eax#35 = eax#33 & 0x1'
p2924
aS'eax = eax & 0x1'
p2925
aS'eax_31 = [(eax_30 << 2) + 0x1f3b].d'
p2926
aS'eax = [(eax << 2) + 0x1f3b].d'
p2927
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_LSL 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 2L, <LLIL_CONST 4>, 7995L]'
p2928
aS'[eax, eax, <LLIL_REG 4>, 2L, <LLIL_CONST 1>, <LLIL_LSL 4>, 7995L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p2929
aS'eax#36 = [(eax#35 << 2) + 0x1f3b].d @ mem#15'
p2930
aS'eax = [(eax << 2) + 0x1f3b].d'
p2931
aS'None'
p2932
aS'jump(eax => 83 @ 0x1f43)'
p2933
ag10
ag1627
aS'[<LLIL_JUMP_TO>, <LLIL_REG 4>, eax, [77L]]'
p2934
aS'[eax, <LLIL_REG 4>, [77L], <LLIL_JUMP_TO>]'
p2935
aS'jump(eax#36 => 83 @ 0x1f43)'
p2936
aS'jump(eax => 77 @ 0x1f43)'
p2937
aS'eax_32 = eax_31 + 1'
p2938
aS'eax = eax + 1'
p2939
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 1L]'
p2940
aS'[eax, eax, <LLIL_REG 4>, 1L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p2941
aS'eax#37 = eax#36 + 1'
p2942
aS'eax = eax + 1'
p2943
aS'return 0x1f4f(eax_32) __tailcall'
p2944
aS'eax, ecx, edx = tailcall(0x1f4f, eax, stack = &arg_0)'
p2945
ag10
ag1627
aS'[<LLIL_TAILCALL>, <LLIL_CONST_PTR 4>, 8015L]'
p2946
aS'[8015L, <LLIL_CONST_PTR 4>, <LLIL_TAILCALL>]'
p2947
aS'eax#38, ecx#7, edx#8, mem#16 = <return> tailcall(0x1f4f, stack = esp#6 @ mem#15, params = eax#37)'
p2948
aS'<return> tailcall(0x1f4f)'
p2949
aS'[0x2000].d = arg1'
p2950
aS'[0x2000].d = arg1'
p2951
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p2952
aS'[8192L, <LLIL_CONST_PTR 4>, eax, <LLIL_REG 4>, <LLIL_STORE 4>]'
p2953
aS'[0x2000].d = eax#0 @ mem#0 -> mem#1'
p2954
aS'[0x2000].d = eax'
p2955
aS'var_4 = arg1'
p2956
aS'var_4 = arg1'
p2957
ag10
ag1627
aS'[<LLIL_PUSH 4>, <LLIL_REG 4>, eax]'
p2958
aS'[eax, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p2959
aS'[esp#0 - 4].d = eax#0 @ mem#1 -> mem#2'
p2960
aS'push(eax)'
p2961
aS'None'
p2962
aS'var_8 = 5'
p2963
ag10
ag1627
aS'[<LLIL_PUSH 4>, <LLIL_CONST 4>, 5L]'
p2964
aS'[5L, <LLIL_CONST 4>, <LLIL_PUSH 4>]'
p2965
aS'[esp#1 - 4].d = 5 @ mem#2 -> mem#3'
p2966
aS'push(5)'
p2967
aS'eax = 0x1ff7(5, var_4)'
p2968
aS'arg1 = call(0x1ff7, stack = &var_8)'
p2969
ag10
ag1627
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8183L, 0L, {}]'
p2970
aS'[8183L, <LLIL_CONST_PTR 4>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p2971
aS'eax#1, mem#4 = call(0x1ff7, stack = esp#2 @ mem#3)'
p2972
aS'call(0x1ff7)'
p2973
aS'None'
p2974
aS'esp = &arg_0'
p2975
ag10
ag1627
aS'[<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 8L]'
p2976
aS'[esp, esp, <LLIL_REG 4>, 8L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p2977
aS'esp#3 = esp#2 + 8'
p2978
aS'esp = esp + 8'
p2979
aS'[0x2000].d = eax'
p2980
aS'[0x2000].d = arg1'
p2981
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p2982
aS'[8192L, <LLIL_CONST_PTR 4>, eax, <LLIL_REG 4>, <LLIL_STORE 4>]'
p2983
aS'[0x2000].d = eax#1 @ mem#4 -> mem#5'
p2984
aS'[0x2000].d = eax'
p2985
aS'eax_1 = eax & 0x80'
p2986
aS'arg1 = arg1 & 0x80'
p2987
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_AND 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 128L]'
p2988
aS'[eax, eax, <LLIL_REG 4>, 128L, <LLIL_CONST 4>, <LLIL_AND 4>, <LLIL_SET_REG 4>]'
p2989
aS'eax#2 = eax#1 & 0x80'
p2990
aS'eax = eax & 0x80'
p2991
aS'None'
p2992
aS'if (arg1 != 0) then 10 @ 0x1f7b else 11 @ 0x1f71'
p2993
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_NE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 0L, 8L, 9L]'
p2994
aS'[eax, <LLIL_REG 4>, 0L, <LLIL_CONST 4>, <LLIL_CMP_NE 4>, 8L, 9L, <LLIL_IF>]'
p2995
aS'if (eax#2 != 0) then 10 @ 0x1f7b else 11 @ 0x1f71'
p2996
aS'if (eax != 0) then 8 @ 0x1f7b else 9 @ 0x1f71'
p2997
aS'None'
p2998
aS'if (arg1 == 5) then 13 @ 0x1fc2 else 18 @ 0x1f82'
p2999
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_E 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 5L, 11L, 16L]'
p3000
aS'[eax, <LLIL_REG 4>, 5L, <LLIL_CONST 4>, <LLIL_CMP_E 4>, 11L, 16L, <LLIL_IF>]'
p3001
aS'if (eax#2 == 5) then 13 @ 0x1fc2 else 19 @ 0x1f82'
p3002
aS'if (eax == 5) then 11 @ 0x1fc2 else 16 @ 0x1f82'
p3003
aS'0x1ff4()'
p3004
aS'call(0x1ff4, stack = &arg_0)'
p3005
ag10
ag1627
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8180L, 0L, {}]'
p3006
aS'[8180L, <LLIL_CONST_PTR 4>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p3007
aS'mem#11 = call(0x1ff4, stack = esp#3 @ mem#5)'
p3008
aS'call(0x1ff4)'
p3009
aS'None'
p3010
aS'noreturn'
p3011
ag10
ag1627
aS'[<LLIL_NORET>]'
p3012
aS'[<LLIL_NORET>]'
p3013
aS'noreturn'
p3014
aS'noreturn'
p3015
aS'[0x2000].d = eax_1'
p3016
aS'[0x2000].d = arg1'
p3017
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p3018
aS'[8192L, <LLIL_CONST_PTR 4>, eax, <LLIL_REG 4>, <LLIL_STORE 4>]'
p3019
aS'[0x2000].d = eax#3 @ mem#5 -> mem#6'
p3020
aS'[0x2000].d = eax'
p3021
aS'temp0 = eax_1'
p3022
aS'temp0 = arg1'
p3023
ag10
ag1627
aS'[<LLIL_SET_REG 4>, temp0, <LLIL_REG 4>, eax]'
p3024
aS'[temp0, eax, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p3025
aS'temp0#1.d = eax#3'
p3026
aS'temp0.d = eax'
p3027
aS'eax_2 = temp0 + 8'
p3028
aS'arg1 = temp0 + 8'
p3029
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, temp0, <LLIL_CONST 4>, 8L]'
p3030
aS'[eax, temp0, <LLIL_REG 4>, 8L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p3031
aS'eax#4 = temp0#1.d + 8'
p3032
aS'eax = temp0.d + 8'
p3033
aS'o = add_overflow(temp0, 8)'
p3034
aS'o = add_overflow(temp0, 8)'
p3035
ag10
ag1627
aS'[<LLIL_SET_FLAG>, o, <LLIL_ADD_OVERFLOW>, <LLIL_REG 4>, temp0, <LLIL_CONST 4>, 8L]'
p3036
aS'[o, temp0, <LLIL_REG 4>, 8L, <LLIL_CONST 4>, <LLIL_ADD_OVERFLOW>, <LLIL_SET_FLAG>]'
p3037
aS'flag:o#1 = add_overflow(temp0#1.d, 8)'
p3038
aS'flag:o = add_overflow(temp0.d, 8)'
p3039
aS'None'
p3040
aS'if (not(o)) then 19 @ 0x1fd0 else 22 @ 0x1fce'
p3041
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_NOT>, <LLIL_FLAG>, o, 17L, 20L]'
p3042
aS'[o, <LLIL_FLAG>, <LLIL_NOT>, 17L, 20L, <LLIL_IF>]'
p3043
aS'if (not(flag:o#1)) then 20 @ 0x1fd0 else 23 @ 0x1fce'
p3044
aS'if (not(flag:o)) then 17 @ 0x1fd0 else 20 @ 0x1fce'
p3045
aS'None'
p3046
aS'if (arg1 != 8) then 23 @ 0x1f8e else 24 @ 0x1f84'
p3047
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_NE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 8L, 21L, 22L]'
p3048
aS'[eax, <LLIL_REG 4>, 8L, <LLIL_CONST 4>, <LLIL_CMP_NE 4>, 21L, 22L, <LLIL_IF>]'
p3049
aS'if (eax#2 != 8) then 24 @ 0x1f8e else 25 @ 0x1f84'
p3050
aS'if (eax != 8) then 21 @ 0x1f8e else 22 @ 0x1f84'
p3051
aS'[0x2000].d = eax_2'
p3052
aS'[0x2000].d = arg1'
p3053
ag10
ag1627
aS'[<LLIL_STORE 4>, <LLIL_CONST_PTR 4>, 8192L, <LLIL_REG 4>, eax]'
p3054
aS'[8192L, <LLIL_CONST_PTR 4>, eax, <LLIL_REG 4>, <LLIL_STORE 4>]'
p3055
aS'[0x2000].d = eax#4 @ mem#6 -> mem#7'
p3056
aS'[0x2000].d = eax'
p3057
aS'eax_3 = eax_2 & 1'
p3058
aS'arg1 = arg1 & 1'
p3059
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_AND 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 1L]'
p3060
aS'[eax, eax, <LLIL_REG 4>, 1L, <LLIL_CONST 4>, <LLIL_AND 4>, <LLIL_SET_REG 4>]'
p3061
aS'eax#5 = eax#4 & 0x1'
p3062
aS'eax = eax & 0x1'
p3063
aS'None'
p3064
aS'if (arg1 == 0) then 25 @ 0x1fdf else 32 @ 0x1fdc'
p3065
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_E 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 0L, 23L, 28L]'
p3066
aS'[eax, <LLIL_REG 4>, 0L, <LLIL_CONST 4>, <LLIL_CMP_E 4>, 23L, 28L, <LLIL_IF>]'
p3067
aS'if (eax#5 == 0) then 26 @ 0x1fdf else 33 @ 0x1fdc'
p3068
aS'if (eax == 0) then 23 @ 0x1fdf else 28 @ 0x1fdc'
p3069
aS'None'
p3070
aS'trap(6)'
p3071
ag10
ag1627
aS'[<LLIL_TRAP>, 6L]'
p3072
aS'[6L, <LLIL_TRAP>]'
p3073
aS'trap(6)'
p3074
aS'trap(6)'
p3075
aS'None'
p3076
aS'if (arg1 s< 0xc) then 13 @ 0x1fc2 else 34 @ 0x1f95'
p3077
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_SLT 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 12L, 11L, 30L]'
p3078
aS'[eax, <LLIL_REG 4>, 12L, <LLIL_CONST 4>, <LLIL_CMP_SLT 4>, 11L, 30L, <LLIL_IF>]'
p3079
aS'if (eax#2 s< 0xc) then 13 @ 0x1fc2 else 35 @ 0x1f95'
p3080
aS'if (eax s< 0xc) then 11 @ 0x1fc2 else 30 @ 0x1f95'
p3081
aS'None'
p3082
aS'goto 13 @ 0x1fc2'
p3083
ag10
ag1627
aS'[<LLIL_GOTO>, 11L]'
p3084
aS'[11L, <LLIL_GOTO>]'
p3085
aS'goto 13 @ 0x1fc2'
p3086
aS'goto 11 @ 0x1fc2'
p3087
aS'None'
p3088
aS'arg1 = 1'
p3089
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 1L]'
p3090
aS'[eax, 1L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p3091
aS'eax#6 = 1'
p3092
aS'eax = 1'
p3093
aS'None'
p3094
aS'var_4 = 0'
p3095
ag10
ag1627
aS'[<LLIL_PUSH 4>, <LLIL_CONST 4>, 0L]'
p3096
aS'[0L, <LLIL_CONST 4>, <LLIL_PUSH 4>]'
p3097
aS'[esp#3 - 4].d = 0 @ mem#7 -> mem#8'
p3098
aS'push(0)'
p3099
aS'None'
p3100
aS'var_8 = 1'
p3101
ag10
ag1627
aS'[<LLIL_PUSH 4>, <LLIL_REG 4>, eax]'
p3102
aS'[eax, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p3103
aS'[esp#4 - 4].d = eax#6 @ mem#8 -> mem#9'
p3104
aS'push(eax)'
p3105
aS'eax_5 = syscall(1, 0)'
p3106
aS'arg1, edx, ecx = syscall(stack = &var_8)'
p3107
ag10
ag1627
aS'[<LLIL_SYSCALL>]'
p3108
aS'[<LLIL_SYSCALL>]'
p3109
aS'eax#7, edx#1, ecx#1, mem#10 = syscall(stack = esp#5 @ mem#9)'
p3110
aS'syscall'
p3111
aS'None'
p3112
aS'return '
p3113
ag10
ag1627
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p3114
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p3115
aS'<return> jump([esp#5].d @ mem#10)'
p3116
aS'<return> jump(pop)'
p3117
aS'eax_4 = 0'
p3118
aS'arg1 = 0'
p3119
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 0L]'
p3120
aS'[eax, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p3121
aS'eax#8 = 0'
p3122
aS'eax = 0'
p3123
aS'None'
p3124
aS'return '
p3125
ag10
ag1627
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p3126
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p3127
aS'<return> jump([esp#3].d @ mem#7)'
p3128
aS'<return> jump(pop)'
p3129
aS'None'
p3130
aS'if (arg1 u< 0xe) then 13 @ 0x1fc2 else 35 @ 0x1f9c'
p3131
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_ULT 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 14L, 11L, 31L]'
p3132
aS'[eax, <LLIL_REG 4>, 14L, <LLIL_CONST 4>, <LLIL_CMP_ULT 4>, 11L, 31L, <LLIL_IF>]'
p3133
aS'if (eax#2 u< 0xe) then 13 @ 0x1fc2 else 36 @ 0x1f9c'
p3134
aS'if (eax u< 0xe) then 11 @ 0x1fc2 else 31 @ 0x1f9c'
p3135
aS'None'
p3136
aS'if (arg1 s<= 0x12) then 13 @ 0x1fc2 else 36 @ 0x1fa3'
p3137
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_SLE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 18L, 11L, 32L]'
p3138
aS'[eax, <LLIL_REG 4>, 18L, <LLIL_CONST 4>, <LLIL_CMP_SLE 4>, 11L, 32L, <LLIL_IF>]'
p3139
aS'if (eax#2 s<= 0x12) then 13 @ 0x1fc2 else 37 @ 0x1fa3'
p3140
aS'if (eax s<= 0x12) then 11 @ 0x1fc2 else 32 @ 0x1fa3'
p3141
aS'None'
p3142
aS'if (arg1 u<= 0x16) then 13 @ 0x1fc2 else 37 @ 0x1faa'
p3143
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_ULE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 22L, 11L, 33L]'
p3144
aS'[eax, <LLIL_REG 4>, 22L, <LLIL_CONST 4>, <LLIL_CMP_ULE 4>, 11L, 33L, <LLIL_IF>]'
p3145
aS'if (eax#2 u<= 0x16) then 13 @ 0x1fc2 else 38 @ 0x1faa'
p3146
aS'if (eax u<= 0x16) then 11 @ 0x1fc2 else 33 @ 0x1faa'
p3147
aS'None'
p3148
aS'if (arg1 s>= 0x28) then 13 @ 0x1fc2 else 38 @ 0x1fb1'
p3149
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_SGE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 40L, 11L, 34L]'
p3150
aS'[eax, <LLIL_REG 4>, 40L, <LLIL_CONST 4>, <LLIL_CMP_SGE 4>, 11L, 34L, <LLIL_IF>]'
p3151
aS'if (eax#2 s>= 0x28) then 13 @ 0x1fc2 else 39 @ 0x1fb1'
p3152
aS'if (eax s>= 0x28) then 11 @ 0x1fc2 else 34 @ 0x1fb1'
p3153
aS'None'
p3154
aS'if (arg1 u>= 0x24) then 13 @ 0x1fc2 else 39 @ 0x1fb8'
p3155
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_UGE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 36L, 11L, 35L]'
p3156
aS'[eax, <LLIL_REG 4>, 36L, <LLIL_CONST 4>, <LLIL_CMP_UGE 4>, 11L, 35L, <LLIL_IF>]'
p3157
aS'if (eax#2 u>= 0x24) then 13 @ 0x1fc2 else 40 @ 0x1fb8'
p3158
aS'if (eax u>= 0x24) then 11 else 35 @ 0x1fb8'
p3159
aS'None'
p3160
aS'if (arg1 s> 0x20) then 13 @ 0x1fc2 else 40 @ 0x1fbf'
p3161
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_SGT 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 32L, 11L, 36L]'
p3162
aS'[eax, <LLIL_REG 4>, 32L, <LLIL_CONST 4>, <LLIL_CMP_SGT 4>, 11L, 36L, <LLIL_IF>]'
p3163
aS'if (eax#2 s> 0x20) then 13 @ 0x1fc2 else 41 @ 0x1fbf'
p3164
aS'if (eax s> 0x20) then 11 else 36 @ 0x1fbf'
p3165
aS'None'
p3166
aS'if (arg1 u> 0x1b) then 13 @ 0x1fc2 else 41 @ 0x1fc1'
p3167
ag10
ag1627
aS'[<LLIL_IF>, <LLIL_CMP_UGT 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 27L, 11L, 37L]'
p3168
aS'[eax, <LLIL_REG 4>, 27L, <LLIL_CONST 4>, <LLIL_CMP_UGT 4>, 11L, 37L, <LLIL_IF>]'
p3169
aS'if (eax#2 u> 0x1b) then 13 @ 0x1fc2 else 42 @ 0x1fc1'
p3170
aS'if (eax u> 0x1b) then 11 else 37 @ 0x1fc1'
p3171
aS'eax_1 = eax_1 + 1'
p3172
aS'arg1 = arg1 + 1'
p3173
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 1L]'
p3174
aS'[eax, eax, <LLIL_REG 4>, 1L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p3175
aS'eax#9 = eax#2 + 1'
p3176
aS'eax = eax + 1'
p3177
aS'None'
p3178
aS'goto 13 @ 0x1fc2'
p3179
ag10
ag1627
aS'[<LLIL_GOTO>, 11L]'
p3180
aS'[11L, <LLIL_GOTO>]'
p3181
aS'goto 13 @ 0x1fc2'
p3182
aS'goto 11 @ 0x1fc2'
p3183
aS'None'
p3184
aS'breakpoint'
p3185
ag10
ag1627
aS'[<LLIL_BP>]'
p3186
aS'[<LLIL_BP>]'
p3187
aS'breakpoint'
p3188
aS'breakpoint'
p3189
aS'eax_1 = testautovar'
p3190
aS'eax = testautovar'
p3191
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p3192
aS'[eax, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p3193
aS'eax#1 = [esp#0 + 4].d @ mem#0'
p3194
aS'eax = [esp + 4].d'
p3195
aS'eax = eax_1 + arg2'
p3196
aS'eax = eax + arg2'
p3197
ag10
ag1627
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 8L]'
p3198
aS'[eax, eax, <LLIL_REG 4>, esp, <LLIL_REG 4>, 8L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p3199
aS'eax#2 = eax#1 + [esp#0 + 8].d @ mem#0'
p3200
aS'eax = eax + [esp + 8].d'
p3201
aS'None'
p3202
aS'return '
p3203
ag10
ag1627
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p3204
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p3205
aS'<return> jump([esp#0].d @ mem#0)'
p3206
aS'<return> jump(pop)'
p3207
asS'test_med_il_vars'
p3208
(lp3209
S'None [0L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_35#1 = testautovar#0>>'
p3210
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_35#1 = testautovar#0>>'
p3211
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx#1:eax#2 = sx.q(eax_35#1)>>'
p3212
aS'1 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx#1:eax#2 = sx.q(eax_35#1)>>'
p3213
aS'1 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx#1:eax#2 = sx.q(eax_35#1)>>'
p3214
aS'2 [3L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ecx#1 = [0x2000].d @ mem#0>>'
p3215
aS'2 [3L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ecx_1#2 = ecx#1 + 1>>'
p3216
aS'3 [4L, 5L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ecx_1#2 = ecx#1 + 1>>'
p3217
aS'3 [4L, 5L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = ecx_1#2 @ mem#0 -> mem#1>>'
p3218
aS'3 [4L, 5L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = ecx_1#2>>'
p3219
aS'5 [6L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = ecx_1#2>>'
p3220
aS'5 [6L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#3 = var_4#1>>'
p3221
aS'6 [7L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#3 = var_4#1>>'
p3222
aS'6 [7L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#4 = eax_1#3 + 0xa>>'
p3223
aS'7 [8L, 9L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#4 = eax_1#3 + 0xa>>'
p3224
aS'7 [8L, 9L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = [0x2000].d @ mem#1 + eax_2#4 @ mem#1 -> mem#2>>'
p3225
aS'7 [8L, 9L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp2#1 = eax_2#4>>'
p3226
aS'9 [10L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp2#1 = eax_2#4>>'
p3227
aS'9 [10L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_3#5 = temp2#1 + 0x1e80>>'
p3228
aS'10 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_3#5 = temp2#1 + 0x1e80>>'
p3229
aS'None [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = (flag63#0 ? 1 : 0 << 0xb) | ((flag60#0 ? 1 : 0 << 0xa) | ((flag57#0 ? 1 : 0 << 7) | ((flag54#0 ? 1 : 0 << 6) | ((flag51#0 ? 1 : 0 << 4) | ((flag48#0 ? 1 : 0 << 2) | (flag46#0 ? 1 : 0 << 0))))))>>'
p3230
aS'None [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = (flag63#0 ? 1 : 0 << 0xb) | ((flag60#0 ? 1 : 0 << 0xa) | ((flag57#0 ? 1 : 0 << 7) | ((flag54#0 ? 1 : 0 << 6) | ((flag51#0 ? 1 : 0 << 4) | ((flag48#0 ? 1 : 0 << 2) | (flag46#0 ? 1 : 0 << 0))))))>>'
p3231
aS'None [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = (flag63#0 ? 1 : 0 << 0xb) | ((flag60#0 ? 1 : 0 << 0xa) | ((flag57#0 ? 1 : 0 << 7) | ((flag54#0 ? 1 : 0 << 6) | ((flag51#0 ? 1 : 0 << 4) | ((flag48#0 ? 1 : 0 << 2) | (flag46#0 ? 1 : 0 << 0))))))>>'
p3232
aS'None [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = (flag63#0 ? 1 : 0 << 0xb) | ((flag60#0 ? 1 : 0 << 0xa) | ((flag57#0 ? 1 : 0 << 7) | ((flag54#0 ? 1 : 0 << 6) | ((flag51#0 ? 1 : 0 << 4) | ((flag48#0 ? 1 : 0 << 2) | (flag46#0 ? 1 : 0 << 0))))))>>'
p3233
aS'None [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = (flag63#0 ? 1 : 0 << 0xb) | ((flag60#0 ? 1 : 0 << 0xa) | ((flag57#0 ? 1 : 0 << 7) | ((flag54#0 ? 1 : 0 << 6) | ((flag51#0 ? 1 : 0 << 4) | ((flag48#0 ? 1 : 0 << 2) | (flag46#0 ? 1 : 0 << 0))))))>>'
p3234
aS'None [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = (flag63#0 ? 1 : 0 << 0xb) | ((flag60#0 ? 1 : 0 << 0xa) | ((flag57#0 ? 1 : 0 << 7) | ((flag54#0 ? 1 : 0 << 6) | ((flag51#0 ? 1 : 0 << 4) | ((flag48#0 ? 1 : 0 << 2) | (flag46#0 ? 1 : 0 << 0))))))>>'
p3235
aS'None [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = (flag63#0 ? 1 : 0 << 0xb) | ((flag60#0 ? 1 : 0 << 0xa) | ((flag57#0 ? 1 : 0 << 7) | ((flag54#0 ? 1 : 0 << 6) | ((flag51#0 ? 1 : 0 << 4) | ((flag48#0 ? 1 : 0 << 2) | (flag46#0 ? 1 : 0 << 0))))))>>'
p3236
aS'11 [12L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = (flag63#0 ? 1 : 0 << 0xb) | ((flag60#0 ? 1 : 0 << 0xa) | ((flag57#0 ? 1 : 0 << 7) | ((flag54#0 ? 1 : 0 << 6) | ((flag51#0 ? 1 : 0 << 4) | ((flag48#0 ? 1 : 0 << 2) | (flag46#0 ? 1 : 0 << 0))))))>>'
p3237
aS'11 [12L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_4#6 = var_4_1#2>>'
p3238
aS'12 [13L, 14L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_4#6 = var_4_1#2>>'
p3239
aS'12 [13L, 14L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = [0x2000].d @ mem#2 + eax_4#6 @ mem#2 -> mem#3>>'
p3240
aS'12 [13L, 14L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_5#7 = adc.d(eax_4#6, eax_4#6, true)>>'
p3241
aS'12 [13L, 14L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_5#7 = adc.d(eax_4#6, eax_4#6, true)>>'
p3242
aS'14 [15L, 16L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_5#7 = adc.d(eax_4#6, eax_4#6, true)>>'
p3243
aS'14 [15L, 16L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ebx#1 = eax_5#7>>'
p3244
aS'15 [17L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ebx#1 = eax_5#7>>'
p3245
aS'14 [15L, 16L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_6#8 = sbb.d(eax_5#7, eax_5#7, true)>>'
p3246
aS'14 [15L, 16L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_6#8 = sbb.d(eax_5#7, eax_5#7, true)>>'
p3247
aS'16 [17L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_6#8 = sbb.d(eax_5#7, eax_5#7, true)>>'
p3248
aS'16 [17L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_7#9 = eax_6#8 - ebx#1>>'
p3249
aS'15 [17L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_7#9 = eax_6#8 - ebx#1>>'
p3250
aS'17 [18L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_7#9 = eax_6#8 - ebx#1>>'
p3251
aS'17 [18L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_8#10 = eax_7#9 & 0xffff>>'
p3252
aS'18 [19L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_8#10 = eax_7#9 & 0xffff>>'
p3253
aS'18 [19L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_9#11 = eax_8#10 | 0x5555>>'
p3254
aS'19 [20L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_9#11 = eax_8#10 | 0x5555>>'
p3255
aS'19 [20L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_10#12 = eax_9#11 ^ 0x8888>>'
p3256
aS'20 [21L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_10#12 = eax_9#11 ^ 0x8888>>'
p3257
aS'20 [21L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_11#13 = eax_10#12 << 0x10>>'
p3258
aS'21 [22L, 23L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_11#13 = eax_10#12 << 0x10>>'
p3259
aS'21 [22L, 23L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = [0x2000].d @ mem#3 + eax_11#13 @ mem#3 -> mem#4>>'
p3260
aS'21 [22L, 23L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_12#14 = eax_11#13 s>> 4>>'
p3261
aS'23 [24L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_12#14 = eax_11#13 s>> 4>>'
p3262
aS'23 [24L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_13#15 = eax_12#14 u>> 8>>'
p3263
aS'24 [25L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_13#15 = eax_12#14 u>> 8>>'
p3264
aS'24 [25L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_14#16 = rol.d(eax_13#15, 0x10)>>'
p3265
aS'25 [26L, 27L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_14#16 = rol.d(eax_13#15, 0x10)>>'
p3266
aS'25 [26L, 27L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = [0x2000].d @ mem#4 + eax_14#16 @ mem#4 -> mem#5>>'
p3267
aS'25 [26L, 27L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_15#17 = ror.d(eax_14#16, 8)>>'
p3268
aS'27 [28L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_15#17 = ror.d(eax_14#16, 8)>>'
p3269
aS'27 [28L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_16#18 = rrc.d(eax_15#17, 1, false)>>'
p3270
aS'28 [29L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_16#18 = rrc.d(eax_15#17, 1, false)>>'
p3271
aS'28 [29L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_17#19 = rrc.d(eax_16#18, 1, true)>>'
p3272
aS'29 [30L, 31L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_17#19 = rrc.d(eax_16#18, 1, true)>>'
p3273
aS'29 [30L, 31L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = [0x2000].d @ mem#5 + eax_17#19 @ mem#5 -> mem#6>>'
p3274
aS'29 [30L, 31L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_17#20.al = 0x10 @ eax_17#19>>'
p3275
aS'31 [32L] <undetermined> <const 0x10> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_17#20.al = 0x10 @ eax_17#19>>'
p3276
aS'31 [32L] <undetermined> <const 0x10> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_17#21.al = eax_17#20.al + eax_17#20.ah @ eax_17#20>>'
p3277
aS'31 [32L] <undetermined> <const 0x10> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_17#21.al = eax_17#20.al + eax_17#20.ah @ eax_17#20>>'
p3278
aS'31 [32L] <undetermined> <const 0x10> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_17#21.al = eax_17#20.al + eax_17#20.ah @ eax_17#20>>'
p3279
aS'32 [33L, 34L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_17#21.al = eax_17#20.al + eax_17#20.ah @ eax_17#20>>'
p3280
aS'32 [33L, 34L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = [0x2000].d @ mem#6 + eax_17#21 @ mem#6 -> mem#7>>'
p3281
aS'32 [33L, 34L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_18#22 = eax_17#21 * eax_17#21>>'
p3282
aS'32 [33L, 34L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_18#22 = eax_17#21 * eax_17#21>>'
p3283
aS'34 [35L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_18#22 = eax_17#21 * eax_17#21>>'
p3284
aS'34 [35L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_1#2:eax_19#23 = mulu.dp.d(eax_18#22, 5)>>'
p3285
aS'35 [36L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_1#2:eax_19#23 = mulu.dp.d(eax_18#22, 5)>>'
p3286
aS'35 [37L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_1#2:eax_19#23 = mulu.dp.d(eax_18#22, 5)>>'
p3287
aS'35 [36L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ecx_2#3 = edx_1#2>>'
p3288
aS'36 [37L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ecx_2#3 = edx_1#2>>'
p3289
aS'35 [37L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_2#3:eax_20#24 = muls.dp.d(eax_19#23, ecx_2#3)>>'
p3290
aS'36 [37L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_2#3:eax_20#24 = muls.dp.d(eax_19#23, ecx_2#3)>>'
p3291
aS'37 [38L, 39L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_2#3:eax_20#24 = muls.dp.d(eax_19#23, ecx_2#3)>>'
p3292
aS'37 [38L, 39L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_2#3:eax_20#24 = muls.dp.d(eax_19#23, ecx_2#3)>>'
p3293
aS'37 [38L, 39L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp0#1 = divs.dp.d(edx_2#3:eax_20#24, 9)>>'
p3294
aS'37 [38L, 39L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp0#1 = divs.dp.d(edx_2#3:eax_20#24, 9)>>'
p3295
aS'38 [40L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp0#1 = divs.dp.d(edx_2#3:eax_20#24, 9)>>'
p3296
aS'37 [38L, 39L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp1#1 = mods.dp.d(edx_2#3:eax_20#24, 9)>>'
p3297
aS'37 [38L, 39L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp1#1 = mods.dp.d(edx_2#3:eax_20#24, 9)>>'
p3298
aS'39 [41L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp1#1 = mods.dp.d(edx_2#3:eax_20#24, 9)>>'
p3299
aS'38 [40L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_21#25 = temp0#1>>'
p3300
aS'40 [43L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_21#25 = temp0#1>>'
p3301
aS'39 [41L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_3#4 = temp1#1>>'
p3302
aS'41 [42L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_3#4 = temp1#1>>'
p3303
aS'41 [42L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = [0x2000].d @ mem#7 + edx_3#4 @ mem#7 -> mem#8>>'
p3304
aS'40 [43L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_4#5:eax_22#26 = sx.q(eax_21#25)>>'
p3305
aS'43 [44L, 45L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_4#5:eax_22#26 = sx.q(eax_21#25)>>'
p3306
aS'43 [44L, 45L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_4#5:eax_22#26 = sx.q(eax_21#25)>>'
p3307
aS'43 [44L, 45L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp0_1#2 = divu.dp.d(edx_4#5:eax_22#26, 3)>>'
p3308
aS'43 [44L, 45L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp0_1#2 = divu.dp.d(edx_4#5:eax_22#26, 3)>>'
p3309
aS'44 [46L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp0_1#2 = divu.dp.d(edx_4#5:eax_22#26, 3)>>'
p3310
aS'43 [44L, 45L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp1_1#2 = modu.dp.d(edx_4#5:eax_22#26, 3)>>'
p3311
aS'43 [44L, 45L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp1_1#2 = modu.dp.d(edx_4#5:eax_22#26, 3)>>'
p3312
aS'45 [47L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp1_1#2 = modu.dp.d(edx_4#5:eax_22#26, 3)>>'
p3313
aS'44 [46L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_23#27 = temp0_1#2>>'
p3314
aS'46 [49L, 50L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_23#27 = temp0_1#2>>'
p3315
aS'45 [47L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_5#6 = temp1_1#2>>'
p3316
aS'47 [48L, 54L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_5#6 = temp1_1#2>>'
p3317
aS'47 [48L, 54L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = [0x2000].d @ mem#8 + edx_5#6 @ mem#8 -> mem#9>>'
p3318
aS'46 [49L, 50L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = [0x2000].d @ mem#9 + eax_23#27 @ mem#9 -> mem#10>>'
p3319
aS'46 [49L, 50L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_24#28 = neg.d(eax_23#27)>>'
p3320
aS'50 [51L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_24#28 = neg.d(eax_23#27)>>'
p3321
aS'50 [51L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_25#29 = not.d(eax_24#28)>>'
p3322
aS'51 [52L, 53L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_25#29 = not.d(eax_24#28)>>'
p3323
aS'51 [52L, 53L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = [0x2000].d @ mem#10 + eax_25#29 @ mem#10 -> mem#11>>'
p3324
aS'51 [52L, 53L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_26#30 = sx.d(eax_25#29.ax)>>'
p3325
aS'53 [55L] <undetermined> <signed ranges: [<range: -0x8000 to 0x7fff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_26#30 = sx.d(eax_25#29.ax)>>'
p3326
aS'47 [48L, 54L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_6#7 = zx.d(edx_5#6.dx)>>'
p3327
aS'54 [55L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: edx_6#7 = zx.d(edx_5#6.dx)>>'
p3328
aS'53 [55L] <undetermined> <signed ranges: [<range: -0x8000 to 0x7fff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_27#31 = eax_26#30 + edx_6#7>>'
p3329
aS'54 [55L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_27#31 = eax_26#30 + edx_6#7>>'
p3330
aS'55 [56L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_27#31 = eax_26#30 + edx_6#7>>'
p3331
aS'55 [56L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = [0x2000].d @ mem#11 + eax_27#31 @ mem#11 -> mem#12>>'
p3332
aS'57 [58L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_28#32 = [0x2000].d @ mem#12>>'
p3333
aS'57 [58L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_29#33 = eax_28#32 & 0x10>>'
p3334
aS'58 [59L, 62L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x10, step 0x10>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_29#33 = eax_28#32 & 0x10>>'
p3335
aS'58 [59L, 62L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x10, step 0x10>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_29#33 == 0) then 60 @ 0x1fed else 62 @ 0x1f2d>>'
p3336
aS'60 [61L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_34#34 = [0x2000].d @ mem#12>>'
p3337
aS'60 [61L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: jump(eax_34#34)>>'
p3338
aS'58 [59L, 62L] <undetermined> <const 0x10> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_30#35 = eax_29#33 & 1>>'
p3339
aS'62 [63L] <undetermined> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_30#35 = eax_29#33 & 1>>'
p3340
aS'62 [63L] <undetermined> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_31#36 = [(eax_30#35 << 2) + 0x1f3b].d @ mem#12>>'
p3341
aS'63 [64L, 65L] <undetermined> <const 0x1f43> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_31#36 = [(eax_30#35 << 2) + 0x1f3b].d @ mem#12>>'
p3342
aS'63 [64L, 65L] <undetermined> <const 0x1f43> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: jump(eax_31#36 => 65 @ 0x1f43)>>'
p3343
aS'63 [64L, 65L] <undetermined> <const 0x1f43> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_32#37 = eax_31#36 + 1>>'
p3344
aS'65 [66L] <undetermined> <const 0x1f44> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_32#37 = eax_31#36 + 1>>'
p3345
aS'65 [66L] <undetermined> <const 0x1f44> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return 0x1f4f(eax_32#37) __tailcall>>'
p3346
aS'66 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return 0x1f4f(eax_32#37) __tailcall>>'
p3347
aS'66 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return 0x1f4f(eax_32#37) __tailcall>>'
p3348
aS'66 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return 0x1f4f(eax_32#37) __tailcall>>'
p3349
aS'None [0L, 1L] <entry eax> <entry eax> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = arg1#0 @ mem#0 -> mem#1>>'
p3350
aS'None [0L, 1L] <entry eax> <entry eax> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = arg1#0>>'
p3351
aS'1 [2L] <entry eax> <entry eax> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = arg1#0>>'
p3352
aS'1 [2L] <entry eax> <entry eax> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1, mem#2 = 0x1ff7(5, var_4#1) @ mem#1>>'
p3353
aS'2 [3L, 4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1, mem#2 = 0x1ff7(5, var_4#1) @ mem#1>>'
p3354
aS'2 [3L, 4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = eax#1 @ mem#2 -> mem#3>>'
p3355
aS'2 [3L, 4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#2 = eax#1 & 0x80>>'
p3356
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x80, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#2 = eax#1 & 0x80>>'
p3357
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x80, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_1#2 != 0) then 6 @ 0x1f7b else 7 @ 0x1f71>>'
p3358
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <const 0x80> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_1#2 == 5) then 9 @ 0x0 else 10 @ 0x1f82>>'
p3359
aS'9 [9L, 10L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x80, step 0x80>, <range: 0x18 to 0x1c, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = eax_1#4 @ mem#3 -> mem#4>>'
p3360
aS'9 [9L, 10L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x80, step 0x80>, <range: 0x18 to 0x1c, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp0#1 = eax_1#4>>'
p3361
aS'10 [11L, 12L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x80, step 0x80>, <range: 0x18 to 0x1c, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: temp0#1 = eax_1#4>>'
p3362
aS'10 [11L, 12L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x80, step 0x80>, <range: 0x18 to 0x1c, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#5 = temp0#1 + 8>>'
p3363
aS'11 [15L, 16L] <undetermined> <unsigned ranges: [<range: 0x8 to 0x88, step 0x80>, <range: 0x20 to 0x24, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#5 = temp0#1 + 8>>'
p3364
aS'10 [11L, 12L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x80, step 0x80>, <range: 0x18 to 0x1c, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: o#1 = add_overflow(temp0#1, 8)>>'
p3365
aS'12 [13L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: o#1 = add_overflow(temp0#1, 8)>>'
p3366
aS'12 [13L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (not(o#1)) then 19 @ 0x1fd0 else 22 @ 0x1fce>>'
p3367
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <const 0x80> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_1#2 != 8) then 17 @ 0x1f8e else 18 @ 0x1f84>>'
p3368
aS'11 [15L, 16L] <undetermined> <unsigned ranges: [<range: 0x8 to 0x88, step 0x80>, <range: 0x20 to 0x24, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [0x2000].d = eax_2#5 @ mem#4 -> mem#5>>'
p3369
aS'11 [15L, 16L] <undetermined> <unsigned ranges: [<range: 0x8 to 0x88, step 0x80>, <range: 0x20 to 0x24, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_3#6 = eax_2#5 & 1>>'
p3370
aS'16 [17L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x1, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_3#6 = eax_2#5 & 1>>'
p3371
aS'16 [17L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x1, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_3#6 == 0) then 25 @ 0x1fea else 27 @ 0x1fdc>>'
p3372
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <const 0x80> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_1#2 s< 0xc) then 23 @ 0x0 else 24 @ 0x1f95>>'
p3373
aS'21 [22L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_5#7, mem#6 = syscall(1, 0) @ mem#5>>'
p3374
aS'23 [] <const 0x0> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_4#8 = 0>>'
p3375
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <unsigned ranges: [<range: 0xc to 0x7f, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_1#2 u< 0xe) then 29 @ 0x0 else 30 @ 0x1f9c>>'
p3376
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <unsigned ranges: [<range: 0xe to 0x7f, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_1#2 s<= 0x12) then 31 @ 0x0 else 32 @ 0x1fa3>>'
p3377
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <unsigned ranges: [<range: 0x13 to 0x7f, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_1#2 u<= 0x16) then 33 @ 0x0 else 34 @ 0x1faa>>'
p3378
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <unsigned ranges: [<range: 0x17 to 0x7f, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_1#2 s>= 0x28) then 35 @ 0x0 else 36 @ 0x1fb1>>'
p3379
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <unsigned ranges: [<range: 0x17 to 0x27, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_1#2 u>= 0x24) then 37 @ 0x0 else 38 @ 0x1fb8>>'
p3380
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <unsigned ranges: [<range: 0x17 to 0x23, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_1#2 s> 0x20) then 39 @ 0x0 else 40 @ 0x1fbf>>'
p3381
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <unsigned ranges: [<range: 0x17 to 0x20, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_1#2 u> 0x1b) then 41 @ 0x0 else 42 @ 0x1fc1>>'
p3382
aS'4 [5L, 6L, 9L, 14L, 19L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L] <undetermined> <unsigned ranges: [<range: 0x17 to 0x1b, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#3 = eax_1#2 + 1>>'
p3383
aS'32 [9L] <undetermined> <unsigned ranges: [<range: 0x18 to 0x1c, step 0x80>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#3 = eax_1#2 + 1>>'
p3384
aS'None [0L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#1 = testautovar#0>>'
p3385
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#1 = testautovar#0>>'
p3386
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#2 = eax_1#1 + arg2#0>>'
p3387
aS'None [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#2 = eax_1#1 + arg2#0>>'
p3388
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#2 = eax_1#1 + arg2#0>>'
p3389
as.
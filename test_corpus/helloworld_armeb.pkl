(dp0
S'test_function_can_return'
p1
(lp2
S'function name: _start type: SymbolType.FunctionSymbol address: 0x8040094L can_return: True'
p3
asS'test_function_stack'
p4
(lp5
S'Stack position 0: var_c'
p6
aS'Stack position 1: var_8'
p7
aS'Stack position 2: var_4'
p8
aS'Stack position 3: testautovar'
p9
aS'Stack content sample: <undetermined>'
p10
aS'Stack content range sample: <undetermined>'
p11
aS'Sample stack var: None'
p12
asS'test_strings'
p13
(lp14
S'String: hello world\n type: StringType.AsciiString at: 0x80410ecL'
p15
asS'test_function_low_il_basic_blocks'
p16
(lp17
S'LLIL basic block <block: armv7eb@0x0-0xb> start: 0x0L end: 0xbL outgoing edges: 1'
p18
aS'LLIL basic block <block: armv7eb@0xb-0xd> start: 0xbL end: 0xdL outgoing edges: 2'
p19
aS'LLIL basic block <block: armv7eb@0xd-0x15> start: 0xdL end: 0x15L outgoing edges: 0'
p20
aS'LLIL basic block <block: armv7eb@0x15-0x19> start: 0x15L end: 0x19L outgoing edges: 1'
p21
asS'test_functions_attributes'
p22
(lp23
S'Function _start var: var_c'
p24
aS'Function _start var: var_8'
p25
aS'Function _start var: var_4'
p26
aS'Function _start var: testautovar'
p27
aS'Function _start var: r0'
p28
aS'Function _start var: r0_1'
p29
aS'Function _start var: r0_2'
p30
aS'Function _start var: r1'
p31
aS'Function _start var: r2'
p32
aS'Function _start var: r2_1'
p33
aS'Function _start var: arg1'
p34
aS'Function _start var: r7'
p35
aS'Function _start var: r7_1'
p36
aS'Function _start var: r11'
p37
aS'Function _start var: lr'
p38
aS'Function _start session data: {}'
p39
aS'Function _start analysis perf length: 1'
p40
aS'Function _start clobbered reg: r0'
p41
aS'Function _start clobbered reg: r1'
p42
aS'Function _start clobbered reg: r2'
p43
aS'Function _start clobbered reg: r3'
p44
aS'Function _start clobbered reg: r12'
p45
aS'Function _start clobbered reg: lr'
p46
aS'Function _start explicitly defined type: False'
p47
aS'Function _start needs update: True'
p48
aS'Function _start global pointer value: <undetermined>'
p49
aS'Function _start comment: testcomment _start'
p50
aS'Function _start too large: False'
p51
aS'Function _start analysis skipped: False'
p52
aS'Function _start first ins LLIL: push(lr)'
p53
aS'Function _start LLIL exit test: []'
p54
aS"Function _start regs read test: ['r7', 'r11', 'sp', 'lr']"
p55
aS"Function _start regs written test: ['sp']"
p56
aS'Function _start stack var test: [<ref to var_4>, <ref to var_8>, <ref to var_c>]'
p57
aS'Function _start constant reference test: []'
p58
aS'Function _start first ins lifted IL: push(lr)'
p59
aS'Function _start flags read by lifted IL ins: []'
p60
aS'Function _start flags written by lifted IL ins: []'
p61
aS'Function _start create graph: <graph of <func: armv7eb@0x8040094>>'
p62
aS'Function _start indirect branches test: []'
p63
aS'Function _start test instr highlight: <color: #ff00ff>'
p64
aS'Function _start type token: int32_t __convention("linux-syscall") _start(int32_t arg1)'
p65
asS'test_function_starts'
p66
(lp67
S'Function start: 0x8040094L'
p68
asS'test_function_llil'
p69
(lp70
S'LLIL basic block: <block: armv7eb@0x0-0xb>'
p71
aS'LLIL basic block: <block: armv7eb@0xb-0xd>'
p72
aS'LLIL basic block: <block: armv7eb@0xd-0x15>'
p73
aS'LLIL basic block: <block: armv7eb@0x15-0x19>'
p74
aS'LLIL instruction: push(lr)'
p75
aS'LLIL instruction: push(r11)'
p76
aS'LLIL instruction: push(r7)'
p77
aS'LLIL instruction: r11 = sp'
p78
aS'LLIL instruction: sp = sp'
p79
aS'LLIL instruction: r0 = 0x1040'
p80
aS'LLIL instruction: r2 = 0x80400ac + r0'
p81
aS'LLIL instruction: r3 = r2'
p82
aS'LLIL instruction: r2 = r3'
p83
aS'LLIL instruction: r1 = 0'
p84
aS'LLIL instruction: goto 11 @ 0x80400b4'
p85
aS'LLIL instruction: r0 = sx.d([r2].b)'
p86
aS'LLIL instruction: if (r0 == 0) then 13 @ 0x80400d0 else 21 @ 0x80400c0'
p87
aS'LLIL instruction: r2 = r1'
p88
aS'LLIL instruction: r0 = 1'
p89
aS'LLIL instruction: r1 = r3'
p90
aS'LLIL instruction: r7 = 4'
p91
aS'LLIL instruction: syscall'
p92
aS'LLIL instruction: r7 = 1'
p93
aS'LLIL instruction: syscall'
p94
aS'LLIL instruction: jump(0x80400ec)'
p95
aS'LLIL instruction: r1 = r1 + 1'
p96
aS'LLIL instruction: r0 = r2 + 1'
p97
aS'LLIL instruction: r2 = r0'
p98
aS'LLIL instruction: goto 11 @ 0x80400b4'
p99
aS'MLIL basic block: <block: armv7eb@0x0-0x6>'
p100
aS'MLIL basic block: <block: armv7eb@0x6-0x8>'
p101
aS'MLIL basic block: <block: armv7eb@0x8-0xe>'
p102
aS'MLIL basic block: <block: armv7eb@0xe-0x12>'
p103
aS'MLIL instruction: var_4 = lr'
p104
aS'MLIL instruction: var_8 = r11'
p105
aS'MLIL instruction: var_c = arg1'
p106
aS'MLIL instruction: r2 = 0x80410ec'
p107
aS'MLIL instruction: r1 = 0'
p108
aS'MLIL instruction: goto 6 @ 0x80400b4'
p109
aS'MLIL instruction: r0_1 = sx.d([r2].b)'
p110
aS'MLIL instruction: if (r0_1 == 0) then 8 @ 0x80400d0 else 14 @ 0x80400c0'
p111
aS'MLIL instruction: r2_1 = r1'
p112
aS'MLIL instruction: r7 = 4'
p113
aS'MLIL instruction: syscall(1, 0x80410ec, r2_1, 0x80410ec, var_c)'
p114
aS'MLIL instruction: r7_1 = 1'
p115
aS'MLIL instruction: syscall()'
p116
aS'MLIL instruction: jump(0x80400ec)'
p117
aS'MLIL instruction: r1 = r1 + 1'
p118
aS'MLIL instruction: r0_2 = r2 + 1'
p119
aS'MLIL instruction: r2 = r0_2'
p120
aS'MLIL instruction: goto 6 @ 0x80400b4'
p121
aS'Instructiin: 0x8040094L: push    {r7, r11, lr}'
p122
aS'Instructiin: 0x8040098L: mov     r11, sp'
p123
aS'Instructiin: 0x804009cL: sub     sp, sp, #0'
p124
aS'Instructiin: 0x80400a0L: movw    r0, #0x1040'
p125
aS'Instructiin: 0x80400a4L: add     r2, pc, r0'
p126
aS'Instructiin: 0x80400a8L: mov     r3, r2'
p127
aS'Instructiin: 0x80400acL: mov     r2, r3'
p128
aS'Instructiin: 0x80400b0L: mov     r1, #0'
p129
aS'Instructiin: 0x80400d0L: mov     r2, r1'
p130
aS'Instructiin: 0x80400d4L: mov     r0, #0x1'
p131
aS'Instructiin: 0x80400d8L: mov     r1, r3'
p132
aS'Instructiin: 0x80400dcL: movw    r7, #0x4'
p133
aS'Instructiin: 0x80400e0L: svc     #0'
p134
aS'Instructiin: 0x80400e4L: movw    r7, #0x1'
p135
aS'Instructiin: 0x80400e8L: svc     #0'
p136
aS'Instructiin: 0x80400c0L: add     r1, r1, #0x1'
p137
aS'Instructiin: 0x80400c4L: add     r0, r2, #0x1'
p138
aS'Instructiin: 0x80400c8L: mov     r2, r0'
p139
aS'Instructiin: 0x80400ccL: b       0x80400b4'
p140
aS'Instructiin: 0x80400b4L: ldrsb   r0, [r2]'
p141
aS'Instructiin: 0x80400b8L: cmp     r0, #0'
p142
aS'Instructiin: 0x80400bcL: beq     0x80400d0'
p143
asS'test_low_il_ssa'
p144
(lp145
S'Reg s7 SSA definition: None'
p146
aS'Reg s7 SSA uses: []'
p147
aS'Reg s7 SSA value: <undetermined>'
p148
aS'Reg s6 SSA definition: None'
p149
aS'Reg s6 SSA uses: []'
p150
aS'Reg s6 SSA value: <undetermined>'
p151
aS'Reg d8 SSA definition: None'
p152
aS'Reg d8 SSA uses: []'
p153
aS'Reg d8 SSA value: <undetermined>'
p154
aS'Reg d9 SSA definition: None'
p155
aS'Reg d9 SSA uses: []'
p156
aS'Reg d9 SSA value: <undetermined>'
p157
aS'Reg d6 SSA definition: None'
p158
aS'Reg d6 SSA uses: []'
p159
aS'Reg d6 SSA value: <undetermined>'
p160
aS'Reg d7 SSA definition: None'
p161
aS'Reg d7 SSA uses: []'
p162
aS'Reg d7 SSA value: <undetermined>'
p163
aS'Reg d4 SSA definition: None'
p164
aS'Reg d4 SSA uses: []'
p165
aS'Reg d4 SSA value: <undetermined>'
p166
aS'Reg d5 SSA definition: None'
p167
aS'Reg d5 SSA uses: []'
p168
aS'Reg d5 SSA value: <undetermined>'
p169
aS'Reg d2 SSA definition: None'
p170
aS'Reg d2 SSA uses: []'
p171
aS'Reg d2 SSA value: <undetermined>'
p172
aS'Reg d3 SSA definition: None'
p173
aS'Reg d3 SSA uses: []'
p174
aS'Reg d3 SSA value: <undetermined>'
p175
aS'Reg d0 SSA definition: None'
p176
aS'Reg d0 SSA uses: []'
p177
aS'Reg d0 SSA value: <undetermined>'
p178
aS'Reg d1 SSA definition: None'
p179
aS'Reg d1 SSA uses: []'
p180
aS'Reg d1 SSA value: <undetermined>'
p181
aS'Reg q1 SSA definition: None'
p182
aS'Reg q1 SSA uses: []'
p183
aS'Reg q1 SSA value: <undetermined>'
p184
aS'Reg q0 SSA definition: None'
p185
aS'Reg q0 SSA uses: []'
p186
aS'Reg q0 SSA value: <undetermined>'
p187
aS'Reg q3 SSA definition: None'
p188
aS'Reg q3 SSA uses: []'
p189
aS'Reg q3 SSA value: <undetermined>'
p190
aS'Reg q2 SSA definition: None'
p191
aS'Reg q2 SSA uses: []'
p192
aS'Reg q2 SSA value: <undetermined>'
p193
aS'Reg q5 SSA definition: None'
p194
aS'Reg q5 SSA uses: []'
p195
aS'Reg q5 SSA value: <undetermined>'
p196
aS'Reg q4 SSA definition: None'
p197
aS'Reg q4 SSA uses: []'
p198
aS'Reg q4 SSA value: <undetermined>'
p199
aS'Reg q7 SSA definition: None'
p200
aS'Reg q7 SSA uses: []'
p201
aS'Reg q7 SSA value: <undetermined>'
p202
aS'Reg q6 SSA definition: None'
p203
aS'Reg q6 SSA uses: []'
p204
aS'Reg q6 SSA value: <undetermined>'
p205
aS'Reg q9 SSA definition: None'
p206
aS'Reg q9 SSA uses: []'
p207
aS'Reg q9 SSA value: <undetermined>'
p208
aS'Reg q8 SSA definition: None'
p209
aS'Reg q8 SSA uses: []'
p210
aS'Reg q8 SSA value: <undetermined>'
p211
aS'Reg d30 SSA definition: None'
p212
aS'Reg d30 SSA uses: []'
p213
aS'Reg d30 SSA value: <undetermined>'
p214
aS'Reg d31 SSA definition: None'
p215
aS'Reg d31 SSA uses: []'
p216
aS'Reg d31 SSA value: <undetermined>'
p217
aS'Reg lr SSA definition: 17'
p218
aS'Reg lr SSA uses: []'
p219
aS'Reg lr SSA value: <undetermined>'
p220
aS'Reg r12 SSA definition: 17'
p221
aS'Reg r12 SSA uses: []'
p222
aS'Reg r12 SSA value: <undetermined>'
p223
aS'Reg r10 SSA definition: None'
p224
aS'Reg r10 SSA uses: []'
p225
aS'Reg r10 SSA value: <undetermined>'
p226
aS'Reg r11 SSA definition: 3'
p227
aS'Reg r11 SSA uses: []'
p228
aS'Reg r11 SSA value: <stack frame offset -0xc>'
p229
aS'Reg s19 SSA definition: None'
p230
aS'Reg s19 SSA uses: []'
p231
aS'Reg s19 SSA value: <undetermined>'
p232
aS'Reg s18 SSA definition: None'
p233
aS'Reg s18 SSA uses: []'
p234
aS'Reg s18 SSA value: <undetermined>'
p235
aS'Reg s13 SSA definition: None'
p236
aS'Reg s13 SSA uses: []'
p237
aS'Reg s13 SSA value: <undetermined>'
p238
aS'Reg s12 SSA definition: None'
p239
aS'Reg s12 SSA uses: []'
p240
aS'Reg s12 SSA value: <undetermined>'
p241
aS'Reg s11 SSA definition: None'
p242
aS'Reg s11 SSA uses: []'
p243
aS'Reg s11 SSA value: <undetermined>'
p244
aS'Reg s10 SSA definition: None'
p245
aS'Reg s10 SSA uses: []'
p246
aS'Reg s10 SSA value: <undetermined>'
p247
aS'Reg s17 SSA definition: None'
p248
aS'Reg s17 SSA uses: []'
p249
aS'Reg s17 SSA value: <undetermined>'
p250
aS'Reg s16 SSA definition: None'
p251
aS'Reg s16 SSA uses: []'
p252
aS'Reg s16 SSA value: <undetermined>'
p253
aS'Reg s15 SSA definition: None'
p254
aS'Reg s15 SSA uses: []'
p255
aS'Reg s15 SSA value: <undetermined>'
p256
aS'Reg s14 SSA definition: None'
p257
aS'Reg s14 SSA uses: []'
p258
aS'Reg s14 SSA value: <undetermined>'
p259
aS'Reg q15 SSA definition: None'
p260
aS'Reg q15 SSA uses: []'
p261
aS'Reg q15 SSA value: <undetermined>'
p262
aS'Reg q14 SSA definition: None'
p263
aS'Reg q14 SSA uses: []'
p264
aS'Reg q14 SSA value: <undetermined>'
p265
aS'Reg q11 SSA definition: None'
p266
aS'Reg q11 SSA uses: []'
p267
aS'Reg q11 SSA value: <undetermined>'
p268
aS'Reg q10 SSA definition: None'
p269
aS'Reg q10 SSA uses: []'
p270
aS'Reg q10 SSA value: <undetermined>'
p271
aS'Reg q13 SSA definition: None'
p272
aS'Reg q13 SSA uses: []'
p273
aS'Reg q13 SSA value: <undetermined>'
p274
aS'Reg q12 SSA definition: None'
p275
aS'Reg q12 SSA uses: []'
p276
aS'Reg q12 SSA value: <undetermined>'
p277
aS'Reg r4 SSA definition: None'
p278
aS'Reg r4 SSA uses: []'
p279
aS'Reg r4 SSA value: <undetermined>'
p280
aS'Reg r5 SSA definition: None'
p281
aS'Reg r5 SSA uses: []'
p282
aS'Reg r5 SSA value: <undetermined>'
p283
aS'Reg r6 SSA definition: None'
p284
aS'Reg r6 SSA uses: []'
p285
aS'Reg r6 SSA value: <undetermined>'
p286
aS'Reg r7 SSA definition: 16'
p287
aS'Reg r7 SSA uses: []'
p288
aS'Reg r7 SSA value: <const 0x4>'
p289
aS'Reg r0 SSA definition: 5'
p290
aS'Reg r0 SSA uses: [6L, 11L]'
p291
aS'Reg r0 SSA value: <const 0x1040>'
p292
aS'Reg r1 SSA definition: 9'
p293
aS'Reg r1 SSA uses: [11L]'
p294
aS'Reg r1 SSA value: <const 0x0>'
p295
aS'Reg r2 SSA definition: 6'
p296
aS'Reg r2 SSA uses: [7L]'
p297
aS'Reg r2 SSA value: <const ptr 0x80410ec>'
p298
aS'Reg r3 SSA definition: 7'
p299
aS'Reg r3 SSA uses: [8L, 15L, 17L]'
p300
aS'Reg r3 SSA value: <const ptr 0x80410ec>'
p301
aS'Reg r8 SSA definition: None'
p302
aS'Reg r8 SSA uses: []'
p303
aS'Reg r8 SSA value: <undetermined>'
p304
aS'Reg r9 SSA definition: None'
p305
aS'Reg r9 SSA uses: []'
p306
aS'Reg r9 SSA value: <undetermined>'
p307
aS'Reg pc SSA definition: None'
p308
aS'Reg pc SSA uses: []'
p309
aS'Reg pc SSA value: <undetermined>'
p310
aS'Reg s31 SSA definition: None'
p311
aS'Reg s31 SSA uses: []'
p312
aS'Reg s31 SSA value: <undetermined>'
p313
aS'Reg s30 SSA definition: None'
p314
aS'Reg s30 SSA uses: []'
p315
aS'Reg s30 SSA value: <undetermined>'
p316
aS'Reg sp SSA definition: 0'
p317
aS'Reg sp SSA uses: [1L]'
p318
aS'Reg sp SSA value: <stack frame offset -0x4>'
p319
aS'Reg d14 SSA definition: None'
p320
aS'Reg d14 SSA uses: []'
p321
aS'Reg d14 SSA value: <undetermined>'
p322
aS'Reg d15 SSA definition: None'
p323
aS'Reg d15 SSA uses: []'
p324
aS'Reg d15 SSA value: <undetermined>'
p325
aS'Reg s9 SSA definition: None'
p326
aS'Reg s9 SSA uses: []'
p327
aS'Reg s9 SSA value: <undetermined>'
p328
aS'Reg s8 SSA definition: None'
p329
aS'Reg s8 SSA uses: []'
p330
aS'Reg s8 SSA value: <undetermined>'
p331
aS'Reg d10 SSA definition: None'
p332
aS'Reg d10 SSA uses: []'
p333
aS'Reg d10 SSA value: <undetermined>'
p334
aS'Reg d11 SSA definition: None'
p335
aS'Reg d11 SSA uses: []'
p336
aS'Reg d11 SSA value: <undetermined>'
p337
aS'Reg d12 SSA definition: None'
p338
aS'Reg d12 SSA uses: []'
p339
aS'Reg d12 SSA value: <undetermined>'
p340
aS'Reg d13 SSA definition: None'
p341
aS'Reg d13 SSA uses: []'
p342
aS'Reg d13 SSA value: <undetermined>'
p343
aS'Reg s3 SSA definition: None'
p344
aS'Reg s3 SSA uses: []'
p345
aS'Reg s3 SSA value: <undetermined>'
p346
aS'Reg s2 SSA definition: None'
p347
aS'Reg s2 SSA uses: []'
p348
aS'Reg s2 SSA value: <undetermined>'
p349
aS'Reg s1 SSA definition: None'
p350
aS'Reg s1 SSA uses: []'
p351
aS'Reg s1 SSA value: <undetermined>'
p352
aS'Reg s0 SSA definition: None'
p353
aS'Reg s0 SSA uses: []'
p354
aS'Reg s0 SSA value: <undetermined>'
p355
aS'Reg d18 SSA definition: None'
p356
aS'Reg d18 SSA uses: []'
p357
aS'Reg d18 SSA value: <undetermined>'
p358
aS'Reg d19 SSA definition: None'
p359
aS'Reg d19 SSA uses: []'
p360
aS'Reg d19 SSA value: <undetermined>'
p361
aS'Reg s5 SSA definition: None'
p362
aS'Reg s5 SSA uses: []'
p363
aS'Reg s5 SSA value: <undetermined>'
p364
aS'Reg s4 SSA definition: None'
p365
aS'Reg s4 SSA uses: []'
p366
aS'Reg s4 SSA value: <undetermined>'
p367
aS'Reg d16 SSA definition: None'
p368
aS'Reg d16 SSA uses: []'
p369
aS'Reg d16 SSA value: <undetermined>'
p370
aS'Reg d17 SSA definition: None'
p371
aS'Reg d17 SSA uses: []'
p372
aS'Reg d17 SSA value: <undetermined>'
p373
aS'Reg d29 SSA definition: None'
p374
aS'Reg d29 SSA uses: []'
p375
aS'Reg d29 SSA value: <undetermined>'
p376
aS'Reg d28 SSA definition: None'
p377
aS'Reg d28 SSA uses: []'
p378
aS'Reg d28 SSA value: <undetermined>'
p379
aS'Reg d21 SSA definition: None'
p380
aS'Reg d21 SSA uses: []'
p381
aS'Reg d21 SSA value: <undetermined>'
p382
aS'Reg d20 SSA definition: None'
p383
aS'Reg d20 SSA uses: []'
p384
aS'Reg d20 SSA value: <undetermined>'
p385
aS'Reg d23 SSA definition: None'
p386
aS'Reg d23 SSA uses: []'
p387
aS'Reg d23 SSA value: <undetermined>'
p388
aS'Reg d22 SSA definition: None'
p389
aS'Reg d22 SSA uses: []'
p390
aS'Reg d22 SSA value: <undetermined>'
p391
aS'Reg d25 SSA definition: None'
p392
aS'Reg d25 SSA uses: []'
p393
aS'Reg d25 SSA value: <undetermined>'
p394
aS'Reg d24 SSA definition: None'
p395
aS'Reg d24 SSA uses: []'
p396
aS'Reg d24 SSA value: <undetermined>'
p397
aS'Reg d27 SSA definition: None'
p398
aS'Reg d27 SSA uses: []'
p399
aS'Reg d27 SSA value: <undetermined>'
p400
aS'Reg d26 SSA definition: None'
p401
aS'Reg d26 SSA uses: []'
p402
aS'Reg d26 SSA value: <undetermined>'
p403
aS'Reg s22 SSA definition: None'
p404
aS'Reg s22 SSA uses: []'
p405
aS'Reg s22 SSA value: <undetermined>'
p406
aS'Reg s23 SSA definition: None'
p407
aS'Reg s23 SSA uses: []'
p408
aS'Reg s23 SSA value: <undetermined>'
p409
aS'Reg s20 SSA definition: None'
p410
aS'Reg s20 SSA uses: []'
p411
aS'Reg s20 SSA value: <undetermined>'
p412
aS'Reg s21 SSA definition: None'
p413
aS'Reg s21 SSA uses: []'
p414
aS'Reg s21 SSA value: <undetermined>'
p415
aS'Reg s26 SSA definition: None'
p416
aS'Reg s26 SSA uses: []'
p417
aS'Reg s26 SSA value: <undetermined>'
p418
aS'Reg s27 SSA definition: None'
p419
aS'Reg s27 SSA uses: []'
p420
aS'Reg s27 SSA value: <undetermined>'
p421
aS'Reg s24 SSA definition: None'
p422
aS'Reg s24 SSA uses: []'
p423
aS'Reg s24 SSA value: <undetermined>'
p424
aS'Reg s25 SSA definition: None'
p425
aS'Reg s25 SSA uses: []'
p426
aS'Reg s25 SSA value: <undetermined>'
p427
aS'Reg s28 SSA definition: None'
p428
aS'Reg s28 SSA uses: []'
p429
aS'Reg s28 SSA value: <undetermined>'
p430
aS'Reg s29 SSA definition: None'
p431
aS'Reg s29 SSA uses: []'
p432
aS'Reg s29 SSA value: <undetermined>'
p433
aS'Flag n SSA uses: []'
p434
aS'Flag n SSA value: <undetermined>'
p435
aS'Flag z SSA uses: []'
p436
aS'Flag z SSA value: <undetermined>'
p437
aS'Flag c SSA uses: []'
p438
aS'Flag c SSA value: <undetermined>'
p439
aS'Flag v SSA uses: []'
p440
aS'Flag v SSA value: <undetermined>'
p441
aS'Flag q SSA uses: []'
p442
aS'Flag q SSA value: <undetermined>'
p443
aS'Non-SSA instruction index: 0'
p444
aS'SSA instruction index: 0'
p445
aS'MLIL instruction index: 0'
p446
aS'Mapped MLIL instruction index: 0'
p447
aS'Non-SSA instruction index: 1'
p448
aS'SSA instruction index: 2'
p449
aS'MLIL instruction index: 1'
p450
aS'Mapped MLIL instruction index: 2'
p451
aS'Non-SSA instruction index: 2'
p452
aS'SSA instruction index: 4'
p453
aS'MLIL instruction index: 2'
p454
aS'Mapped MLIL instruction index: 4'
p455
aS'Non-SSA instruction index: 3'
p456
aS'SSA instruction index: 6'
p457
aS'MLIL instruction index: None'
p458
aS'Mapped MLIL instruction index: 6'
p459
aS'Non-SSA instruction index: 4'
p460
aS'SSA instruction index: 7'
p461
aS'MLIL instruction index: None'
p462
aS'Mapped MLIL instruction index: 7'
p463
aS'Non-SSA instruction index: 5'
p464
aS'SSA instruction index: 8'
p465
aS'MLIL instruction index: None'
p466
aS'Mapped MLIL instruction index: 8'
p467
aS'Non-SSA instruction index: 6'
p468
aS'SSA instruction index: 9'
p469
aS'MLIL instruction index: None'
p470
aS'Mapped MLIL instruction index: 9'
p471
aS'Non-SSA instruction index: 7'
p472
aS'SSA instruction index: 10'
p473
aS'MLIL instruction index: 3'
p474
aS'Mapped MLIL instruction index: 10'
p475
aS'Non-SSA instruction index: 8'
p476
aS'SSA instruction index: 11'
p477
aS'MLIL instruction index: 3'
p478
aS'Mapped MLIL instruction index: 11'
p479
aS'Non-SSA instruction index: 9'
p480
aS'SSA instruction index: 12'
p481
aS'MLIL instruction index: 4'
p482
aS'Mapped MLIL instruction index: 12'
p483
aS'Non-SSA instruction index: 10'
p484
aS'SSA instruction index: 13'
p485
aS'MLIL instruction index: 5'
p486
aS'Mapped MLIL instruction index: 13'
p487
aS'Non-SSA instruction index: 11'
p488
aS'SSA instruction index: 17'
p489
aS'MLIL instruction index: 6'
p490
aS'Mapped MLIL instruction index: 14'
p491
aS'Non-SSA instruction index: 12'
p492
aS'SSA instruction index: 18'
p493
aS'MLIL instruction index: 7'
p494
aS'Mapped MLIL instruction index: 15'
p495
aS'Non-SSA instruction index: 13'
p496
aS'SSA instruction index: 19'
p497
aS'MLIL instruction index: 8'
p498
aS'Mapped MLIL instruction index: 16'
p499
aS'Non-SSA instruction index: 14'
p500
aS'SSA instruction index: 20'
p501
aS'MLIL instruction index: 9'
p502
aS'Mapped MLIL instruction index: 17'
p503
aS'Non-SSA instruction index: 15'
p504
aS'SSA instruction index: 21'
p505
aS'MLIL instruction index: 9'
p506
aS'Mapped MLIL instruction index: 18'
p507
aS'Non-SSA instruction index: 16'
p508
aS'SSA instruction index: 22'
p509
aS'MLIL instruction index: 9'
p510
aS'Mapped MLIL instruction index: 19'
p511
aS'Non-SSA instruction index: 17'
p512
aS'SSA instruction index: 23'
p513
aS'MLIL instruction index: 10'
p514
aS'Mapped MLIL instruction index: 20'
p515
aS'Non-SSA instruction index: 18'
p516
aS'SSA instruction index: 24'
p517
aS'MLIL instruction index: 11'
p518
aS'Mapped MLIL instruction index: 21'
p519
aS'Non-SSA instruction index: 19'
p520
aS'SSA instruction index: 25'
p521
aS'MLIL instruction index: 12'
p522
aS'Mapped MLIL instruction index: 22'
p523
aS'Non-SSA instruction index: 20'
p524
aS'SSA instruction index: 26'
p525
aS'MLIL instruction index: 13'
p526
aS'Mapped MLIL instruction index: 23'
p527
aS'Non-SSA instruction index: 21'
p528
aS'SSA instruction index: 27'
p529
aS'MLIL instruction index: 14'
p530
aS'Mapped MLIL instruction index: 24'
p531
aS'Non-SSA instruction index: 22'
p532
aS'SSA instruction index: 28'
p533
aS'MLIL instruction index: 15'
p534
aS'Mapped MLIL instruction index: 25'
p535
aS'Non-SSA instruction index: 23'
p536
aS'SSA instruction index: 29'
p537
aS'MLIL instruction index: 16'
p538
aS'Mapped MLIL instruction index: 26'
p539
aS'Non-SSA instruction index: 24'
p540
aS'SSA instruction index: 30'
p541
aS'MLIL instruction index: 17'
p542
aS'Mapped MLIL instruction index: 27'
p543
asS'test_med_il_instructions'
p544
(lp545
S'Expression type: None'
p546
aS'LLIL: [sp#0 - 4].d = lr#0 @ mem#0 -> mem#1'
p547
aS'Value: <undetermined>'
p548
aS'Possible values: <undetermined>'
p549
aS'Branch dependence: {}'
p550
aS"Prefix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'lr', 'var_4']"
p551
aS"Postfix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'lr', 'var_4']"
p552
aS'SSA form: var_4#1 = lr#0'
p553
aS'Non-SSA formvar_4 = lr'
p554
aS'Expression type: None'
p555
aS'LLIL: [sp#1 - 4].d = r11#0 @ mem#1 -> mem#2'
p556
aS'Value: <undetermined>'
p557
aS'Possible values: <undetermined>'
p558
aS'Branch dependence: {}'
p559
aS"Prefix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'r11', 'var_8']"
p560
aS"Postfix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'r11', 'var_8']"
p561
aS'SSA form: var_8#1 = r11#0'
p562
aS'Non-SSA formvar_8 = r11'
p563
aS'Expression type: None'
p564
aS'LLIL: [sp#2 - 4].d = r7#0 @ mem#2 -> mem#3'
p565
aS'Value: <undetermined>'
p566
aS'Possible values: <undetermined>'
p567
aS'Branch dependence: {}'
p568
aS"Prefix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'arg1', 'var_c']"
p569
aS"Postfix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'arg1', 'var_c']"
p570
aS'SSA form: var_c#1 = arg1#0'
p571
aS'Non-SSA formvar_c = arg1'
p572
aS'Expression type: None'
p573
aS'LLIL: r2#2 = r3#1'
p574
aS'Value: <undetermined>'
p575
aS'Possible values: <undetermined>'
p576
aS'Branch dependence: {}'
p577
aS"Prefix operands: ['134484204', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'r2']"
p578
aS"Postfix operands: ['134484204', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'r2']"
p579
aS'SSA form: r2#1 = 0x80410ec'
p580
aS'Non-SSA formr2 = 0x80410ec'
p581
aS'Expression type: None'
p582
aS'LLIL: r1#1 = 0'
p583
aS'Value: <undetermined>'
p584
aS'Possible values: <undetermined>'
p585
aS'Branch dependence: {}'
p586
aS"Prefix operands: ['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'r1']"
p587
aS"Postfix operands: ['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'r1']"
p588
aS'SSA form: r1#1 = 0'
p589
aS'Non-SSA formr1 = 0'
p590
aS'Expression type: None'
p591
aS'LLIL: goto 14 @ 0x80400b4'
p592
aS'Value: <undetermined>'
p593
aS'Possible values: <undetermined>'
p594
aS'Branch dependence: {}'
p595
aS"Prefix operands: ['6', '<MLIL_GOTO>']"
p596
aS"Postfix operands: ['6', '<MLIL_GOTO>']"
p597
aS'SSA form: goto 6 @ 0x80400b4'
p598
aS'Non-SSA formgoto 6 @ 0x80400b4'
p599
aS'Expression type: None'
p600
aS'LLIL: r0#3 = sx.d([r2#3].b @ mem#3)'
p601
aS'Value: <undetermined>'
p602
aS'Possible values: <undetermined>'
p603
aS'Branch dependence: {}'
p604
aS"Prefix operands: ['<MLIL_LOAD 1>', '<MLIL_SET_VAR 4>', '<MLIL_SX 4>', '<MLIL_VAR 4>', 'r0_1', 'r2']"
p605
aS"Postfix operands: ['<MLIL_LOAD 1>', '<MLIL_SET_VAR 4>', '<MLIL_SX 4>', '<MLIL_VAR 4>', 'r0_1', 'r2']"
p606
aS'SSA form: r0_1#2 = sx.d([r2#2].b @ mem#0)'
p607
aS'Non-SSA formr0_1 = sx.d([r2].b)'
p608
aS'Expression type: None'
p609
aS'LLIL: if (r0#3 == 0) then 19 @ 0x80400d0 else 27 @ 0x80400c0'
p610
aS'Value: <undetermined>'
p611
aS'Possible values: <undetermined>'
p612
aS'Branch dependence: {}'
p613
aS"Prefix operands: ['0', '14', '8', '<MLIL_CMP_E 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'r0_1']"
p614
aS"Postfix operands: ['0', '14', '8', '<MLIL_CMP_E 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'r0_1']"
p615
aS'SSA form: if (r0_1#2 == 0) then 11 @ 0x80400d0 else 17 @ 0x80400c0'
p616
aS'Non-SSA formif (r0_1 == 0) then 8 @ 0x80400d0 else 14 @ 0x80400c0'
p617
aS'Expression type: None'
p618
aS'LLIL: r2#4 = r1#2'
p619
aS'Value: <undetermined>'
p620
aS'Possible values: <undetermined>'
p621
aS'Branch dependence: {7L: <ILBranchDependence.TrueBranchDependent: 1>}'
p622
aS"Prefix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'r1', 'r2_1']"
p623
aS"Postfix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'r1', 'r2_1']"
p624
aS'SSA form: r2_1#3 = r1#2'
p625
aS'Non-SSA formr2_1 = r1'
p626
aS'Expression type: None'
p627
aS'LLIL: r7#1 = 4'
p628
aS'Value: <undetermined>'
p629
aS'Possible values: <undetermined>'
p630
aS'Branch dependence: {7L: <ILBranchDependence.TrueBranchDependent: 1>}'
p631
aS"Prefix operands: ['4', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'r7']"
p632
aS"Postfix operands: ['4', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'r7']"
p633
aS'SSA form: r7#1 = 4'
p634
aS'Non-SSA formr7 = 4'
p635
aS'Expression type: None'
p636
aS'LLIL: r0#5, r1#4, r2#5, r3#2, r12#1, lr#1, mem#4 = syscall(stack = sp#4 @ mem#3, params = r0#4, r1#3, r2#4, r3#1)'
p637
aS'Value: <undetermined>'
p638
aS'Possible values: <undetermined>'
p639
aS'Branch dependence: {7L: <ILBranchDependence.TrueBranchDependent: 1>}'
p640
aS"Prefix operands: ['<MLIL_SYSCALL>', '[<il: 1>, <il: 0x80410ec>, <il: r2_1>, <il: 0x80410ec>, <il: var_c>]', '[]']"
p641
aS"Postfix operands: ['<MLIL_SYSCALL>', '[<il: 1>, <il: 0x80410ec>, <il: r2_1>, <il: 0x80410ec>, <il: var_c>]', '[]']"
p642
aS'SSA form: mem#1 = syscall(1, 0x80410ec, r2_1#3, 0x80410ec, var_c#1) @ mem#0'
p643
aS'Non-SSA formsyscall(1, 0x80410ec, r2_1, 0x80410ec, var_c)'
p644
aS'Expression type: None'
p645
aS'LLIL: r7#2 = 1'
p646
aS'Value: <undetermined>'
p647
aS'Possible values: <undetermined>'
p648
aS'Branch dependence: {7L: <ILBranchDependence.TrueBranchDependent: 1>}'
p649
aS"Prefix operands: ['1', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'r7_1']"
p650
aS"Postfix operands: ['1', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'r7_1']"
p651
aS'SSA form: r7_1#2 = 1'
p652
aS'Non-SSA formr7_1 = 1'
p653
aS'Expression type: None'
p654
aS'LLIL: r0#6, r1#5, r2#6, r3#3, r12#2, lr#2, mem#5 = syscall(stack = sp#4 @ mem#4, params = r0#5, r1#4, r2#5, r3#2)'
p655
aS'Value: <undetermined>'
p656
aS'Possible values: <undetermined>'
p657
aS'Branch dependence: {7L: <ILBranchDependence.TrueBranchDependent: 1>}'
p658
aS"Prefix operands: ['<MLIL_SYSCALL>', '[]', '[]']"
p659
aS"Postfix operands: ['<MLIL_SYSCALL>', '[]', '[]']"
p660
aS'SSA form: mem#2 = syscall() @ mem#1'
p661
aS'Non-SSA formsyscall()'
p662
aS'Expression type: None'
p663
aS'LLIL: jump(0x80400ec)'
p664
aS'Value: <undetermined>'
p665
aS'Possible values: <undetermined>'
p666
aS'Branch dependence: {7L: <ILBranchDependence.TrueBranchDependent: 1>}'
p667
aS"Prefix operands: ['134480108', '<MLIL_CONST_PTR 4>', '<MLIL_JUMP>']"
p668
aS"Postfix operands: ['134480108', '<MLIL_CONST_PTR 4>', '<MLIL_JUMP>']"
p669
aS'SSA form: jump(0x80400ec)'
p670
aS'Non-SSA formjump(0x80400ec)'
p671
aS'Expression type: None'
p672
aS'LLIL: r1#6 = r1#2 + 1'
p673
aS'Value: <undetermined>'
p674
aS'Possible values: <undetermined>'
p675
aS'Branch dependence: {7L: <ILBranchDependence.FalseBranchDependent: 2>}'
p676
aS"Prefix operands: ['1', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'r1', 'r1']"
p677
aS"Postfix operands: ['1', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'r1', 'r1']"
p678
aS'SSA form: r1#3 = r1#2 + 1'
p679
aS'Non-SSA formr1 = r1 + 1'
p680
aS'Expression type: None'
p681
aS'LLIL: r0#7 = r2#3 + 1'
p682
aS'Value: <undetermined>'
p683
aS'Possible values: <undetermined>'
p684
aS'Branch dependence: {7L: <ILBranchDependence.FalseBranchDependent: 2>}'
p685
aS"Prefix operands: ['1', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'r0_2', 'r2']"
p686
aS"Postfix operands: ['1', '<MLIL_ADD 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'r0_2', 'r2']"
p687
aS'SSA form: r0_2#3 = r2#2 + 1'
p688
aS'Non-SSA formr0_2 = r2 + 1'
p689
aS'Expression type: None'
p690
aS'LLIL: r2#7 = r0#7'
p691
aS'Value: <undetermined>'
p692
aS'Possible values: <undetermined>'
p693
aS'Branch dependence: {7L: <ILBranchDependence.FalseBranchDependent: 2>}'
p694
aS"Prefix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'r0_2', 'r2']"
p695
aS"Postfix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'r0_2', 'r2']"
p696
aS'SSA form: r2#4 = r0_2#3'
p697
aS'Non-SSA formr2 = r0_2'
p698
aS'Expression type: None'
p699
aS'LLIL: goto 14 @ 0x80400b4'
p700
aS'Value: <undetermined>'
p701
aS'Possible values: <undetermined>'
p702
aS'Branch dependence: {7L: <ILBranchDependence.FalseBranchDependent: 2>}'
p703
aS"Prefix operands: ['6', '<MLIL_GOTO>']"
p704
aS"Postfix operands: ['6', '<MLIL_GOTO>']"
p705
aS'SSA form: goto 6 @ 0x80400b4'
p706
aS'Non-SSA formgoto 6 @ 0x80400b4'
p707
asS'test_function_symbol_names'
p708
(lp709
S'Symbol: _start SymbolType.FunctionSymbol 0x8040094L'
p710
asS'test_BinaryView'
p711
(lp712
S"BV Type: ('Elf32_SectionHeader', <type: struct>)"
p713
aS"BV Type: ('Elf32_Ident', <type: struct>)"
p714
aS"BV Type: ('Elf32_Header', <type: struct>)"
p715
aS"BV Type: ('Elf32_ProgramHeader', <type: struct>)"
p716
aS'BV segment: <segment: 0x8040000-0x80400ec, r-x>'
p717
aS'BV segment: <segment: 0x80410ec-0x80410fc, rw->'
p718
aS'BV allocated range: <0x8040000-0x80400ec>'
p719
aS'BV allocated range: <0x80410ec-0x80410fc>'
p720
aS'Session Data: {}'
p721
aS'BV data var: 134479872'
p722
aS'BV data var: 134480044'
p723
aS'BV data var: 134479924'
p724
aS'BV data var: 134480108'
p725
aS'BV data var: 134484204'
p726
aS'BV Entry function: <func: armv7eb@0x8040094>'
p727
aS'BV function: <func: armv7eb@0x8040094>'
p728
aS'BV entry point: 0x8040094L'
p729
aS'BV start: 0x8040000L'
p730
aS'BV length: 0x10fc'
p731
asS'test_available_types'
p732
(lp733
S'Available Type: Raw'
p734
aS'Available Type: ELF'
p735
asS'test_function_basic_blocks'
p736
(lp737
S'basic block <block: armv7eb@0x8040094-0x80400b4> start: 0x8040094L end: 0x80400b4L undetermined outgoing edges: False'
p738
aS'basic block <block: armv7eb@0x8040094-0x80400b4> test get self: <block: armv7eb@0x8040094-0x80400b4>'
p739
aS'basic block <block: armv7eb@0x80400d0-0x80400ec> start: 0x80400d0L end: 0x80400ecL undetermined outgoing edges: False'
p740
aS'basic block <block: armv7eb@0x80400d0-0x80400ec> test get self: <block: armv7eb@0x80400d0-0x80400ec>'
p741
aS'basic block <block: armv7eb@0x80400c0-0x80400d0> start: 0x80400c0L end: 0x80400d0L undetermined outgoing edges: False'
p742
aS'basic block <block: armv7eb@0x80400c0-0x80400d0> test get self: <block: armv7eb@0x80400c0-0x80400d0>'
p743
aS'basic block <block: armv7eb@0x80400b4-0x80400c0> start: 0x80400b4L end: 0x80400c0L undetermined outgoing edges: False'
p744
aS'basic block <block: armv7eb@0x80400b4-0x80400c0> test get self: <block: armv7eb@0x80400b4-0x80400c0>'
p745
asS'test_function_med_il_basic_blocks'
p746
(lp747
S'MLIL basic block <block: armv7eb@0x0-0x6> start: 0x0L end: 0x6L outgoing_edges: 1'
p748
aS'MLIL basic block <block: armv7eb@0x6-0x8> start: 0x6L end: 0x8L outgoing_edges: 2'
p749
aS'MLIL basic block <block: armv7eb@0x8-0xe> start: 0x8L end: 0xeL outgoing_edges: 0'
p750
aS'MLIL basic block <block: armv7eb@0xe-0x12> start: 0xeL end: 0x12L outgoing_edges: 1'
p751
asS'test_symbols'
p752
(lp753
S'Symbol: __elf_header'
p754
aS'Symbol: __elf_program_headers'
p755
aS'Symbol: _start'
p756
asS'test_low_il_instructions'
p757
(lp758
S'MLIL: var_4 = lr'
p759
aS'Mapped MLIL: var_4 = lr'
p760
aS'Value: <undetermined>'
p761
aS'Possible Values: <undetermined>'
p762
aS'Prefix operands: [<LLIL_PUSH 4>, <LLIL_REG 4>, lr]'
p763
aS'Postfix operands: [lr, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p764
aS'SSA form: [sp#0 - 4].d = lr#0 @ mem#0 -> mem#1'
p765
aS'Non-SSA form: push(lr)'
p766
aS'MLIL: var_8 = r11'
p767
aS'Mapped MLIL: var_8 = r11'
p768
aS'Value: <undetermined>'
p769
aS'Possible Values: <undetermined>'
p770
aS'Prefix operands: [<LLIL_PUSH 4>, <LLIL_REG 4>, r11]'
p771
aS'Postfix operands: [r11, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p772
aS'SSA form: [sp#1 - 4].d = r11#0 @ mem#1 -> mem#2'
p773
aS'Non-SSA form: push(r11)'
p774
aS'MLIL: var_c = arg1'
p775
aS'Mapped MLIL: var_c = arg1'
p776
aS'Value: <undetermined>'
p777
aS'Possible Values: <undetermined>'
p778
aS'Prefix operands: [<LLIL_PUSH 4>, <LLIL_REG 4>, r7]'
p779
aS'Postfix operands: [r7, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p780
aS'SSA form: [sp#2 - 4].d = r7#0 @ mem#2 -> mem#3'
p781
aS'Non-SSA form: push(r7)'
p782
aS'MLIL: None'
p783
aS'Mapped MLIL: r11 = &var_c'
p784
aS'Value: <undetermined>'
p785
aS'Possible Values: <undetermined>'
p786
aS'Prefix operands: [<LLIL_SET_REG 4>, r11, <LLIL_REG 4>, sp]'
p787
aS'Postfix operands: [r11, sp, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p788
aS'SSA form: r11#1 = sp#3'
p789
aS'Non-SSA form: r11 = sp'
p790
aS'MLIL: None'
p791
aS'Mapped MLIL: sp = &var_c'
p792
aS'Value: <undetermined>'
p793
aS'Possible Values: <undetermined>'
p794
aS'Prefix operands: [<LLIL_SET_REG 4>, sp, <LLIL_REG 4>, sp]'
p795
aS'Postfix operands: [sp, sp, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p796
aS'SSA form: sp#4 = sp#3'
p797
aS'Non-SSA form: sp = sp'
p798
aS'MLIL: None'
p799
aS'Mapped MLIL: r0 = 0x1040'
p800
aS'Value: <undetermined>'
p801
aS'Possible Values: <undetermined>'
p802
aS'Prefix operands: [<LLIL_SET_REG 4>, r0, <LLIL_CONST 4>, 4160L]'
p803
aS'Postfix operands: [r0, 4160L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p804
aS'SSA form: r0#1 = 0x1040'
p805
aS'Non-SSA form: r0 = 0x1040'
p806
aS'MLIL: None'
p807
aS'Mapped MLIL: r2 = 0x80410ec'
p808
aS'Value: <undetermined>'
p809
aS'Possible Values: <undetermined>'
p810
aS'Prefix operands: [<LLIL_SET_REG 4>, r2, <LLIL_ADD 4>, <LLIL_CONST_PTR 4>, 134480044L, <LLIL_REG 4>, r0]'
p811
aS'Postfix operands: [r2, 134480044L, <LLIL_CONST_PTR 4>, r0, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p812
aS'SSA form: r2#1 = 0x80400ac + r0#1'
p813
aS'Non-SSA form: r2 = 0x80400ac + r0'
p814
aS'MLIL: None'
p815
aS'Mapped MLIL: r3 = 0x80410ec'
p816
aS'Value: <undetermined>'
p817
aS'Possible Values: <undetermined>'
p818
aS'Prefix operands: [<LLIL_SET_REG 4>, r3, <LLIL_REG 4>, r2]'
p819
aS'Postfix operands: [r3, r2, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p820
aS'SSA form: r3#1 = r2#1'
p821
aS'Non-SSA form: r3 = r2'
p822
aS'MLIL: r2 = 0x80410ec'
p823
aS'Mapped MLIL: r2 = 0x80410ec'
p824
aS'Value: <undetermined>'
p825
aS'Possible Values: <undetermined>'
p826
aS'Prefix operands: [<LLIL_SET_REG 4>, r2, <LLIL_REG 4>, r3]'
p827
aS'Postfix operands: [r2, r3, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p828
aS'SSA form: r2#2 = r3#1'
p829
aS'Non-SSA form: r2 = r3'
p830
aS'MLIL: r1 = 0'
p831
aS'Mapped MLIL: r1 = 0'
p832
aS'Value: <undetermined>'
p833
aS'Possible Values: <undetermined>'
p834
aS'Prefix operands: [<LLIL_SET_REG 4>, r1, <LLIL_CONST 4>, 0L]'
p835
aS'Postfix operands: [r1, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p836
aS'SSA form: r1#1 = 0'
p837
aS'Non-SSA form: r1 = 0'
p838
aS'MLIL: None'
p839
aS'Mapped MLIL: goto 14 @ 0x80400b4'
p840
aS'Value: <undetermined>'
p841
aS'Possible Values: <undetermined>'
p842
aS'Prefix operands: [<LLIL_GOTO>, 11L]'
p843
aS'Postfix operands: [11L, <LLIL_GOTO>]'
p844
aS'SSA form: goto 14 @ 0x80400b4'
p845
aS'Non-SSA form: goto 11 @ 0x80400b4'
p846
aS'MLIL: r0_1 = sx.d([r2].b)'
p847
aS'Mapped MLIL: r0 = sx.d([r2].b)'
p848
aS'Value: <undetermined>'
p849
aS'Possible Values: <undetermined>'
p850
aS'Prefix operands: [<LLIL_SET_REG 4>, r0, <LLIL_SX 4>, <LLIL_LOAD 1>, <LLIL_REG 4>, r2]'
p851
aS'Postfix operands: [r0, r2, <LLIL_REG 4>, <LLIL_LOAD 1>, <LLIL_SX 4>, <LLIL_SET_REG 4>]'
p852
aS'SSA form: r0#3 = sx.d([r2#3].b @ mem#3)'
p853
aS'Non-SSA form: r0 = sx.d([r2].b)'
p854
aS'MLIL: None'
p855
aS'Mapped MLIL: if (r0 == 0) then 16 @ 0x80400d0 else 24 @ 0x80400c0'
p856
aS'Value: <undetermined>'
p857
aS'Possible Values: <undetermined>'
p858
aS'Prefix operands: [<LLIL_IF>, <LLIL_CMP_E 4>, <LLIL_REG 4>, r0, <LLIL_CONST 4>, 0L, 13L, 21L]'
p859
aS'Postfix operands: [r0, <LLIL_REG 4>, 0L, <LLIL_CONST 4>, <LLIL_CMP_E 4>, 13L, 21L, <LLIL_IF>]'
p860
aS'SSA form: if (r0#3 == 0) then 19 @ 0x80400d0 else 27 @ 0x80400c0'
p861
aS'Non-SSA form: if (r0 == 0) then 13 @ 0x80400d0 else 21 @ 0x80400c0'
p862
aS'MLIL: r2_1 = r1'
p863
aS'Mapped MLIL: r2 = r1'
p864
aS'Value: <undetermined>'
p865
aS'Possible Values: <undetermined>'
p866
aS'Prefix operands: [<LLIL_SET_REG 4>, r2, <LLIL_REG 4>, r1]'
p867
aS'Postfix operands: [r2, r1, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p868
aS'SSA form: r2#4 = r1#2'
p869
aS'Non-SSA form: r2 = r1'
p870
aS'MLIL: None'
p871
aS'Mapped MLIL: r0 = 1'
p872
aS'Value: <undetermined>'
p873
aS'Possible Values: <undetermined>'
p874
aS'Prefix operands: [<LLIL_SET_REG 4>, r0, <LLIL_CONST 4>, 1L]'
p875
aS'Postfix operands: [r0, 1L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p876
aS'SSA form: r0#4 = 1'
p877
aS'Non-SSA form: r0 = 1'
p878
aS'MLIL: None'
p879
aS'Mapped MLIL: r1 = 0x80410ec'
p880
aS'Value: <undetermined>'
p881
aS'Possible Values: <undetermined>'
p882
aS'Prefix operands: [<LLIL_SET_REG 4>, r1, <LLIL_REG 4>, r3]'
p883
aS'Postfix operands: [r1, r3, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p884
aS'SSA form: r1#3 = r3#1'
p885
aS'Non-SSA form: r1 = r3'
p886
aS'MLIL: r7 = 4'
p887
aS'Mapped MLIL: arg1 = 4'
p888
aS'Value: <undetermined>'
p889
aS'Possible Values: <undetermined>'
p890
aS'Prefix operands: [<LLIL_SET_REG 4>, r7, <LLIL_CONST 4>, 4L]'
p891
aS'Postfix operands: [r7, 4L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p892
aS'SSA form: r7#1 = 4'
p893
aS'Non-SSA form: r7 = 4'
p894
aS'MLIL: syscall(1, 0x80410ec, r2_1, 0x80410ec, var_c)'
p895
aS'Mapped MLIL: r0, r1, r2, r3, r12, lr = syscall(r0, r1, r2, r3, stack = &var_c)'
p896
aS'Value: <undetermined>'
p897
aS'Possible Values: <undetermined>'
p898
aS'Prefix operands: [<LLIL_SYSCALL>]'
p899
aS'Postfix operands: [<LLIL_SYSCALL>]'
p900
aS'SSA form: r0#5, r1#4, r2#5, r3#2, r12#1, lr#1, mem#4 = syscall(stack = sp#4 @ mem#3, params = r0#4, r1#3, r2#4, r3#1)'
p901
aS'Non-SSA form: syscall'
p902
aS'MLIL: r7_1 = 1'
p903
aS'Mapped MLIL: arg1 = 1'
p904
aS'Value: <undetermined>'
p905
aS'Possible Values: <undetermined>'
p906
aS'Prefix operands: [<LLIL_SET_REG 4>, r7, <LLIL_CONST 4>, 1L]'
p907
aS'Postfix operands: [r7, 1L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p908
aS'SSA form: r7#2 = 1'
p909
aS'Non-SSA form: r7 = 1'
p910
aS'MLIL: syscall()'
p911
aS'Mapped MLIL: r0, r1, r2, r3, r12, lr = syscall(r0, r1, r2, r3, stack = &var_c)'
p912
aS'Value: <undetermined>'
p913
aS'Possible Values: <undetermined>'
p914
aS'Prefix operands: [<LLIL_SYSCALL>]'
p915
aS'Postfix operands: [<LLIL_SYSCALL>]'
p916
aS'SSA form: r0#6, r1#5, r2#6, r3#3, r12#2, lr#2, mem#5 = syscall(stack = sp#4 @ mem#4, params = r0#5, r1#4, r2#5, r3#2)'
p917
aS'Non-SSA form: syscall'
p918
aS'MLIL: None'
p919
aS'Mapped MLIL: jump(0x80400ec)'
p920
aS'Value: <undetermined>'
p921
aS'Possible Values: <undetermined>'
p922
aS'Prefix operands: [<LLIL_JUMP>, <LLIL_CONST_PTR 4>, 134480108L]'
p923
aS'Postfix operands: [134480108L, <LLIL_CONST_PTR 4>, <LLIL_JUMP>]'
p924
aS'SSA form: jump(0x80400ec)'
p925
aS'Non-SSA form: jump(0x80400ec)'
p926
aS'MLIL: r1 = r1 + 1'
p927
aS'Mapped MLIL: r1 = r1 + 1'
p928
aS'Value: <undetermined>'
p929
aS'Possible Values: <undetermined>'
p930
aS'Prefix operands: [<LLIL_SET_REG 4>, r1, <LLIL_ADD 4>, <LLIL_REG 4>, r1, <LLIL_CONST 4>, 1L]'
p931
aS'Postfix operands: [r1, r1, <LLIL_REG 4>, 1L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p932
aS'SSA form: r1#6 = r1#2 + 1'
p933
aS'Non-SSA form: r1 = r1 + 1'
p934
aS'MLIL: r0_2 = r2 + 1'
p935
aS'Mapped MLIL: r0 = r2 + 1'
p936
aS'Value: <undetermined>'
p937
aS'Possible Values: <undetermined>'
p938
aS'Prefix operands: [<LLIL_SET_REG 4>, r0, <LLIL_ADD 4>, <LLIL_REG 4>, r2, <LLIL_CONST 4>, 1L]'
p939
aS'Postfix operands: [r0, r2, <LLIL_REG 4>, 1L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p940
aS'SSA form: r0#7 = r2#3 + 1'
p941
aS'Non-SSA form: r0 = r2 + 1'
p942
aS'MLIL: r2 = r0_2'
p943
aS'Mapped MLIL: r2 = r0'
p944
aS'Value: <undetermined>'
p945
aS'Possible Values: <undetermined>'
p946
aS'Prefix operands: [<LLIL_SET_REG 4>, r2, <LLIL_REG 4>, r0]'
p947
aS'Postfix operands: [r2, r0, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p948
aS'SSA form: r2#7 = r0#7'
p949
aS'Non-SSA form: r2 = r0'
p950
aS'MLIL: None'
p951
aS'Mapped MLIL: goto 14 @ 0x80400b4'
p952
aS'Value: <undetermined>'
p953
aS'Possible Values: <undetermined>'
p954
aS'Prefix operands: [<LLIL_GOTO>, 11L]'
p955
aS'Postfix operands: [11L, <LLIL_GOTO>]'
p956
aS'SSA form: goto 14 @ 0x80400b4'
p957
aS'Non-SSA form: goto 11 @ 0x80400b4'
p958
asS'test_med_il_vars'
p959
(lp960
S'SSA var definition: None'
p961
aS'SSA var uses: [0L]'
p962
aS'SSA var value: <return address>'
p963
aS'SSA var possible values: <undetermined>'
p964
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = lr#0>>'
p965
aS'SSA var definition: 0'
p966
aS'SSA var uses: []'
p967
aS'SSA var value: <return address>'
p968
aS'SSA var possible values: <undetermined>'
p969
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = lr#0>>'
p970
aS'SSA var definition: None'
p971
aS'SSA var uses: [1L]'
p972
aS'SSA var value: <entry r11>'
p973
aS'SSA var possible values: <entry r11>'
p974
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_8#1 = r11#0>>'
p975
aS'SSA var definition: 1'
p976
aS'SSA var uses: []'
p977
aS'SSA var value: <entry r11>'
p978
aS'SSA var possible values: <entry r11>'
p979
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_8#1 = r11#0>>'
p980
aS'SSA var definition: None'
p981
aS'SSA var uses: [2L]'
p982
aS'SSA var value: <entry r7>'
p983
aS'SSA var possible values: <entry r7>'
p984
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_c#1 = arg1#0>>'
p985
aS'SSA var definition: 2'
p986
aS'SSA var uses: [10L]'
p987
aS'SSA var value: <entry r7>'
p988
aS'SSA var possible values: <entry r7>'
p989
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_c#1 = arg1#0>>'
p990
aS'SSA var definition: 3'
p991
aS'SSA var uses: [6L]'
p992
aS'SSA var value: <const ptr 0x80410ec>'
p993
aS'SSA var possible values: <const ptr 0x80410ec>'
p994
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r2#1 = 0x80410ec>>'
p995
aS'SSA var definition: 4'
p996
aS'SSA var uses: [6L]'
p997
aS'SSA var value: <const 0x0>'
p998
aS'SSA var possible values: <const 0x0>'
p999
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r1#1 = 0>>'
p1000
aS'SSA var definition: 6'
p1001
aS'SSA var uses: [6L, 15L]'
p1002
aS'SSA var value: <undetermined>'
p1003
aS'SSA var possible values: <undetermined>'
p1004
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r0_1#2 = sx.d([r2#2].b @ mem#0)>>'
p1005
aS'SSA var definition: 6'
p1006
aS'SSA var uses: [7L]'
p1007
aS'SSA var value: <undetermined>'
p1008
aS'SSA var possible values: <signed ranges: [<range: -0x80 to 0x7f>]>'
p1009
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r0_1#2 = sx.d([r2#2].b @ mem#0)>>'
p1010
aS'SSA var definition: 6'
p1011
aS'SSA var uses: [7L]'
p1012
aS'SSA var value: <undetermined>'
p1013
aS'SSA var possible values: <signed ranges: [<range: -0x80 to 0x7f>]>'
p1014
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (r0_1#2 == 0) then 11 @ 0x80400d0 else 17 @ 0x80400c0>>'
p1015
aS'SSA var definition: 6'
p1016
aS'SSA var uses: [8L, 14L]'
p1017
aS'SSA var value: <undetermined>'
p1018
aS'SSA var possible values: <undetermined>'
p1019
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r2_1#3 = r1#2>>'
p1020
aS'SSA var definition: 8'
p1021
aS'SSA var uses: [10L]'
p1022
aS'SSA var value: <undetermined>'
p1023
aS'SSA var possible values: <undetermined>'
p1024
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r2_1#3 = r1#2>>'
p1025
aS'SSA var definition: 9'
p1026
aS'SSA var uses: []'
p1027
aS'SSA var value: <const 0x4>'
p1028
aS'SSA var possible values: <const 0x4>'
p1029
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r7#1 = 4>>'
p1030
aS'SSA var definition: 8'
p1031
aS'SSA var uses: [10L]'
p1032
aS'SSA var value: <undetermined>'
p1033
aS'SSA var possible values: <undetermined>'
p1034
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: mem#1 = syscall(1, 0x80410ec, r2_1#3, 0x80410ec, var_c#1) @ mem#0>>'
p1035
aS'SSA var definition: 2'
p1036
aS'SSA var uses: [10L]'
p1037
aS'SSA var value: <entry r7>'
p1038
aS'SSA var possible values: <entry r7>'
p1039
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: mem#1 = syscall(1, 0x80410ec, r2_1#3, 0x80410ec, var_c#1) @ mem#0>>'
p1040
aS'SSA var definition: 11'
p1041
aS'SSA var uses: []'
p1042
aS'SSA var value: <const 0x1>'
p1043
aS'SSA var possible values: <const 0x1>'
p1044
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r7_1#2 = 1>>'
p1045
aS'SSA var definition: 6'
p1046
aS'SSA var uses: [8L, 14L]'
p1047
aS'SSA var value: <undetermined>'
p1048
aS'SSA var possible values: <undetermined>'
p1049
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r1#3 = r1#2 + 1>>'
p1050
aS'SSA var definition: 14'
p1051
aS'SSA var uses: [6L]'
p1052
aS'SSA var value: <undetermined>'
p1053
aS'SSA var possible values: <undetermined>'
p1054
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r1#3 = r1#2 + 1>>'
p1055
aS'SSA var definition: 6'
p1056
aS'SSA var uses: [6L, 15L]'
p1057
aS'SSA var value: <undetermined>'
p1058
aS'SSA var possible values: <undetermined>'
p1059
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r0_2#3 = r2#2 + 1>>'
p1060
aS'SSA var definition: 15'
p1061
aS'SSA var uses: [6L, 16L]'
p1062
aS'SSA var value: <undetermined>'
p1063
aS'SSA var possible values: <undetermined>'
p1064
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r0_2#3 = r2#2 + 1>>'
p1065
aS'SSA var definition: 15'
p1066
aS'SSA var uses: [6L, 16L]'
p1067
aS'SSA var value: <undetermined>'
p1068
aS'SSA var possible values: <undetermined>'
p1069
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r2#4 = r0_2#3>>'
p1070
aS'SSA var definition: 16'
p1071
aS'SSA var uses: [6L]'
p1072
aS'SSA var value: <undetermined>'
p1073
aS'SSA var possible values: <undetermined>'
p1074
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: r2#4 = r0_2#3>>'
p1075
as.
(dp0
S'test_function_can_return'
p1
(lp2
S'_main SymbolType.FunctionSymbol 0x100000e50L True'
p3
aS'_atoi SymbolType.ImportedFunctionSymbol 0x100000f2cL True'
p4
aS'_puts SymbolType.ImportedFunctionSymbol 0x100000f32L True'
p5
asS'test_function_stack'
p6
(lp7
S"['__saved_rbp', 'testautovar']"
p8
aS'<undetermined>'
p9
ag9
aS'None'
p10
aS"['testautovar']"
p11
ag9
ag9
aS'None'
p12
aS"['testautovar']"
p13
ag9
ag9
aS'None'
p14
asS'test_strings'
p15
(lp16
S'__PAGEZERO StringType.AsciiString 0x100000028L'
p17
aS'__TEXT StringType.AsciiString 0x100000070L'
p18
aS'__text StringType.AsciiString 0x1000000b0L'
p19
aS'__TEXT StringType.AsciiString 0x1000000c0L'
p20
aS'__stubs StringType.AsciiString 0x100000100L'
p21
aS'__TEXT StringType.AsciiString 0x100000110L'
p22
aS'__stub_helper StringType.AsciiString 0x100000150L'
p23
aS'__TEXT StringType.AsciiString 0x100000160L'
p24
aS'__cstring StringType.AsciiString 0x1000001a0L'
p25
aS'__TEXT StringType.AsciiString 0x1000001b0L'
p26
aS'__unwind_info StringType.AsciiString 0x1000001f0L'
p27
aS'__TEXT StringType.AsciiString 0x100000200L'
p28
aS'__DATA StringType.AsciiString 0x100000248L'
p29
aS'__nl_symbol_ptr StringType.AsciiString 0x100000288L'
p30
aS'__DATA StringType.AsciiString 0x100000298L'
p31
aS'__la_symbol_ptr StringType.AsciiString 0x1000002d8L'
p32
aS'__DATA StringType.AsciiString 0x1000002e8L'
p33
aS'__LINKEDIT StringType.AsciiString 0x100000330L'
p34
aS'/usr/lib/dyld StringType.AsciiString 0x100000414L'
p35
aS'R\nZ$ StringType.AsciiString 0x10000043dL'
p36
aS'/usr/lib/libSystem.B.dylib StringType.AsciiString 0x100000490L'
p37
aS'Odd number less than 32 StringType.AsciiString 0x100000f60L'
p38
aS'Even number less than 32 StringType.AsciiString 0x100000f80L'
p39
aS'Five StringType.AsciiString 0x100000f99L'
p40
aS'Something else StringType.AsciiString 0x100000fa2L'
p41
aS'@dyld_stub_binder StringType.AsciiString 0x100002009L'
p42
aS'@_atoi StringType.AsciiString 0x100002023L'
p43
aS'@_puts StringType.AsciiString 0x10000202fL'
p44
aS'_mh_execute_header StringType.AsciiString 0x10000203fL'
p45
aS'!main StringType.AsciiString 0x100002052L'
p46
aS'__mh_execute_header StringType.AsciiString 0x1000020daL'
p47
aS'_main StringType.AsciiString 0x1000020eeL'
p48
aS'_atoi StringType.AsciiString 0x1000020f4L'
p49
aS'_puts StringType.AsciiString 0x1000020faL'
p50
aS'dyld_stub_binder StringType.AsciiString 0x100002100L'
p51
asS'test_function_low_il_basic_blocks'
p52
(lp53
S'0x0L 0x8L 2'
p54
aS'0x8L 0xaL 1'
p55
aS'0xaL 0xeL 4'
p56
aS'0xeL 0x12L 0'
p57
aS'0x12L 0x14L 1'
p58
aS'0x14L 0x16L 1'
p59
aS'0x16L 0x18L 1'
p60
aS'0x18L 0x1aL 1'
p61
aS'0x0L 0x1L 0'
p62
aS'0x0L 0x1L 0'
p63
asS'test_functions_attributes'
p64
(lp65
S"['__saved_rbp', 'testautovar', 'rax', 'rax_1', 'rax_2', 'rcx', 'rcx_1', 'rcx_2', 'arg2', 'arg1', 'rdi', 'rdi_1', 'cond:0']"
p66
aS'[<branch x86_64:0x100000e73 -> x86_64:0x100000e75>, <branch x86_64:0x100000e73 -> x86_64:0x100000e7e>, <branch x86_64:0x100000e73 -> x86_64:0x100000e97>, <branch x86_64:0x100000e73 -> x86_64:0x100000ea0>]'
p67
aS'{}'
p68
aI1
aS"['rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p69
aS'False'
p70
aS'True'
p71
aI39
ag9
aS'testcomment _main'
p72
ag70
ag70
aS'push(rbp)'
p73
aS'[]'
p74
aS"['rsp', 'rbp']"
p75
aS"['rsp']"
p76
aS'[<ref to __saved_rbp>]'
p77
aS'[]'
p78
aS'push(rbp)'
p79
aS'[]'
p80
aS'[]'
p81
aS'<graph of <func: x86_64@0x100000e50>>'
p82
aS'[]'
p83
aS'[]'
p84
aS'<block: x86_64@0x100000e50-0x100000e65>'
p85
aS'<color: #ff00ff>'
p86
aS'[<0x100000e50: int64_t _main(int64_t arg1, int64_t* arg2)>]'
p87
aS"['testautovar', 'rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p88
aS'[]'
p89
aS'{}'
p90
aI1
aS"['rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p91
ag70
ag71
aI3
ag9
aS'testcomment _atoi'
p92
ag70
ag70
aS'<return> tailcall([0x100001010].q)'
p93
aS'[]'
p94
aS'[]'
p95
aS'[]'
p96
aS'[]'
p97
aS'[<constant pointer 0x100001010>]'
p98
aS'jump([0x100001010].q)'
p99
aS'[]'
p100
aS'[]'
p101
aS'<graph of <func: x86_64@0x100000f2c>>'
p102
aS'[]'
p103
aS'[]'
p104
aS'<block: x86_64@0x100000f2c-0x100000f32>'
p105
aS'<color: #ff00ff>'
p106
aS'[<0x100000f2c: int64_t _atoi()>]'
p107
aS"['testautovar', 'rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p108
aS'[]'
p109
aS'{}'
p110
aI1
aS"['rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p111
ag70
ag71
aI3
ag9
aS'testcomment _puts'
p112
ag70
ag70
aS'<return> tailcall([0x100001018].q)'
p113
aS'[]'
p114
aS'[]'
p115
aS'[]'
p116
aS'[]'
p117
aS'[<constant pointer 0x100001018>]'
p118
aS'jump([0x100001018].q)'
p119
aS'[]'
p120
aS'[]'
p121
aS'<graph of <func: x86_64@0x100000f32>>'
p122
aS'[]'
p123
aS'[]'
p124
aS'<block: x86_64@0x100000f32-0x100000f38>'
p125
aS'<color: #ff00ff>'
p126
aS'[<0x100000f32: int64_t _puts()>]'
p127
asS'test_function_starts'
p128
(lp129
S'0x100000e50L'
p130
aS'0x100000f2cL'
p131
aS'0x100000f32L'
p132
asS'test_function_llil'
p133
(lp134
S'<block: x86_64@0x0-0x8>'
p135
aS'<block: x86_64@0x8-0xa>'
p136
aS'<block: x86_64@0xa-0xe>'
p137
aS'<block: x86_64@0xe-0x12>'
p138
aS'<block: x86_64@0x12-0x14>'
p139
aS'<block: x86_64@0x14-0x16>'
p140
aS'<block: x86_64@0x16-0x18>'
p141
aS'<block: x86_64@0x18-0x1a>'
p142
aS'push(rbp)'
p143
aS'rbp = rsp {__saved_rbp}'
p144
aS'rdi = [rsi].q'
p145
aS'eax = 0'
p146
aS'call(0x100000f2c)'
p147
aS'cond:0 = eax u> 0x1f'
p148
aS'ecx = eax'
p149
aS'if (cond:0) then 8 @ 0x100000e8e else 10 @ 0x100000e65'
p150
aS'rdi = 0x100000fa2'
p151
aS'goto 14 @ 0x100000e85'
p152
aS'rax = 0x100000eac'
p153
aS'rcx = sx.q([rax + (rcx << 2)].d)'
p154
aS'rcx = rcx + rax'
p155
aS'jump(rcx => 18 @ 0x100000e75, 20 @ 0x100000e7e, 22 @ 0x100000e97, 24 @ 0x100000ea0)'
p156
aS'call(0x100000f32)'
p157
aS'eax = 0'
p158
aS'rbp = pop'
p159
aS'<return> jump(pop)'
p160
aS'rdi = 0x100000f80'
p161
aS'goto 14 @ 0x100000e85'
p162
aS'rdi = 0x100000f60'
p163
aS'goto 14 @ 0x100000e85'
p164
aS'rdi = 0x100000f9e'
p165
aS'goto 14 @ 0x100000e85'
p166
aS'rdi = 0x100000f99'
p167
aS'goto 14 @ 0x100000e85'
p168
aS'<block: x86_64@0x0-0x6>'
p169
aS'<block: x86_64@0x6-0x8>'
p170
aS'<block: x86_64@0x8-0xb>'
p171
aS'<block: x86_64@0xb-0xe>'
p172
aS'<block: x86_64@0xe-0x10>'
p173
aS'<block: x86_64@0x10-0x12>'
p174
aS'<block: x86_64@0x12-0x14>'
p175
aS'<block: x86_64@0x14-0x16>'
p176
aS'rdi = [arg2].q'
p177
aS'rax = 0'
p178
aS'rax_1 = 0x100000f2c(rdi)'
p179
aS'cond:0 = rax_1.eax u> 0x1f'
p180
aS'rcx = zx.q(rax_1.eax)'
p181
aS'if (cond:0) then 6 @ 0x100000e8e else 8 @ 0x100000e6c'
p182
aS'rdi_1 = 0x100000fa2'
p183
aS'goto 11 @ 0x100000e85'
p184
aS'rcx_1 = sx.q([0x100000eac + (rcx << 2)].d)'
p185
aS'rcx_2 = rcx_1 + 0x100000eac'
p186
aS'jump(rcx_2 => 14 @ 0x100000e75, 16 @ 0x100000e7e, 18 @ 0x100000e97, 20 @ 0x100000ea0)'
p187
aS'0x100000f32(rdi_1)'
p188
aS'rax_2 = 0'
p189
aS'return 0'
p190
aS'rdi_1 = 0x100000f80'
p191
aS'goto 11 @ 0x100000e85'
p192
aS'rdi_1 = 0x100000f60'
p193
aS'goto 11 @ 0x100000e85'
p194
aS'rdi_1 = 0x100000f9e'
p195
aS'goto 11 @ 0x100000e85'
p196
aS'rdi_1 = 0x100000f99'
p197
aS'goto 11 @ 0x100000e85'
p198
aS"(['push', '    ', 'rbp'], 4294970960L)"
p199
aS"(['mov', '     ', 'rbp', ', ', 'rsp'], 4294970961L)"
p200
aS"(['mov', '     ', 'rdi', ', ', 'qword ', '[', 'rsi', ']'], 4294970964L)"
p201
aS"(['xor', '     ', 'eax', ', ', 'eax'], 4294970967L)"
p202
aS"(['call', '    ', '0x100000f2c'], 4294970969L)"
p203
aS"(['cmp', '     ', 'eax', ', ', '0x1f'], 4294970974L)"
p204
aS"(['mov', '     ', 'ecx', ', ', 'eax'], 4294970977L)"
p205
aS"(['ja', '      ', '0x100000e8e'], 4294970979L)"
p206
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000fa2', ']'], 4294971022L)"
p207
aS"(['jmp', '     ', '0x100000e85'], 4294971029L)"
p208
aS"(['lea', '     ', 'rax', ', ', '', '[', 'rel ', '0x100000eac', ']'], 4294970981L)"
p209
aS"(['movsxd', '  ', 'rcx', ', ', 'dword ', '[', 'rax', '+', 'rcx', '*4', ']'], 4294970988L)"
p210
aS"(['add', '     ', 'rcx', ', ', 'rax'], 4294970992L)"
p211
aS"(['jmp', '     ', 'rcx'], 4294970995L)"
p212
aS"(['call', '    ', '0x100000f32'], 4294971013L)"
p213
aS"(['xor', '     ', 'eax', ', ', 'eax'], 4294971018L)"
p214
aS"(['pop', '     ', 'rbp'], 4294971020L)"
p215
aS"(['retn', '    '], 4294971021L)"
p216
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f80', ']'], 4294970997L)"
p217
aS"(['jmp', '     ', '0x100000e85'], 4294971004L)"
p218
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f60', ']'], 4294971006L)"
p219
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f9e', ']'], 4294971031L)"
p220
aS"(['jmp', '     ', '0x100000e85'], 4294971038L)"
p221
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f99', ']'], 4294971040L)"
p222
aS"(['jmp', '     ', '0x100000e85'], 4294971047L)"
p223
aS'<block: x86_64@0x0-0x1>'
p224
aS'<return> tailcall([0x100001010].q)'
p225
aS'<block: x86_64@0x0-0x1>'
p226
aS'return _atoi() __tailcall'
p227
aS"(['jmp', '     ', 'qword ', '[', 'rel ', '0x100001010', ']'], 4294971180L)"
p228
aS'<block: x86_64@0x0-0x1>'
p229
aS'<return> tailcall([0x100001018].q)'
p230
aS'<block: x86_64@0x0-0x1>'
p231
aS'return _puts() __tailcall'
p232
aS"(['jmp', '     ', 'qword ', '[', 'rel ', '0x100001018', ']'], 4294971186L)"
p233
asS'test_low_il_ssa'
p234
(lp235
S'None'
p236
aS'[]'
p237
ag9
aS'None'
p238
aS'[]'
p239
ag9
aS'None'
p240
aS'[]'
p241
ag9
aS'None'
p242
aS'[]'
p243
ag9
aS'None'
p244
aS'[]'
p245
ag9
aS'None'
p246
aS'[]'
p247
ag9
aS'None'
p248
aS'[]'
p249
ag9
aS'None'
p250
aS'[]'
p251
ag9
aS'None'
p252
aS'[]'
p253
ag9
aS'None'
p254
aS'[]'
p255
ag9
aS'None'
p256
aS'[]'
p257
ag9
aS'None'
p258
aS'[]'
p259
ag9
aS'None'
p260
aS'[]'
p261
ag9
aS'None'
p262
aS'[]'
p263
ag9
aS'4'
p264
aS'[]'
p265
ag9
aS'None'
p266
aS'[]'
p267
ag9
aS'None'
p268
aS'[]'
p269
ag9
aS'None'
p270
aS'[]'
p271
ag9
aS'None'
p272
aS'[]'
p273
ag9
aS'4'
p274
aS'[]'
p275
ag9
aS'None'
p276
aS'[]'
p277
ag9
aS'None'
p278
aS'[]'
p279
ag9
aS'None'
p280
aS'[]'
p281
ag9
aS'4'
p282
aS'[]'
p283
ag9
aS'4'
p284
aS'[]'
p285
ag9
aS'4'
p286
aS'[]'
p287
ag9
aS'4'
p288
aS'[]'
p289
ag9
aS'4'
p290
aS'[]'
p291
ag9
aS'4'
p292
aS'[]'
p293
ag9
aS'None'
p294
aS'[]'
p295
ag9
aS'None'
p296
aS'[]'
p297
ag9
aS'None'
p298
aS'[]'
p299
ag9
aS'None'
p300
aS'[]'
p301
ag9
aS'None'
p302
aS'[]'
p303
ag9
aS'None'
p304
aS'[]'
p305
ag9
aS'None'
p306
aS'[]'
p307
ag9
aS'None'
p308
aS'[]'
p309
ag9
aS'None'
p310
aS'[]'
p311
ag9
aS'None'
p312
aS'[]'
p313
ag9
aS'None'
p314
aS'[]'
p315
ag9
aS'None'
p316
aS'[]'
p317
ag9
aS'None'
p318
aS'[]'
p319
ag9
aS'None'
p320
aS'[]'
p321
ag9
aS'None'
p322
aS'[]'
p323
ag9
aS'None'
p324
aS'[]'
p325
ag9
aS'None'
p326
aS'[]'
p327
ag9
aS'None'
p328
aS'[]'
p329
ag9
aS'None'
p330
aS'[]'
p331
ag9
aS'None'
p332
aS'[]'
p333
ag9
aS'None'
p334
aS'[]'
p335
ag9
aS'4'
p336
aS'[]'
p337
ag9
aS'4'
p338
aS'[]'
p339
ag9
aS'4'
p340
aS'[]'
p341
ag9
aS'4'
p342
aS'[]'
p343
ag9
aS'None'
p344
aS'[]'
p345
ag9
aS'4'
p346
aS'[]'
p347
ag9
aS'4'
p348
aS'[]'
p349
ag9
aS'4'
p350
aS'[]'
p351
ag9
aS'4'
p352
aS'[]'
p353
ag9
aS'4'
p354
aS'[]'
p355
ag9
aS'None'
p356
aS'[]'
p357
ag9
aS'None'
p358
aS'[]'
p359
ag9
aS'None'
p360
aS'[]'
p361
ag9
aS'None'
p362
aS'[]'
p363
ag9
aS'None'
p364
aS'[]'
p365
ag9
aS'4'
p366
aS'[14L]'
p367
ag9
aS'4'
p368
aS'[14L]'
p369
ag9
aS'None'
p370
aS'[]'
p371
ag9
aS'None'
p372
aS'[]'
p373
ag9
aS'None'
p374
aS'[]'
p375
ag9
aS'2'
p376
aS'[4L]'
p377
ag9
aS'None'
p378
aS'[]'
p379
ag9
aS'None'
p380
aS'[]'
p381
ag9
aS'None'
p382
aS'[]'
p383
ag9
aS'None'
p384
aS'[]'
p385
ag9
aS'4'
p386
aS'[]'
p387
ag9
aS'None'
p388
aS'[]'
p389
ag9
aS'None'
p390
aS'[]'
p391
ag9
aS'None'
p392
aS'[]'
p393
ag9
aS'None'
p394
aS'[]'
p395
ag9
aS'None'
p396
aS'[]'
p397
ag9
aS'None'
p398
aS'[]'
p399
ag9
aS'None'
p400
aS'[]'
p401
ag9
aS'None'
p402
aS'[]'
p403
ag9
aS'None'
p404
aS'[]'
p405
ag9
aS'4'
p406
aS'[14L]'
p407
ag9
aS'None'
p408
aS'[]'
p409
ag9
aS'0'
p410
aS'[1L, 4L, 14L, 16L]'
p411
aS'<stack frame offset -0x8>'
p412
aS'None'
p413
aS'[]'
p414
ag9
aS'None'
p415
aS'[]'
p416
ag9
aS'None'
p417
aS'[]'
p418
ag9
aS'1'
p419
aS'[]'
p420
aS'<stack frame offset -0x8>'
p421
aS'None'
p422
aS'[]'
p423
ag9
aS'None'
p424
aS'[]'
p425
ag9
aS'None'
p426
aS'[]'
p427
ag9
aS'4'
p428
aS'[14L]'
p429
ag9
aS'None'
p430
aS'[]'
p431
ag9
aS'None'
p432
aS'[]'
p433
ag9
aS'3'
p434
aS'[]'
p435
aS'<const 0x0>'
p436
aS'None'
p437
aS'[]'
p438
ag9
aS'None'
p439
aS'[]'
p440
ag9
aS'4'
p441
aS'[]'
p442
ag9
aS'None'
p443
aS'[]'
p444
ag9
aS'None'
p445
aS'[]'
p446
ag9
aS'None'
p447
aS'[]'
p448
ag9
aS'None'
p449
aS'[]'
p450
ag9
aS'None'
p451
aS'[]'
p452
ag9
aS'None'
p453
aS'[]'
p454
ag9
aS'None'
p455
aS'[]'
p456
ag9
aS'None'
p457
aS'[]'
p458
ag9
aS'None'
p459
aS'[]'
p460
ag9
aS'None'
p461
aS'[]'
p462
ag9
aS'None'
p463
aS'[]'
p464
ag9
aS'None'
p465
aS'[]'
p466
ag9
aS'None'
p467
aS'[]'
p468
ag9
aS'None'
p469
aS'[]'
p470
ag9
aS'None'
p471
aS'[]'
p472
ag9
aS'[]'
p473
ag9
aS'[]'
p474
ag9
aS'[]'
p475
ag9
aS'[]'
p476
ag9
aS'[]'
p477
ag9
aS'[]'
p478
ag9
aS'[]'
p479
ag9
aS'[]'
p480
ag9
aS'[]'
p481
ag9
aS'[]'
p482
ag9
aS'[]'
p483
ag9
aS'0'
p484
aS'0'
p485
aS'0'
p486
aS'0'
p487
aS'1'
p488
aS'2'
p489
aS'None'
p490
aS'2'
p491
aS'2'
p492
aS'3'
p493
aS'0'
p494
aS'3'
p495
aS'3'
p496
aS'4'
p497
aS'1'
p498
aS'4'
p499
aS'4'
p500
aS'5'
p501
aS'2'
p502
aS'5'
p503
aS'5'
p504
aS'6'
p505
aS'3'
p506
aS'6'
p507
aS'6'
p508
aS'7'
p509
aS'4'
p510
aS'7'
p511
aS'7'
p512
aS'8'
p513
aS'5'
p514
aS'8'
p515
aS'8'
p516
aS'9'
p517
aS'6'
p518
aS'9'
p519
aS'9'
p520
aS'10'
p521
aS'7'
p522
aS'10'
p523
aS'10'
p524
aS'11'
p525
aS'None'
p526
aS'11'
p527
aS'11'
p528
aS'12'
p529
aS'8'
p530
aS'12'
p531
aS'12'
p532
aS'13'
p533
aS'9'
p534
aS'13'
p535
aS'13'
p536
aS'14'
p537
aS'10'
p538
aS'14'
p539
aS'14'
p540
aS'18'
p541
aS'11'
p542
aS'15'
p543
aS'15'
p544
aS'19'
p545
aS'12'
p546
aS'16'
p547
aS'16'
p548
aS'20'
p549
aS'None'
p550
aS'17'
p551
aS'17'
p552
aS'22'
p553
aS'13'
p554
aS'19'
p555
aS'18'
p556
aS'23'
p557
aS'14'
p558
aS'20'
p559
aS'19'
p560
aS'24'
p561
aS'15'
p562
aS'21'
p563
aS'20'
p564
aS'25'
p565
aS'16'
p566
aS'22'
p567
aS'21'
p568
aS'26'
p569
aS'17'
p570
aS'23'
p571
aS'22'
p572
aS'27'
p573
aS'18'
p574
aS'24'
p575
aS'23'
p576
aS'28'
p577
aS'19'
p578
aS'25'
p579
aS'24'
p580
aS'29'
p581
aS'20'
p582
aS'26'
p583
aS'25'
p584
aS'30'
p585
aS'21'
p586
aS'27'
p587
aS'None'
p588
aS'[]'
p589
ag9
aS'None'
p590
aS'[]'
p591
ag9
aS'None'
p592
aS'[]'
p593
ag9
aS'None'
p594
aS'[]'
p595
ag9
aS'None'
p596
aS'[]'
p597
ag9
aS'None'
p598
aS'[]'
p599
ag9
aS'None'
p600
aS'[]'
p601
ag9
aS'None'
p602
aS'[]'
p603
ag9
aS'None'
p604
aS'[]'
p605
ag9
aS'None'
p606
aS'[]'
p607
ag9
aS'None'
p608
aS'[]'
p609
ag9
aS'None'
p610
aS'[]'
p611
ag9
aS'None'
p612
aS'[]'
p613
ag9
aS'None'
p614
aS'[]'
p615
ag9
aS'0'
p616
aS'[]'
p617
ag9
aS'None'
p618
aS'[]'
p619
ag9
aS'None'
p620
aS'[]'
p621
ag9
aS'None'
p622
aS'[]'
p623
ag9
aS'None'
p624
aS'[]'
p625
ag9
aS'0'
p626
aS'[]'
p627
ag9
aS'None'
p628
aS'[]'
p629
ag9
aS'None'
p630
aS'[]'
p631
ag9
aS'None'
p632
aS'[]'
p633
ag9
aS'0'
p634
aS'[]'
p635
ag9
aS'0'
p636
aS'[]'
p637
ag9
aS'0'
p638
aS'[]'
p639
ag9
aS'0'
p640
aS'[]'
p641
ag9
aS'0'
p642
aS'[]'
p643
ag9
aS'0'
p644
aS'[]'
p645
ag9
aS'None'
p646
aS'[]'
p647
ag9
aS'None'
p648
aS'[]'
p649
ag9
aS'None'
p650
aS'[]'
p651
ag9
aS'None'
p652
aS'[]'
p653
ag9
aS'None'
p654
aS'[]'
p655
ag9
aS'None'
p656
aS'[]'
p657
ag9
aS'None'
p658
aS'[]'
p659
ag9
aS'None'
p660
aS'[]'
p661
ag9
aS'None'
p662
aS'[]'
p663
ag9
aS'None'
p664
aS'[]'
p665
ag9
aS'None'
p666
aS'[]'
p667
ag9
aS'None'
p668
aS'[]'
p669
ag9
aS'None'
p670
aS'[]'
p671
ag9
aS'None'
p672
aS'[]'
p673
ag9
aS'None'
p674
aS'[]'
p675
ag9
aS'None'
p676
aS'[]'
p677
ag9
aS'None'
p678
aS'[]'
p679
ag9
aS'None'
p680
aS'[]'
p681
ag9
aS'None'
p682
aS'[]'
p683
ag9
aS'None'
p684
aS'[]'
p685
ag9
aS'None'
p686
aS'[]'
p687
ag9
aS'0'
p688
aS'[]'
p689
ag9
aS'0'
p690
aS'[]'
p691
ag9
aS'0'
p692
aS'[]'
p693
ag9
aS'0'
p694
aS'[]'
p695
ag9
aS'None'
p696
aS'[]'
p697
ag9
aS'0'
p698
aS'[]'
p699
ag9
aS'0'
p700
aS'[]'
p701
ag9
aS'0'
p702
aS'[]'
p703
ag9
aS'0'
p704
aS'[]'
p705
ag9
aS'0'
p706
aS'[]'
p707
ag9
aS'None'
p708
aS'[]'
p709
ag9
aS'None'
p710
aS'[]'
p711
ag9
aS'None'
p712
aS'[]'
p713
ag9
aS'None'
p714
aS'[]'
p715
ag9
aS'None'
p716
aS'[]'
p717
ag9
aS'0'
p718
aS'[]'
p719
ag9
aS'0'
p720
aS'[]'
p721
ag9
aS'None'
p722
aS'[]'
p723
ag9
aS'None'
p724
aS'[]'
p725
ag9
aS'None'
p726
aS'[]'
p727
ag9
aS'0'
p728
aS'[]'
p729
ag9
aS'None'
p730
aS'[]'
p731
ag9
aS'None'
p732
aS'[]'
p733
ag9
aS'None'
p734
aS'[]'
p735
ag9
aS'None'
p736
aS'[]'
p737
ag9
aS'0'
p738
aS'[]'
p739
ag9
aS'None'
p740
aS'[]'
p741
ag9
aS'None'
p742
aS'[]'
p743
ag9
aS'None'
p744
aS'[]'
p745
ag9
aS'None'
p746
aS'[]'
p747
ag9
aS'None'
p748
aS'[]'
p749
ag9
aS'None'
p750
aS'[]'
p751
ag9
aS'None'
p752
aS'[]'
p753
ag9
aS'None'
p754
aS'[]'
p755
ag9
aS'None'
p756
aS'[]'
p757
ag9
aS'0'
p758
aS'[]'
p759
ag9
aS'None'
p760
aS'[]'
p761
ag9
aS'None'
p762
aS'[]'
p763
ag9
aS'None'
p764
aS'[]'
p765
ag9
aS'None'
p766
aS'[]'
p767
ag9
aS'None'
p768
aS'[]'
p769
ag9
aS'None'
p770
aS'[]'
p771
ag9
aS'None'
p772
aS'[]'
p773
ag9
aS'None'
p774
aS'[]'
p775
ag9
aS'None'
p776
aS'[]'
p777
ag9
aS'0'
p778
aS'[]'
p779
ag9
aS'None'
p780
aS'[]'
p781
ag9
aS'None'
p782
aS'[]'
p783
ag9
aS'0'
p784
aS'[]'
p785
ag9
aS'None'
p786
aS'[]'
p787
ag9
aS'None'
p788
aS'[]'
p789
ag9
aS'0'
p790
aS'[]'
p791
ag9
aS'None'
p792
aS'[]'
p793
ag9
aS'None'
p794
aS'[]'
p795
ag9
aS'None'
p796
aS'[]'
p797
ag9
aS'None'
p798
aS'[]'
p799
ag9
aS'None'
p800
aS'[]'
p801
ag9
aS'None'
p802
aS'[]'
p803
ag9
aS'None'
p804
aS'[]'
p805
ag9
aS'None'
p806
aS'[]'
p807
ag9
aS'None'
p808
aS'[]'
p809
ag9
aS'None'
p810
aS'[]'
p811
ag9
aS'None'
p812
aS'[]'
p813
ag9
aS'None'
p814
aS'[]'
p815
ag9
aS'None'
p816
aS'[]'
p817
ag9
aS'None'
p818
aS'[]'
p819
ag9
aS'None'
p820
aS'[]'
p821
ag9
aS'[]'
p822
ag9
aS'[]'
p823
ag9
aS'[]'
p824
ag9
aS'[]'
p825
ag9
aS'[]'
p826
ag9
aS'[]'
p827
ag9
aS'[]'
p828
ag9
aS'[]'
p829
ag9
aS'[]'
p830
ag9
aS'[]'
p831
ag9
aS'[]'
p832
ag9
aS'0'
p833
aS'0'
p834
aS'0'
p835
aS'0'
p836
aS'None'
p837
aS'[]'
p838
ag9
aS'None'
p839
aS'[]'
p840
ag9
aS'None'
p841
aS'[]'
p842
ag9
aS'None'
p843
aS'[]'
p844
ag9
aS'None'
p845
aS'[]'
p846
ag9
aS'None'
p847
aS'[]'
p848
ag9
aS'None'
p849
aS'[]'
p850
ag9
aS'None'
p851
aS'[]'
p852
ag9
aS'None'
p853
aS'[]'
p854
ag9
aS'None'
p855
aS'[]'
p856
ag9
aS'None'
p857
aS'[]'
p858
ag9
aS'None'
p859
aS'[]'
p860
ag9
aS'None'
p861
aS'[]'
p862
ag9
aS'None'
p863
aS'[]'
p864
ag9
aS'0'
p865
aS'[]'
p866
ag9
aS'None'
p867
aS'[]'
p868
ag9
aS'None'
p869
aS'[]'
p870
ag9
aS'None'
p871
aS'[]'
p872
ag9
aS'None'
p873
aS'[]'
p874
ag9
aS'0'
p875
aS'[]'
p876
ag9
aS'None'
p877
aS'[]'
p878
ag9
aS'None'
p879
aS'[]'
p880
ag9
aS'None'
p881
aS'[]'
p882
ag9
aS'0'
p883
aS'[]'
p884
ag9
aS'0'
p885
aS'[]'
p886
ag9
aS'0'
p887
aS'[]'
p888
ag9
aS'0'
p889
aS'[]'
p890
ag9
aS'0'
p891
aS'[]'
p892
ag9
aS'0'
p893
aS'[]'
p894
ag9
aS'None'
p895
aS'[]'
p896
ag9
aS'None'
p897
aS'[]'
p898
ag9
aS'None'
p899
aS'[]'
p900
ag9
aS'None'
p901
aS'[]'
p902
ag9
aS'None'
p903
aS'[]'
p904
ag9
aS'None'
p905
aS'[]'
p906
ag9
aS'None'
p907
aS'[]'
p908
ag9
aS'None'
p909
aS'[]'
p910
ag9
aS'None'
p911
aS'[]'
p912
ag9
aS'None'
p913
aS'[]'
p914
ag9
aS'None'
p915
aS'[]'
p916
ag9
aS'None'
p917
aS'[]'
p918
ag9
aS'None'
p919
aS'[]'
p920
ag9
aS'None'
p921
aS'[]'
p922
ag9
aS'None'
p923
aS'[]'
p924
ag9
aS'None'
p925
aS'[]'
p926
ag9
aS'None'
p927
aS'[]'
p928
ag9
aS'None'
p929
aS'[]'
p930
ag9
aS'None'
p931
aS'[]'
p932
ag9
aS'None'
p933
aS'[]'
p934
ag9
aS'None'
p935
aS'[]'
p936
ag9
aS'0'
p937
aS'[]'
p938
ag9
aS'0'
p939
aS'[]'
p940
ag9
aS'0'
p941
aS'[]'
p942
ag9
aS'0'
p943
aS'[]'
p944
ag9
aS'None'
p945
aS'[]'
p946
ag9
aS'0'
p947
aS'[]'
p948
ag9
aS'0'
p949
aS'[]'
p950
ag9
aS'0'
p951
aS'[]'
p952
ag9
aS'0'
p953
aS'[]'
p954
ag9
aS'0'
p955
aS'[]'
p956
ag9
aS'None'
p957
aS'[]'
p958
ag9
aS'None'
p959
aS'[]'
p960
ag9
aS'None'
p961
aS'[]'
p962
ag9
aS'None'
p963
aS'[]'
p964
ag9
aS'None'
p965
aS'[]'
p966
ag9
aS'0'
p967
aS'[]'
p968
ag9
aS'0'
p969
aS'[]'
p970
ag9
aS'None'
p971
aS'[]'
p972
ag9
aS'None'
p973
aS'[]'
p974
ag9
aS'None'
p975
aS'[]'
p976
ag9
aS'0'
p977
aS'[]'
p978
ag9
aS'None'
p979
aS'[]'
p980
ag9
aS'None'
p981
aS'[]'
p982
ag9
aS'None'
p983
aS'[]'
p984
ag9
aS'None'
p985
aS'[]'
p986
ag9
aS'0'
p987
aS'[]'
p988
ag9
aS'None'
p989
aS'[]'
p990
ag9
aS'None'
p991
aS'[]'
p992
ag9
aS'None'
p993
aS'[]'
p994
ag9
aS'None'
p995
aS'[]'
p996
ag9
aS'None'
p997
aS'[]'
p998
ag9
aS'None'
p999
aS'[]'
p1000
ag9
aS'None'
p1001
aS'[]'
p1002
ag9
aS'None'
p1003
aS'[]'
p1004
ag9
aS'None'
p1005
aS'[]'
p1006
ag9
aS'0'
p1007
aS'[]'
p1008
ag9
aS'None'
p1009
aS'[]'
p1010
ag9
aS'None'
p1011
aS'[]'
p1012
ag9
aS'None'
p1013
aS'[]'
p1014
ag9
aS'None'
p1015
aS'[]'
p1016
ag9
aS'None'
p1017
aS'[]'
p1018
ag9
aS'None'
p1019
aS'[]'
p1020
ag9
aS'None'
p1021
aS'[]'
p1022
ag9
aS'None'
p1023
aS'[]'
p1024
ag9
aS'None'
p1025
aS'[]'
p1026
ag9
aS'0'
p1027
aS'[]'
p1028
ag9
aS'None'
p1029
aS'[]'
p1030
ag9
aS'None'
p1031
aS'[]'
p1032
ag9
aS'0'
p1033
aS'[]'
p1034
ag9
aS'None'
p1035
aS'[]'
p1036
ag9
aS'None'
p1037
aS'[]'
p1038
ag9
aS'0'
p1039
aS'[]'
p1040
ag9
aS'None'
p1041
aS'[]'
p1042
ag9
aS'None'
p1043
aS'[]'
p1044
ag9
aS'None'
p1045
aS'[]'
p1046
ag9
aS'None'
p1047
aS'[]'
p1048
ag9
aS'None'
p1049
aS'[]'
p1050
ag9
aS'None'
p1051
aS'[]'
p1052
ag9
aS'None'
p1053
aS'[]'
p1054
ag9
aS'None'
p1055
aS'[]'
p1056
ag9
aS'None'
p1057
aS'[]'
p1058
ag9
aS'None'
p1059
aS'[]'
p1060
ag9
aS'None'
p1061
aS'[]'
p1062
ag9
aS'None'
p1063
aS'[]'
p1064
ag9
aS'None'
p1065
aS'[]'
p1066
ag9
aS'None'
p1067
aS'[]'
p1068
ag9
aS'None'
p1069
aS'[]'
p1070
ag9
aS'[]'
p1071
ag9
aS'[]'
p1072
ag9
aS'[]'
p1073
ag9
aS'[]'
p1074
ag9
aS'[]'
p1075
ag9
aS'[]'
p1076
ag9
aS'[]'
p1077
ag9
aS'[]'
p1078
ag9
aS'[]'
p1079
ag9
aS'[]'
p1080
ag9
aS'[]'
p1081
ag9
aS'0'
p1082
aS'0'
p1083
aS'0'
p1084
aS'0'
p1085
asS'test_med_il_instructions'
p1086
(lp1087
S'None'
p1088
aS'rdi#1 = [rsi#0].q @ mem#1'
p1089
ag9
aS'<undetermined>'
p1090
aS'{}'
p1091
aS"['<MLIL_LOAD 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'arg2', 'rdi']"
p1092
aS"['<MLIL_LOAD 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'arg2', 'rdi']"
p1093
aS'rdi#1 = [arg2#0].q @ mem#0'
p1094
aS'rdi = [arg2].q'
p1095
aS'None'
p1096
aS'rax#1 = zx.q(0)'
p1097
ag9
ag1090
aS'{}'
p1098
aS"['0', '<MLIL_CONST 8>', '<MLIL_SET_VAR 8>', 'rax']"
p1099
aS"['0', '<MLIL_CONST 8>', '<MLIL_SET_VAR 8>', 'rax']"
p1100
aS'rax#1 = 0'
p1101
aS'rax = 0'
p1102
aS'None'
p1103
aS'rax#2, rcx#1, rdx#1, rsi#1, rdi#2, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#2 = call(0x100000f2c, stack = rsp#1 @ mem#1, params = rdi#1, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1104
ag9
ag1090
aS'{}'
p1105
aS"['4294971180', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi>]', '[<var int64_t rax_1>]']"
p1106
aS"['4294971180', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi>]', '[<var int64_t rax_1>]']"
p1107
aS'rax_1#2, mem#1 = 0x100000f2c(rdi#1) @ mem#0'
p1108
aS'rax_1 = 0x100000f2c(rdi)'
p1109
aS'None'
p1110
aS'cond:0#1 = rax#2.eax u> 0x1f'
p1111
ag9
ag1090
aS'{}'
p1112
aS"['0', '31', '<MLIL_CMP_UGT 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR>', '<MLIL_VAR_FIELD 4>', 'cond:0', 'rax_1']"
p1113
aS"['0', '31', '<MLIL_CMP_UGT 4>', '<MLIL_CONST 4>', '<MLIL_SET_VAR>', '<MLIL_VAR_FIELD 4>', 'cond:0', 'rax_1']"
p1114
aS'cond:0#1 = rax_1#2.eax u> 0x1f'
p1115
aS'cond:0 = rax_1.eax u> 0x1f'
p1116
aS'None'
p1117
aS'rcx#2 = zx.q(rax#2.eax)'
p1118
ag9
ag1090
aS'{}'
p1119
aS"['0', '<MLIL_SET_VAR 8>', '<MLIL_VAR_FIELD 4>', '<MLIL_ZX 8>', 'rax_1', 'rcx']"
p1120
aS"['0', '<MLIL_SET_VAR 8>', '<MLIL_VAR_FIELD 4>', '<MLIL_ZX 8>', 'rax_1', 'rcx']"
p1121
aS'rcx#1 = zx.q(rax_1#2.eax)'
p1122
aS'rcx = zx.q(rax_1.eax)'
p1123
aS'None'
p1124
aS'if (cond:0#1) then 9 @ 0x100000e8e else 11 @ 0x100000e65'
p1125
ag9
ag1090
aS'{}'
p1126
aS"['6', '8', '<MLIL_IF>', '<MLIL_VAR>', 'cond:0']"
p1127
aS"['6', '8', '<MLIL_IF>', '<MLIL_VAR>', 'cond:0']"
p1128
aS'if (cond:0#1) then 6 @ 0x100000e8e else 8 @ 0x100000e6c'
p1129
aS'if (cond:0) then 6 @ 0x100000e8e else 8 @ 0x100000e6c'
p1130
aS'None'
p1131
aS'rdi#3 = 0x100000fa2'
p1132
ag9
ag1090
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p1133
aS"['4294971298', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1134
aS"['4294971298', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1135
aS'rdi_1#2 = 0x100000fa2'
p1136
aS'rdi_1 = 0x100000fa2'
p1137
aS'None'
p1138
aS'goto 15 @ 0x100000e85'
p1139
ag9
ag1090
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p1140
aS"['11', '<MLIL_GOTO>']"
p1141
aS"['11', '<MLIL_GOTO>']"
p1142
aS'goto 11 @ 0x100000e85'
p1143
aS'goto 11 @ 0x100000e85'
p1144
aS'None'
p1145
aS'rcx#3 = sx.q([rax#3 + (rcx#2 << 2)].d @ mem#2)'
p1146
ag9
ag1090
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1147
aS"['2', '4294971052', '<MLIL_ADD 8>', '<MLIL_CONST 1>', '<MLIL_CONST_PTR 8>', '<MLIL_LOAD 4>', '<MLIL_LSL 8>', '<MLIL_SET_VAR 8>', '<MLIL_SX 8>', '<MLIL_VAR 8>', 'rcx', 'rcx_1']"
p1148
aS"['2', '4294971052', '<MLIL_ADD 8>', '<MLIL_CONST 1>', '<MLIL_CONST_PTR 8>', '<MLIL_LOAD 4>', '<MLIL_LSL 8>', '<MLIL_SET_VAR 8>', '<MLIL_SX 8>', '<MLIL_VAR 8>', 'rcx', 'rcx_1']"
p1149
aS'rcx_1#2 = sx.q([0x100000eac + (rcx#1 << 2)].d @ mem#1)'
p1150
aS'rcx_1 = sx.q([0x100000eac + (rcx << 2)].d)'
p1151
aS'None'
p1152
aS'rcx#4 = rcx#3 + rax#3'
p1153
ag9
ag1090
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1154
aS"['4294971052', '<MLIL_ADD 8>', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'rcx_1', 'rcx_2']"
p1155
aS"['4294971052', '<MLIL_ADD 8>', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'rcx_1', 'rcx_2']"
p1156
aS'rcx_2#3 = rcx_1#2 + 0x100000eac'
p1157
aS'rcx_2 = rcx_1 + 0x100000eac'
p1158
aS'None'
p1159
aS'jump(rcx#4 => 23 @ 0x100000e75, 25 @ 0x100000e7e, 27 @ 0x100000e97, 29 @ 0x100000ea0)'
p1160
ag9
ag1090
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1161
aS"['<MLIL_JUMP_TO>', '<MLIL_VAR 8>', '[14L, 16L, 18L, 20L]', 'rcx_2']"
p1162
aS"['<MLIL_JUMP_TO>', '<MLIL_VAR 8>', '[14L, 16L, 18L, 20L]', 'rcx_2']"
p1163
aS'jump(rcx_2#3 => 16 @ 0x100000e75, 18 @ 0x100000e7e, 20 @ 0x100000e97, 22 @ 0x100000ea0)'
p1164
aS'jump(rcx_2 => 14 @ 0x100000e75, 16 @ 0x100000e7e, 18 @ 0x100000e97, 20 @ 0x100000ea0)'
p1165
aS'None'
p1166
aS'rax#5, rcx#6, rdx#2, rsi#2, rdi#9, r8#2, r9#2, r10#2, r11#2, xmm0#2, xmm1#2, xmm2#2, xmm3#2, xmm4#2, xmm5#2, xmm6#2, xmm7#2, xmm8#2, xmm9#2, xmm10#2, xmm11#2, xmm12#2, xmm13#2, xmm14#2, xmm15#2, mem#3 = call(0x100000f32, stack = rsp#1 @ mem#2, params = rdi#8, rsi#1, rdx#1, rcx#5, r8#1, r9#1)'
p1167
ag9
ag1090
aS'{}'
p1168
aS"['4294971186', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi_1>]', '[]']"
p1169
aS"['4294971186', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi_1>]', '[]']"
p1170
aS'mem#2 = 0x100000f32(rdi_1#7) @ mem#1'
p1171
aS'0x100000f32(rdi_1)'
p1172
aS'None'
p1173
aS'rax#6 = zx.q(0)'
p1174
ag9
ag1090
aS'{}'
p1175
aS"['0', '<MLIL_CONST 8>', '<MLIL_SET_VAR 8>', 'rax_2']"
p1176
aS"['0', '<MLIL_CONST 8>', '<MLIL_SET_VAR 8>', 'rax_2']"
p1177
aS'rax_2#3 = 0'
p1178
aS'rax_2 = 0'
p1179
aS'None'
p1180
aS'<return> jump([rsp#2].q @ mem#3)'
p1181
ag9
ag1090
aS'{}'
p1182
aS"['<MLIL_RET>', '[<il: 0>]']"
p1183
aS"['<MLIL_RET>', '[<il: 0>]']"
p1184
aS'return 0'
p1185
aS'return 0'
p1186
aS'None'
p1187
aS'rdi#4 = 0x100000f80'
p1188
ag9
ag1090
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1189
aS"['4294971264', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1190
aS"['4294971264', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1191
aS'rdi_1#3 = 0x100000f80'
p1192
aS'rdi_1 = 0x100000f80'
p1193
aS'None'
p1194
aS'goto 15 @ 0x100000e85'
p1195
ag9
ag1090
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1196
aS"['11', '<MLIL_GOTO>']"
p1197
aS"['11', '<MLIL_GOTO>']"
p1198
aS'goto 11 @ 0x100000e85'
p1199
aS'goto 11 @ 0x100000e85'
p1200
aS'None'
p1201
aS'rdi#5 = 0x100000f60'
p1202
ag9
ag1090
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1203
aS"['4294971232', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1204
aS"['4294971232', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1205
aS'rdi_1#4 = 0x100000f60'
p1206
aS'rdi_1 = 0x100000f60'
p1207
aS'None'
p1208
aS'goto 15 @ 0x100000e85'
p1209
ag9
ag1090
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1210
aS"['11', '<MLIL_GOTO>']"
p1211
aS"['11', '<MLIL_GOTO>']"
p1212
aS'goto 11 @ 0x100000e85'
p1213
aS'goto 11 @ 0x100000e85'
p1214
aS'None'
p1215
aS'rdi#6 = 0x100000f9e'
p1216
ag9
ag1090
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1217
aS"['4294971294', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1218
aS"['4294971294', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1219
aS'rdi_1#5 = 0x100000f9e'
p1220
aS'rdi_1 = 0x100000f9e'
p1221
aS'None'
p1222
aS'goto 15 @ 0x100000e85'
p1223
ag9
ag1090
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1224
aS"['11', '<MLIL_GOTO>']"
p1225
aS"['11', '<MLIL_GOTO>']"
p1226
aS'goto 11 @ 0x100000e85'
p1227
aS'goto 11 @ 0x100000e85'
p1228
aS'None'
p1229
aS'rdi#7 = 0x100000f99'
p1230
ag9
ag1090
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1231
aS"['4294971289', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1232
aS"['4294971289', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1233
aS'rdi_1#6 = 0x100000f99'
p1234
aS'rdi_1 = 0x100000f99'
p1235
aS'None'
p1236
aS'goto 15 @ 0x100000e85'
p1237
ag9
ag1090
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1238
aS"['11', '<MLIL_GOTO>']"
p1239
aS"['11', '<MLIL_GOTO>']"
p1240
aS'goto 11 @ 0x100000e85'
p1241
aS'goto 11 @ 0x100000e85'
p1242
aS'None'
p1243
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001010].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1244
ag9
ag1090
aS'{}'
p1245
aS"['4294971408', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1246
aS"['4294971408', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1247
aS'return _atoi() __tailcall'
p1248
aS'return _atoi() __tailcall'
p1249
aS'None'
p1250
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001018].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1251
ag9
ag1090
aS'{}'
p1252
aS"['4294971416', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1253
aS"['4294971416', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1254
aS'return _puts() __tailcall'
p1255
aS'return _puts() __tailcall'
p1256
asS'test_function_symbol_names'
p1257
(lp1258
S'_main SymbolType.FunctionSymbol 0x100000e50L'
p1259
aS'_atoi SymbolType.ImportedFunctionSymbol 0x100000f2cL'
p1260
aS'_puts SymbolType.ImportedFunctionSymbol 0x100000f32L'
p1261
asS'test_BinaryView'
p1262
(lp1263
S'void*'
p1264
aS'[<segment: 0x100000000-0x100001000, r-x>, <segment: 0x100001000-0x100002000, rw->, <segment: 0x100002000-0x100003000, r-->]'
p1265
aS"{'__stub_helper': <section __stub_helper: 0x100000f38-0x100000f5c>, '__unwind_info': <section __unwind_info: 0x100000fb4-0x100000ffc>, '__la_symbol_ptr': <section __la_symbol_ptr: 0x100001010-0x100001020>, '__stubs': <section __stubs: 0x100000f2c-0x100000f38>, '__nl_symbol_ptr': <section __nl_symbol_ptr: 0x100001000-0x100001010>, '__text': <section __text: 0x100000e50-0x100000f2c>, '__cstring': <section __cstring: 0x100000f60-0x100000fb1>}"
p1266
aS'[<0x100000000-0x100003000>]'
p1267
aS'{}'
p1268
aS'4294971232'
p1269
aS'4294971264'
p1270
aS'4294971298'
p1271
aS'4294971392'
p1272
aS'4294971052'
p1273
aS'4294971180'
p1274
aS'4294971408'
p1275
aS'4294971186'
p1276
aS'4294971416'
p1277
aS'4294971289'
p1278
aS'4294971294'
p1279
aS'<func: x86_64@0x100000e50>'
p1280
aS'<func: x86_64@0x100000e50>'
p1281
aS'<func: x86_64@0x100000f2c>'
p1282
aS'<func: x86_64@0x100000f32>'
p1283
aS'0x100000e50L'
p1284
aS'0x100000000L'
p1285
aS'length: 0x3000'
p1286
asS'test_available_types'
p1287
(lp1288
S'Raw'
p1289
aS'Mach-O'
p1290
asS'test_function_basic_blocks'
p1291
(lp1292
S'0x100000e50L 0x100000e65L False'
p1293
aS'0x100000e8eL 0x100000e97L False'
p1294
aS'0x100000e65L 0x100000e75L False'
p1295
aS'0x100000e85L 0x100000e8eL True'
p1296
aS'0x100000e75L 0x100000e7eL False'
p1297
aS'0x100000e7eL 0x100000e85L False'
p1298
aS'0x100000e97L 0x100000ea0L False'
p1299
aS'0x100000ea0L 0x100000ea9L False'
p1300
aS'0x100000f2cL 0x100000f32L True'
p1301
aS'0x100000f32L 0x100000f38L True'
p1302
asS'test_function_med_il_basic_blocks'
p1303
(lp1304
S'0x0L 0x6L 2'
p1305
aS'0x6L 0x8L 1'
p1306
aS'0x8L 0xbL 4'
p1307
aS'0xbL 0xeL 0'
p1308
aS'0xeL 0x10L 1'
p1309
aS'0x10L 0x12L 1'
p1310
aS'0x12L 0x14L 1'
p1311
aS'0x14L 0x16L 1'
p1312
aS'0x0L 0x1L 0'
p1313
aS'0x0L 0x1L 0'
p1314
asS'test_symbols'
p1315
(lp1316
S'_atoi'
p1317
aS'_atoi@PLT'
p1318
aS'_main'
p1319
aS'_puts'
p1320
aS'_puts@PLT'
p1321
aS'dyld_stub_binder'
p1322
aS'jump_table_100000eac'
p1323
asS'test_low_il_instructions'
p1324
(lp1325
S'None'
p1326
aS'__saved_rbp = rbp'
p1327
ag9
ag1090
aS'[<LLIL_PUSH 8>, <LLIL_REG 8>, rbp]'
p1328
aS'[rbp, <LLIL_REG 8>, <LLIL_PUSH 8>]'
p1329
aS'[rsp#0 - 8].q = rbp#0 @ mem#0 -> mem#1'
p1330
aS'push(rbp)'
p1331
aS'None'
p1332
aS'rbp = &__saved_rbp'
p1333
ag9
ag1090
aS'[<LLIL_SET_REG 8>, rbp, <LLIL_REG 8>, rsp]'
p1334
aS'[rbp, rsp, <LLIL_REG 8>, <LLIL_SET_REG 8>]'
p1335
aS'rbp#1 = rsp#1'
p1336
aS'rbp = rsp'
p1337
aS'rdi = [arg2].q'
p1338
aS'arg1 = [arg2].q'
p1339
ag9
ag1090
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_LOAD 8>, <LLIL_REG 8>, rsi]'
p1340
aS'[rdi, rsi, <LLIL_REG 8>, <LLIL_LOAD 8>, <LLIL_SET_REG 8>]'
p1341
aS'rdi#1 = [rsi#0].q @ mem#1'
p1342
aS'rdi = [rsi].q'
p1343
aS'rax = 0'
p1344
aS'rax = 0'
p1345
ag9
ag1090
aS'[<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 0L]'
p1346
aS'[eax, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1347
aS'rax#1 = zx.q(0)'
p1348
aS'eax = 0'
p1349
aS'rax_1 = 0x100000f2c(rdi)'
p1350
aS'rax, rcx, rdx, arg2, arg1, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = call(0x100000f2c, arg1, arg2, rdx, rcx, r8, r9, stack = &__saved_rbp)'
p1351
ag9
ag1090
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 8>, 4294971180L, 0L, {}]'
p1352
aS'[4294971180L, <LLIL_CONST_PTR 8>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1353
aS'rax#2, rcx#1, rdx#1, rsi#1, rdi#2, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#2 = call(0x100000f2c, stack = rsp#1 @ mem#1, params = rdi#1, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1354
aS'call(0x100000f2c)'
p1355
aS'cond:0 = rax_1.eax u> 0x1f'
p1356
aS'cond:0 = rax.eax u> 0x1f'
p1357
ag9
ag1090
aS'[<LLIL_SET_FLAG>, cond:0, <LLIL_CMP_UGT 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 31L]'
p1358
aS'[cond:0, eax, <LLIL_REG 4>, 31L, <LLIL_CONST 4>, <LLIL_CMP_UGT 4>, <LLIL_SET_FLAG>]'
p1359
aS'cond:0#1 = rax#2.eax u> 0x1f'
p1360
aS'cond:0 = eax u> 0x1f'
p1361
aS'rcx = zx.q(rax_1.eax)'
p1362
aS'rcx = zx.q(rax.eax)'
p1363
ag9
ag1090
aS'[<LLIL_SET_REG 4>, ecx, <LLIL_REG 4>, eax]'
p1364
aS'[ecx, eax, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p1365
aS'rcx#2 = zx.q(rax#2.eax)'
p1366
aS'ecx = eax'
p1367
aS'None'
p1368
aS'if (cond:0) then 9 @ 0x100000e8e else 11 @ 0x100000e65'
p1369
ag9
ag1090
aS'[<LLIL_IF>, <LLIL_FLAG>, cond:0, 8L, 10L]'
p1370
aS'[cond:0, <LLIL_FLAG>, 8L, 10L, <LLIL_IF>]'
p1371
aS'if (cond:0#1) then 9 @ 0x100000e8e else 11 @ 0x100000e65'
p1372
aS'if (cond:0) then 8 @ 0x100000e8e else 10 @ 0x100000e65'
p1373
aS'rdi_1 = 0x100000fa2'
p1374
aS'arg1 = 0x100000fa2'
p1375
ag9
ag1090
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971298L]'
p1376
aS'[rdi, 4294971298L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1377
aS'rdi#3 = 0x100000fa2'
p1378
aS'rdi = 0x100000fa2'
p1379
aS'None'
p1380
aS'goto 15 @ 0x100000e85'
p1381
ag9
ag1090
aS'[<LLIL_GOTO>, 14L]'
p1382
aS'[14L, <LLIL_GOTO>]'
p1383
aS'goto 15 @ 0x100000e85'
p1384
aS'goto 14 @ 0x100000e85'
p1385
aS'None'
p1386
aS'rax = 0x100000eac'
p1387
ag9
ag1090
aS'[<LLIL_SET_REG 8>, rax, <LLIL_CONST_PTR 8>, 4294971052L]'
p1388
aS'[rax, 4294971052L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1389
aS'rax#3 = 0x100000eac'
p1390
aS'rax = 0x100000eac'
p1391
aS'rcx_1 = sx.q([0x100000eac + (rcx << 2)].d)'
p1392
aS'rcx = sx.q([0x100000eac + (rcx << 2)].d)'
p1393
ag9
ag1090
aS'[<LLIL_SET_REG 8>, rcx, <LLIL_SX 8>, <LLIL_LOAD 4>, <LLIL_ADD 8>, <LLIL_REG 8>, rax, <LLIL_LSL 8>, <LLIL_REG 8>, rcx, <LLIL_CONST 1>, 2L]'
p1394
aS'[rcx, rax, <LLIL_REG 8>, rcx, <LLIL_REG 8>, 2L, <LLIL_CONST 1>, <LLIL_LSL 8>, <LLIL_ADD 8>, <LLIL_LOAD 4>, <LLIL_SX 8>, <LLIL_SET_REG 8>]'
p1395
aS'rcx#3 = sx.q([rax#3 + (rcx#2 << 2)].d @ mem#2)'
p1396
aS'rcx = sx.q([rax + (rcx << 2)].d)'
p1397
aS'rcx_2 = rcx_1 + 0x100000eac'
p1398
aS'rcx = rcx + 0x100000eac'
p1399
ag9
ag1090
aS'[<LLIL_SET_REG 8>, rcx, <LLIL_ADD 8>, <LLIL_REG 8>, rcx, <LLIL_REG 8>, rax]'
p1400
aS'[rcx, rcx, <LLIL_REG 8>, rax, <LLIL_REG 8>, <LLIL_ADD 8>, <LLIL_SET_REG 8>]'
p1401
aS'rcx#4 = rcx#3 + rax#3'
p1402
aS'rcx = rcx + rax'
p1403
aS'None'
p1404
aS'jump(rcx => 20 @ 0x100000e75, 22 @ 0x100000e7e, 24 @ 0x100000e97, 26 @ 0x100000ea0)'
p1405
ag9
ag1090
aS'[<LLIL_JUMP_TO>, <LLIL_REG 8>, rcx, [18L, 20L, 22L, 24L]]'
p1406
aS'[rcx, <LLIL_REG 8>, [18L, 20L, 22L, 24L], <LLIL_JUMP_TO>]'
p1407
aS'jump(rcx#4 => 23 @ 0x100000e75, 25 @ 0x100000e7e, 27 @ 0x100000e97, 29 @ 0x100000ea0)'
p1408
aS'jump(rcx => 18 @ 0x100000e75, 20 @ 0x100000e7e, 22 @ 0x100000e97, 24 @ 0x100000ea0)'
p1409
aS'0x100000f32(rdi_1)'
p1410
aS'rax, rcx, rdx, arg2, arg1, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = call(0x100000f32, arg1, arg2, rdx, rcx, r8, r9, stack = &__saved_rbp)'
p1411
ag9
ag1090
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 8>, 4294971186L, 0L, {}]'
p1412
aS'[4294971186L, <LLIL_CONST_PTR 8>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1413
aS'rax#5, rcx#6, rdx#2, rsi#2, rdi#9, r8#2, r9#2, r10#2, r11#2, xmm0#2, xmm1#2, xmm2#2, xmm3#2, xmm4#2, xmm5#2, xmm6#2, xmm7#2, xmm8#2, xmm9#2, xmm10#2, xmm11#2, xmm12#2, xmm13#2, xmm14#2, xmm15#2, mem#3 = call(0x100000f32, stack = rsp#1 @ mem#2, params = rdi#8, rsi#1, rdx#1, rcx#5, r8#1, r9#1)'
p1414
aS'call(0x100000f32)'
p1415
aS'rax_2 = 0'
p1416
aS'rax = 0'
p1417
ag9
ag1090
aS'[<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 0L]'
p1418
aS'[eax, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1419
aS'rax#6 = zx.q(0)'
p1420
aS'eax = 0'
p1421
aS'None'
p1422
aS'rbp = __saved_rbp'
p1423
ag9
ag1090
aS'[<LLIL_SET_REG 8>, rbp, <LLIL_POP 8>]'
p1424
aS'[rbp, <LLIL_POP 8>, <LLIL_SET_REG 8>]'
p1425
aS'rbp#2 = [rsp#1].q @ mem#3'
p1426
aS'rbp = pop'
p1427
aS'None'
p1428
aS'return '
p1429
ag9
ag1090
aS'[<LLIL_RET>, <LLIL_POP 8>]'
p1430
aS'[<LLIL_POP 8>, <LLIL_RET>]'
p1431
aS'<return> jump([rsp#2].q @ mem#3)'
p1432
aS'<return> jump(pop)'
p1433
aS'rdi_1 = 0x100000f80'
p1434
aS'arg1 = 0x100000f80'
p1435
ag9
ag1090
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971264L]'
p1436
aS'[rdi, 4294971264L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1437
aS'rdi#4 = 0x100000f80'
p1438
aS'rdi = 0x100000f80'
p1439
aS'None'
p1440
aS'goto 15 @ 0x100000e85'
p1441
ag9
ag1090
aS'[<LLIL_GOTO>, 14L]'
p1442
aS'[14L, <LLIL_GOTO>]'
p1443
aS'goto 15 @ 0x100000e85'
p1444
aS'goto 14 @ 0x100000e85'
p1445
aS'rdi_1 = 0x100000f60'
p1446
aS'arg1 = 0x100000f60'
p1447
ag9
ag1090
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971232L]'
p1448
aS'[rdi, 4294971232L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1449
aS'rdi#5 = 0x100000f60'
p1450
aS'rdi = 0x100000f60'
p1451
aS'None'
p1452
aS'goto 15 @ 0x100000e85'
p1453
ag9
ag1090
aS'[<LLIL_GOTO>, 14L]'
p1454
aS'[14L, <LLIL_GOTO>]'
p1455
aS'goto 15 @ 0x100000e85'
p1456
aS'goto 14 @ 0x100000e85'
p1457
aS'rdi_1 = 0x100000f9e'
p1458
aS'arg1 = 0x100000f9e'
p1459
ag9
ag1090
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971294L]'
p1460
aS'[rdi, 4294971294L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1461
aS'rdi#6 = 0x100000f9e'
p1462
aS'rdi = 0x100000f9e'
p1463
aS'None'
p1464
aS'goto 15 @ 0x100000e85'
p1465
ag9
ag1090
aS'[<LLIL_GOTO>, 14L]'
p1466
aS'[14L, <LLIL_GOTO>]'
p1467
aS'goto 15 @ 0x100000e85'
p1468
aS'goto 14 @ 0x100000e85'
p1469
aS'rdi_1 = 0x100000f99'
p1470
aS'arg1 = 0x100000f99'
p1471
ag9
ag1090
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971289L]'
p1472
aS'[rdi, 4294971289L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1473
aS'rdi#7 = 0x100000f99'
p1474
aS'rdi = 0x100000f99'
p1475
aS'None'
p1476
aS'goto 15 @ 0x100000e85'
p1477
ag9
ag1090
aS'[<LLIL_GOTO>, 14L]'
p1478
aS'[14L, <LLIL_GOTO>]'
p1479
aS'goto 15 @ 0x100000e85'
p1480
aS'goto 14 @ 0x100000e85'
p1481
aS'return _atoi() __tailcall'
p1482
aS'rax, rcx, rdx, rsi, rdi, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = tailcall(_atoi, rdi, rsi, rdx, rcx, r8, r9, stack = &arg_0)'
p1483
ag9
ag1090
aS'[<LLIL_TAILCALL>, <LLIL_LOAD 8>, <LLIL_CONST_PTR 8>, 4294971408L]'
p1484
aS'[4294971408L, <LLIL_CONST_PTR 8>, <LLIL_LOAD 8>, <LLIL_TAILCALL>]'
p1485
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001010].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1486
aS'<return> tailcall([0x100001010].q)'
p1487
aS'return _puts() __tailcall'
p1488
aS'rax, rcx, rdx, rsi, rdi, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = tailcall(_puts, rdi, rsi, rdx, rcx, r8, r9, stack = &arg_0)'
p1489
ag9
ag1090
aS'[<LLIL_TAILCALL>, <LLIL_LOAD 8>, <LLIL_CONST_PTR 8>, 4294971416L]'
p1490
aS'[4294971416L, <LLIL_CONST_PTR 8>, <LLIL_LOAD 8>, <LLIL_TAILCALL>]'
p1491
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001018].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1492
aS'<return> tailcall([0x100001018].q)'
p1493
asS'test_med_il_vars'
p1494
(lp1495
S'None [0L] <entry rsi> <entry rsi> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi#1 = [arg2#0].q @ mem#0>>'
p1496
aS'0 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi#1 = [arg2#0].q @ mem#0>>'
p1497
aS'1 [] <const 0x0> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax#1 = 0>>'
p1498
aS'0 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_1#2, mem#1 = 0x100000f2c(rdi#1) @ mem#0>>'
p1499
aS'2 [3L, 4L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_1#2, mem#1 = 0x100000f2c(rdi#1) @ mem#0>>'
p1500
aS'2 [3L, 4L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: cond:0#1 = rax_1#2.eax u> 0x1f>>'
p1501
aS'3 [5L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: cond:0#1 = rax_1#2.eax u> 0x1f>>'
p1502
aS'2 [3L, 4L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx#1 = zx.q(rax_1#2.eax)>>'
p1503
aS'4 [8L, 11L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx#1 = zx.q(rax_1#2.eax)>>'
p1504
aS'3 [5L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (cond:0#1) then 6 @ 0x100000e8e else 8 @ 0x100000e6c>>'
p1505
aS'6 [11L] <const ptr 0x100000fa2> <const ptr 0x100000fa2> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#2 = 0x100000fa2>>'
p1506
aS'4 [8L, 11L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x1f>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx_1#2 = sx.q([0x100000eac + (rcx#1 << 2)].d @ mem#1)>>'
p1507
aS'8 [9L] <undetermined> <table: [0x1e] -> -0x37, [0x1f] -> -0x2e, [0x2] -> -0x15, [0x5] -> -0xc> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx_1#2 = sx.q([0x100000eac + (rcx#1 << 2)].d @ mem#1)>>'
p1508
aS'8 [9L] <undetermined> <table: [0x1e] -> -0x37, [0x1f] -> -0x2e, [0x2] -> -0x15, [0x5] -> -0xc> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx_2#3 = rcx_1#2 + 0x100000eac>>'
p1509
aS'9 [10L, 11L] <undetermined> <table: [0x1e] -> 0x100000e75, [0x1f] -> 0x100000e7e, [0x2] -> 0x100000e97, [0x5] -> 0x100000ea0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx_2#3 = rcx_1#2 + 0x100000eac>>'
p1510
aS'9 [10L, 11L] <undetermined> <table: [0x1e] -> 0x100000e75, [0x1f] -> 0x100000e7e, [0x2] -> 0x100000e97, [0x5] -> 0x100000ea0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: jump(rcx_2#3 => 16 @ 0x100000e75, 18 @ 0x100000e7e, 20 @ 0x100000e97, 22 @ 0x100000ea0)>>'
p1511
aS'11 [11L] <undetermined> <in set([0x100000f60, 0x100000f80, 0x100000fa2, 0x100000f9e, 0x100000f99])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: mem#2 = 0x100000f32(rdi_1#7) @ mem#1>>'
p1512
aS'12 [] <const 0x0> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_2#3 = 0>>'
p1513
aS'14 [11L] <const ptr 0x100000f80> <const ptr 0x100000f80> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#3 = 0x100000f80>>'
p1514
aS'16 [11L] <const ptr 0x100000f60> <const ptr 0x100000f60> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#4 = 0x100000f60>>'
p1515
aS'18 [11L] <const ptr 0x100000f9e> <const ptr 0x100000f9e> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#5 = 0x100000f9e>>'
p1516
aS'20 [11L] <const ptr 0x100000f99> <const ptr 0x100000f99> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#6 = 0x100000f99>>'
p1517
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1518
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1519
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1520
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1521
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1522
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1523
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1524
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1525
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1526
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1527
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1528
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1529
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1530
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1531
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1532
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1533
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1534
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1535
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1536
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1537
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1538
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1539
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1540
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1541
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1542
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1543
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1544
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1545
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1546
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1547
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1548
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1549
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1550
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1551
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1552
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1553
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1554
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1555
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1556
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1557
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1558
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1559
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1560
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1561
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1562
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1563
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1564
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1565
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1566
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1567
as.
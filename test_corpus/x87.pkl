(dp0
S'test_function_can_return'
p1
(lp2
S'_main SymbolType.DataSymbol 0x1ef3L True'
p3
aS'test1 SymbolType.DataSymbol 0x1f0dL True'
p4
aS'a SymbolType.DataSymbol 0x1f3cL True'
p5
aS'b SymbolType.DataSymbol 0x1f3fL True'
p6
aS'c SymbolType.DataSymbol 0x1f48L True'
p7
aS'test2 SymbolType.DataSymbol 0x1f55L True'
p8
aS'd SymbolType.DataSymbol 0x1f94L True'
p9
aS'test3 SymbolType.DataSymbol 0x1fb3L True'
p10
asS'test_function_stack'
p11
(lp12
S"['var_4', '__return_addr', 'testautovar']"
p13
aS'<undetermined>'
p14
ag14
aS'None'
p15
aS"['var_8', 'var_4', 'var_4_1', '__return_addr', 'testautovar']"
p16
ag14
ag14
aS'None'
p17
aS"['__return_addr', 'testautovar']"
p18
ag14
ag14
aS'None'
p19
aS"['__return_addr', 'testautovar', 'arg_8']"
p20
ag14
ag14
aS'None'
p21
aS"['var_4', '__return_addr', 'testautovar']"
p22
ag14
ag14
aS'None'
p23
aS"['var_8', 'var_8_1', 'var_4', 'var_4_1', '__return_addr', 'testautovar', 'arg_8']"
p24
aS'<return address>'
p25
ag25
aS'None'
p26
aS"['var_4', '__return_addr', 'testautovar', 'arg_8']"
p27
ag14
ag14
aS'None'
p28
aS"['var_4', 'var_4_1', 'var_4_2', 'var_4_3', '__return_addr', 'testautovar', 'arg_8']"
p29
ag25
ag25
aS'None'
p30
asS'test_strings'
p31
(lp32
S'__PAGEZERO StringType.AsciiString 0x1024L'
p33
aS'__TEXT StringType.AsciiString 0x105cL'
p34
aS'__text StringType.AsciiString 0x108cL'
p35
aS'__TEXT StringType.AsciiString 0x109cL'
p36
aS'__LINKEDIT StringType.AsciiString 0x10d8L'
p37
aS'/usr/lib/dyld StringType.AsciiString 0x11acL'
p38
aS'/usr/lib/libSystem.B.dylib StringType.AsciiString 0x1224L'
p39
aS'test StringType.AsciiString 0x2005L'
p40
aS'_mh_execute_header StringType.AsciiString 0x200dL'
p41
aS"'main StringType.AsciiString 0x2020L"
p42
aS'__mh_execute_header StringType.AsciiString 0x20faL'
p43
aS'_main StringType.AsciiString 0x210eL'
p44
aS'test1 StringType.AsciiString 0x2114L'
p45
aS'test2 StringType.AsciiString 0x211aL'
p46
aS'test3 StringType.AsciiString 0x2120L'
p47
aS'dyld_stub_binder StringType.AsciiString 0x2126L'
p48
aS'test2.one StringType.AsciiString 0x213dL'
p49
aS'test2.done StringType.AsciiString 0x2147L'
p50
aS'test3.one StringType.AsciiString 0x2154L'
p51
aS'test3.done StringType.AsciiString 0x215eL'
p52
asS'test_function_low_il_basic_blocks'
p53
(lp54
S'0x0L 0x6L 0'
p55
aS'0x0L 0xeL 0'
p56
aS'0x0L 0x4L 0'
p57
aS'0x0L 0x5L 0'
p58
aS'0x0L 0x7L 0'
p59
aS'0x0L 0x2L 2'
p60
aS'0x2L 0x6L 1'
p61
aS'0x6L 0x8L 1'
p62
aS'0x8L 0x14L 0'
p63
aS'0x0L 0xeL 0'
p64
aS'0x0L 0x2L 2'
p65
aS'0x2L 0xdL 1'
p66
aS'0xdL 0xfL 1'
p67
aS'0xfL 0x1bL 0'
p68
asS'test_functions_attributes'
p69
(lp70
S"['var_4', 'testautovar', 'eax']"
p71
aS'[]'
p72
aS'{}'
p73
aI1
aS"['eax']"
p74
aS'False'
p75
aS'True'
p76
aI7
ag14
aS'testcomment _main'
p77
ag75
ag75
aS'call(0x1f0d)'
p78
aS'[]'
p79
aS'[]'
p80
aS"['eax', 'ecx', 'edx']"
p81
aS'[]'
p82
aS'[<constant pointer 0x1f0d>]'
p83
aS'call(0x1f0d)'
p84
aS'[]'
p85
aS'[]'
p86
aS'<graph of <func: x86@0x1ef3>>'
p87
aS'[]'
p88
aS'[]'
p89
aS'<block: x86@0x1ef3-0x1f0d>'
p90
aS'<color: #ff00ff>'
p91
aS'[<0x1ef3: int32_t _main()>]'
p92
aS"['var_8', 'var_4', 'var_4_1', 'testautovar', 'eax', 'eax_1', 'st0', 'st0_1', 'x87_r6', 'x87_r6_1', 'x87_r7', 'x87_r7_1', 'x87_r7_2', 'x87_r7_3']"
p93
aS'[]'
p94
aS'{}'
p95
aI1
aS"['eax']"
p96
ag75
ag76
aI15
ag14
aS'testcomment test1'
p97
ag75
ag75
aS'esp = esp - 4'
p98
aS'[]'
p99
aS"['esp']"
p100
aS"['esp']"
p101
aS'[]'
p102
aS'[<constant 0x4 size 4>]'
p103
aS'esp = sub.d{*}(esp, 4)'
p104
aS'[]'
p105
aS"['c', 'p', 'a', 'z', 's', 'o']"
p106
aS'<graph of <func: x86@0x1f0d>>'
p107
aS'[]'
p108
aS'[]'
p109
aS'<block: x86@0x1f0d-0x1f3c>'
p110
aS'<color: #ff00ff>'
p111
aS'[<0x1f0d: int32_t test1()>]'
p112
aS"['testautovar', 'arg1', 'arg2', 'x87_r1']"
p113
aS'[]'
p114
aS'{}'
p115
aI1
aS"['st0']"
p116
ag75
ag76
aI5
ag14
aS'testcomment a'
p117
ag75
ag75
aS'st1 = st1 f+ st0'
p118
aS'[]'
p119
aS"['st0', 'st1', 'top']"
p120
aS"['st1', 'top']"
p121
aS'[]'
p122
aS'[]'
p123
aS'st1 = fadd.t{x87rnd}(st1, st0)'
p124
aS'[]'
p125
aS"['c1']"
p126
aS'<graph of <func: x86@0x1f3c>>'
p127
aS'[]'
p128
aS'[]'
p129
aS'<block: x86@0x1f3c-0x1f3f>'
p130
aS'<color: #ff00ff>'
p131
aS'[<0x1f3c: long double a(long double arg1 @ st0, long double arg2 @ st1)>]'
p132
aS"['testautovar', 'arg_8', 'x87_r7', 'x87_r7_1']"
p133
aS'[]'
p134
aS'{}'
p135
aI1
aS"['st0']"
p136
ag75
ag76
aI6
ag14
aS'testcomment b'
p137
ag75
ag75
aS'x87.push{x87c1z}(float.t([esp + 4 {testautovar}].d))'
p138
aS'[]'
p139
aS"['esp']"
p140
aS'[]'
p141
aS'[<operand 0 ref to testautovar>]'
p142
aS'[]'
p143
aS'x87.push{x87c1z}(float.t([esp + 4].d))'
p144
aS'[]'
p145
aS"['c1']"
p146
aS'<graph of <func: x86@0x1f3f>>'
p147
aS'[]'
p148
aS'[]'
p149
aS'<block: x86@0x1f3f-0x1f48>'
p150
aS'<color: #ff00ff>'
p151
aS'[<0x1f3f: long double __stdcall b(int32_t testautovar)>]'
p152
aS"['var_4', 'testautovar', 'eax', 'arg1', 'arg2', 'x87_r1']"
p153
aS'[]'
p154
aS'{}'
p155
aI1
aS"['eax']"
p156
ag75
ag76
aI8
ag14
aS'testcomment c'
p157
ag75
ag75
aS'esp = esp - 4'
p158
aS'[]'
p159
aS"['esp']"
p160
aS"['esp']"
p161
aS'[]'
p162
aS'[<constant 0x4 size 4>]'
p163
aS'esp = sub.d{*}(esp, 4)'
p164
aS'[]'
p165
aS"['c', 'p', 'a', 'z', 's', 'o']"
p166
aS'<graph of <func: x86@0x1f48>>'
p167
aS'[]'
p168
aS'[]'
p169
aS'<block: x86@0x1f48-0x1f55>'
p170
aS'<color: #ff00ff>'
p171
aS'[<0x1f48: int32_t c(long double arg1 @ st0, long double arg2 @ st1)>]'
p172
aS"['var_8', 'var_8_1', 'var_4', 'var_4_1', 'testautovar', 'arg_8', 'eax', 'eax_1', 'eax_2', 'x87_r6', 'x87_r7', 'x87_r7_1']"
p173
aS'[]'
p174
aS'{}'
p175
aI1
aS"['eax']"
p176
ag75
ag76
aI28
ag14
aS'testcomment test2'
p177
ag75
ag75
aS'esp = esp - 4'
p178
aS'[]'
p179
aS"['esp']"
p180
aS"['esp']"
p181
aS'[]'
p182
aS'[<constant 0x4 size 4>]'
p183
aS'esp = sub.d{*}(esp, 4)'
p184
aS'[]'
p185
aS"['c', 'p', 'a', 'z', 's', 'o']"
p186
aS'<graph of <func: x86@0x1f55>>'
p187
aS'[]'
p188
aS'[]'
p189
aS'<block: x86@0x1f55-0x1f65>'
p190
aS'<color: #ff00ff>'
p191
aS'[<0x1f55: int32_t __stdcall test2(int32_t testautovar)>]'
p192
aS"['var_4', 'testautovar', 'arg_8', 'eax', 'x87_r5', 'x87_r5_1', 'x87_r6', 'x87_r6_1', 'x87_r7']"
p193
aS'[]'
p194
aS'{}'
p195
aI1
aS"['eax']"
p196
ag75
ag76
aI15
ag14
aS'testcomment d'
p197
ag75
ag75
aS'x87.push{x87c1z}(float.t([esp + 4 {testautovar}].d))'
p198
aS'[]'
p199
aS"['esp']"
p200
aS'[]'
p201
aS'[<operand 0 ref to testautovar>]'
p202
aS'[]'
p203
aS'x87.push{x87c1z}(float.t([esp + 4].d))'
p204
aS'[]'
p205
aS"['c1']"
p206
aS'<graph of <func: x86@0x1f94>>'
p207
aS'[]'
p208
aS'[]'
p209
aS'<block: x86@0x1f94-0x1fb3>'
p210
aS'<color: #ff00ff>'
p211
aS'[<0x1f94: int32_t __stdcall d(int32_t testautovar)>]'
p212
aS"['var_4', 'var_4_1', 'var_4_2', 'var_4_3', 'testautovar', 'arg_8', 'eax', 'eax_1', 'x87_r5', 'x87_r5_1', 'x87_r5_2', 'x87_r6', 'x87_r6_1', 'x87_r6_2', 'x87_r7', 'x87_r7_1']"
p213
aS'[]'
p214
aS'{}'
p215
aI1
aS"['eax']"
p216
ag75
ag76
aI35
ag14
aS'testcomment test3'
p217
ag75
ag75
aS'esp = esp - 4'
p218
aS'[]'
p219
aS"['esp']"
p220
aS"['esp']"
p221
aS'[]'
p222
aS'[<constant 0x4 size 4>]'
p223
aS'esp = sub.d{*}(esp, 4)'
p224
aS'[]'
p225
aS"['c', 'p', 'a', 'z', 's', 'o']"
p226
aS'<graph of <func: x86@0x1fb3>>'
p227
aS'[]'
p228
aS'[]'
p229
aS'<block: x86@0x1fb3-0x1fc3>'
p230
aS'<color: #ff00ff>'
p231
aS'[<0x1fb3: int32_t __stdcall test3(int32_t testautovar)>]'
p232
asS'test_function_starts'
p233
(lp234
S'0x1ef3L'
p235
aS'0x1f0dL'
p236
aS'0x1f3cL'
p237
aS'0x1f3fL'
p238
aS'0x1f48L'
p239
aS'0x1f55L'
p240
aS'0x1f94L'
p241
aS'0x1fb3L'
p242
asS'test_function_llil'
p243
(lp244
S'<block: x86@0x0-0x6>'
p245
aS'call(0x1f0d)'
p246
aS'push(1)'
p247
aS'call(0x1f55), esp += 4'
p248
aS'push(1)'
p249
aS'call(0x1fb3), esp += 4'
p250
aS'<return> jump(pop)'
p251
aS'<block: x86@0x0-0x4>'
p252
aS'0x1f0d()'
p253
aS'0x1f55(1)'
p254
aS'eax = 0x1fb3(1)'
p255
aS'return eax'
p256
aS"(['call', '    ', '0x1f0d'], 7923L)"
p257
aS"(['push', '    ', '0x1'], 7928L)"
p258
aS"(['call', '    ', '0x1f55'], 7933L)"
p259
aS"(['push', '    ', '0x1'], 7938L)"
p260
aS"(['call', '    ', '0x1fb3'], 7943L)"
p261
aS"(['retn', '    '], 7948L)"
p262
aS'<block: x86@0x0-0xe>'
p263
aS'esp = esp - 4'
p264
aS'x87.push{x87c1z}(float.t(1))'
p265
aS'x87.push{x87c1z}(fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10))'
p266
aS'call(0x1f3c), top += 1'
p267
aS'[esp {var_4}].d = int.d(x87.pop)'
p268
aS'eax = [esp {var_4}].d'
p269
aS'push(eax)'
p270
aS'call(0x1f3f), esp += 4, top -= 1'
p271
aS'[esp {var_4_1}].d = int.d(x87.pop)'
p272
aS'x87.push{x87c1z}(float.t(0))'
p273
aS'x87.push{x87c1z}(float.t([esp {var_4_1}].d))'
p274
aS'call(0x1f48), top += 2'
p275
aS'esp = esp + 4'
p276
aS'<return> jump(pop)'
p277
aS'<block: x86@0x0-0xe>'
p278
aS'x87_r7 = float.t(1)'
p279
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p280
aS'st0 = 0x1f3c(x87_r6, x87_r7)'
p281
aS'x87_r7_1 = st0'
p282
aS'var_4 = int.d(x87_r7_1)'
p283
aS'eax = var_4'
p284
aS'var_8 = eax'
p285
aS'st0_1 = 0x1f3f(var_8)'
p286
aS'x87_r7_2 = st0_1'
p287
aS'var_4_1 = int.d(x87_r7_2)'
p288
aS'x87_r7_3 = float.t(0)'
p289
aS'x87_r6_1 = float.t(var_4_1)'
p290
aS'eax_1 = 0x1f48(x87_r6_1, x87_r7_3)'
p291
aS'return eax_1'
p292
aS"(['sub', '     ', 'esp', ', ', '0x4'], 7949L)"
p293
aS"(['fld1', '    '], 7955L)"
p294
aS"(['fldpi', '   '], 7957L)"
p295
aS"(['call', '    ', '0x1f3c'], 7959L)"
p296
aS"(['fistp', '   ', 'dword ', '[', 'esp', ']'], 7964L)"
p297
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'esp', ']'], 7967L)"
p298
aS"(['push', '    ', 'eax'], 7970L)"
p299
aS"(['call', '    ', '0x1f3f'], 7971L)"
p300
aS"(['fistp', '   ', 'dword ', '[', 'esp', ']'], 7976L)"
p301
aS"(['fldz', '    '], 7979L)"
p302
aS"(['fild', '    ', 'dword ', '[', 'esp', ']'], 7981L)"
p303
aS"(['call', '    ', '0x1f48'], 7984L)"
p304
aS"(['add', '     ', 'esp', ', ', '0x4'], 7989L)"
p305
aS"(['retn', '    '], 7995L)"
p306
aS'<block: x86@0x0-0x4>'
p307
aS'st1 = st1 f+ st0'
p308
aS'__free_slot(st0)'
p309
aS'top = top + 1'
p310
aS'<return> jump(pop)'
p311
aS'<block: x86@0x0-0x2>'
p312
aS'x87_r1 = arg2 + arg1'
p313
aS'return x87_r1'
p314
aS"(['faddp', '   ', 'st1', ', ', 'st0'], 7996L)"
p315
aS"(['retn', '    '], 7998L)"
p316
aS'<block: x86@0x0-0x5>'
p317
aS'x87.push{x87c1z}(float.t([esp + 4 {arg1}].d))'
p318
aS'st0 = sqrt(st0)'
p319
aS'temp0.d = pop'
p320
aS'esp = esp + 4'
p321
aS'<return> jump(temp0.d)'
p322
aS'<block: x86@0x0-0x3>'
p323
aS'x87_r7_1 = float.t(arg1)'
p324
aS'x87_r7 = sqrt(x87_r7_1)'
p325
aS'return x87_r7'
p326
aS"(['fild', '    ', 'dword ', '[', 'esp', '+', '0x4', ']'], 7999L)"
p327
aS"(['fsqrt', '   '], 8003L)"
p328
aS"(['retn', '    ', '0x4'], 8005L)"
p329
aS'<block: x86@0x0-0x7>'
p330
aS'esp = esp - 4'
p331
aS'st1 = st1 f- st0'
p332
aS'__free_slot(st0)'
p333
aS'top = top + 1'
p334
aS'[esp {var_4}].d = int.d(x87.pop)'
p335
aS'eax = pop'
p336
aS'<return> jump(pop)'
p337
aS'<block: x86@0x0-0x4>'
p338
aS'x87_r1 = arg2 - arg1'
p339
aS'var_4 = int.d(x87_r1)'
p340
aS'eax = var_4'
p341
aS'return eax'
p342
aS"(['sub', '     ', 'esp', ', ', '0x4'], 8008L)"
p343
aS"(['fsubp', '   ', 'st1', ', ', 'st0'], 8014L)"
p344
aS"(['fistp', '   ', 'dword ', '[', 'esp', ']'], 8016L)"
p345
aS"(['pop', '     ', 'eax'], 8019L)"
p346
aS"(['retn', '    '], 8020L)"
p347
aS'<block: x86@0x0-0x2>'
p348
aS'<block: x86@0x2-0x6>'
p349
aS'<block: x86@0x6-0x8>'
p350
aS'<block: x86@0x8-0x14>'
p351
aS'esp = esp - 4'
p352
aS'if ([esp + 8 {arg1}].d != 1) then 2 @ 0x1f6c else 6 @ 0x1f65'
p353
aS'eax = [esp + 8 {arg1}].d'
p354
aS'push(eax)'
p355
aS'call(0x1f94), esp += 4'
p356
aS'goto 8 @ 0x1f7b'
p357
aS'eax = 0'
p358
aS'goto 8 @ 0x1f7b'
p359
aS'[esp {var_4}].d = eax'
p360
aS'x87.push{x87c1z}(float.t([esp {var_4}].d))'
p361
aS'x87.push{x87c1z}(fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10))'
p362
aS'st1 = st1 f/ st0'
p363
aS'__free_slot(st0)'
p364
aS'top = top + 1'
p365
aS'[esp {var_4_1}].d = int.d(x87.pop)'
p366
aS'eax = [esp {var_4_1}].d'
p367
aS'esp = esp + 4'
p368
aS'temp0.d = pop'
p369
aS'esp = esp + 4'
p370
aS'<return> jump(temp0.d)'
p371
aS'<block: x86@0x0-0x1>'
p372
aS'<block: x86@0x1-0x5>'
p373
aS'<block: x86@0x5-0x7>'
p374
aS'<block: x86@0x7-0xe>'
p375
aS'if (arg1 != 1) then 1 @ 0x1f6c else 5 @ 0x1f65'
p376
aS'eax_1 = arg1'
p377
aS'var_8_1 = eax_1'
p378
aS'eax = 0x1f94(var_8_1)'
p379
aS'goto 7 @ 0x1f7b'
p380
aS'eax = 0'
p381
aS'goto 7 @ 0x1f7b'
p382
aS'var_4 = eax'
p383
aS'x87_r7 = float.t(var_4)'
p384
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p385
aS'x87_r7_1 = x87_r7 / x87_r6'
p386
aS'var_4_1 = int.d(x87_r7_1)'
p387
aS'eax_2 = var_4_1'
p388
aS'return eax_2'
p389
aS"(['sub', '     ', 'esp', ', ', '0x4'], 8021L)"
p390
aS"(['cmp', '     ', 'dword ', '[', 'esp', '+', '0x8', ']', ', ', '0x1'], 8027L)"
p391
aS"(['jne', '     ', '0x1f6c'], 8035L)"
p392
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'esp', '+', '0x8', ']'], 8044L)"
p393
aS"(['push', '    ', 'eax'], 8048L)"
p394
aS"(['call', '    ', '0x1f94'], 8049L)"
p395
aS"(['jmp', '     ', '0x1f7b'], 8054L)"
p396
aS"(['xor', '     ', 'eax', ', ', 'eax'], 8037L)"
p397
aS"(['jmp', '     ', '0x1f7b'], 8039L)"
p398
aS"(['mov', '     ', 'dword ', '[', 'esp', ']', ', ', 'eax'], 8059L)"
p399
aS"(['fild', '    ', 'dword ', '[', 'esp', ']'], 8062L)"
p400
aS"(['fldpi', '   '], 8065L)"
p401
aS"(['fdivp', '   ', 'st1', ', ', 'st0'], 8067L)"
p402
aS"(['fistp', '   ', 'dword ', '[', 'esp', ']'], 8069L)"
p403
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'esp', ']'], 8072L)"
p404
aS"(['add', '     ', 'esp', ', ', '0x4'], 8075L)"
p405
aS"(['retn', '    ', '0x4'], 8081L)"
p406
aS'<block: x86@0x0-0xe>'
p407
aS'x87.push{x87c1z}(float.t([esp + 4 {arg1}].d))'
p408
aS'x87.push{x87c1z}(fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10))'
p409
aS'st0 = st0 f* st1'
p410
aS'x87.push{x87c1z}(float.t(1))'
p411
aS'st0 = st0 f- st1'
p412
aS'esp = esp - 4'
p413
aS'[esp {var_4}].d = int.d(st0)'
p414
aS'__free_slot(st2)'
p415
aS'__free_slot(st1)'
p416
aS'__free_slot(st0)'
p417
aS'eax = pop'
p418
aS'temp0.d = pop'
p419
aS'esp = esp + 4'
p420
aS'<return> jump(temp0.d)'
p421
aS'<block: x86@0x0-0x8>'
p422
aS'x87_r7 = float.t(arg1)'
p423
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p424
aS'x87_r6_1 = x87_r6 * x87_r7'
p425
aS'x87_r5 = float.t(1)'
p426
aS'x87_r5_1 = x87_r5 - x87_r6_1'
p427
aS'var_4 = int.d(x87_r5_1)'
p428
aS'eax = var_4'
p429
aS'return eax'
p430
aS"(['fild', '    ', 'dword ', '[', 'esp', '+', '0x4', ']'], 8084L)"
p431
aS"(['fldpi', '   '], 8088L)"
p432
aS"(['fmul', '    ', 'st0', ', ', 'st1'], 8090L)"
p433
aS"(['fld1', '    '], 8092L)"
p434
aS"(['fsub', '    ', 'st0', ', ', 'st1'], 8094L)"
p435
aS"(['sub', '     ', 'esp', ', ', '0x4'], 8096L)"
p436
aS"(['fist', '    ', 'dword ', '[', 'esp', ']'], 8102L)"
p437
aS"(['ffree', '   ', 'st2'], 8105L)"
p438
aS"(['ffree', '   ', 'st1'], 8107L)"
p439
aS"(['ffree', '   ', 'st0'], 8109L)"
p440
aS"(['pop', '     ', 'eax'], 8111L)"
p441
aS"(['retn', '    ', '0x4'], 8112L)"
p442
aS'<block: x86@0x0-0x2>'
p443
aS'<block: x86@0x2-0xd>'
p444
aS'<block: x86@0xd-0xf>'
p445
aS'<block: x86@0xf-0x1b>'
p446
aS'esp = esp - 4'
p447
aS'if ([esp + 8 {arg1}].d != 1) then 2 @ 0x1fca else 13 @ 0x1fc3'
p448
aS'x87.push{x87c1z}(float.t([esp + 8 {arg1}].d))'
p449
aS'x87.push{x87c1z}(fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10))'
p450
aS'st0 = st0 f* st1'
p451
aS'x87.push{x87c1z}(float.t(1))'
p452
aS'st0 = st0 f- st1'
p453
aS'[esp {var_4_1}].d = int.d(st0)'
p454
aS'__free_slot(st2)'
p455
aS'__free_slot(st1)'
p456
aS'__free_slot(st0)'
p457
aS'eax = [esp {var_4_1}].d'
p458
aS'goto 15 @ 0x1fe7'
p459
aS'eax = 0'
p460
aS'goto 15 @ 0x1fe7'
p461
aS'[esp {var_4_2}].d = eax'
p462
aS'x87.push{x87c1z}(float.t([esp {var_4_2}].d))'
p463
aS'x87.push{x87c1z}(fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10))'
p464
aS'st1 = st1 f/ st0'
p465
aS'__free_slot(st0)'
p466
aS'top = top + 1'
p467
aS'[esp {var_4_3}].d = int.d(x87.pop)'
p468
aS'eax = [esp {var_4_3}].d'
p469
aS'esp = esp + 4'
p470
aS'temp0.d = pop'
p471
aS'esp = esp + 4'
p472
aS'<return> jump(temp0.d)'
p473
aS'<block: x86@0x0-0x1>'
p474
aS'<block: x86@0x1-0x9>'
p475
aS'<block: x86@0x9-0xb>'
p476
aS'<block: x86@0xb-0x14>'
p477
aS'if (arg1 != 1) then 1 @ 0x1fca else 9 @ 0x1fc3'
p478
aS'x87_r7_1 = float.t(arg1)'
p479
aS'x87_r6_1 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p480
aS'x87_r6_2 = x87_r6_1 * x87_r7_1'
p481
aS'x87_r5_1 = float.t(1)'
p482
aS'x87_r5_2 = x87_r5_1 - x87_r6_2'
p483
aS'var_4_1 = int.d(x87_r5_2)'
p484
aS'eax = var_4_1'
p485
aS'goto 11 @ 0x1fe7'
p486
aS'eax = 0'
p487
aS'goto 11 @ 0x1fe7'
p488
aS'var_4_2 = eax'
p489
aS'unimplemented'
p490
aS'unimplemented'
p491
aS'unimplemented'
p492
aS'unimplemented'
p493
aS'var_4_3 = int.d(unimplemented)'
p494
aS'unimplemented'
p495
aS'eax_1 = var_4_3'
p496
aS'return eax_1'
p497
aS"(['sub', '     ', 'esp', ', ', '0x4'], 8115L)"
p498
aS"(['cmp', '     ', 'dword ', '[', 'esp', '+', '0x8', ']', ', ', '0x1'], 8121L)"
p499
aS"(['jne', '     ', '0x1fca'], 8129L)"
p500
aS"(['fild', '    ', 'dword ', '[', 'esp', '+', '0x8', ']'], 8138L)"
p501
aS"(['fldpi', '   '], 8142L)"
p502
aS"(['fmul', '    ', 'st0', ', ', 'st1'], 8144L)"
p503
aS"(['fld1', '    '], 8146L)"
p504
aS"(['fsub', '    ', 'st0', ', ', 'st1'], 8148L)"
p505
aS"(['fist', '    ', 'dword ', '[', 'esp', ']'], 8150L)"
p506
aS"(['ffree', '   ', 'st2'], 8153L)"
p507
aS"(['ffree', '   ', 'st1'], 8155L)"
p508
aS"(['ffree', '   ', 'st0'], 8157L)"
p509
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'esp', ']'], 8159L)"
p510
aS"(['jmp', '     ', '0x1fe7'], 8162L)"
p511
aS"(['xor', '     ', 'eax', ', ', 'eax'], 8131L)"
p512
aS"(['jmp', '     ', '0x1fe7'], 8133L)"
p513
aS"(['mov', '     ', 'dword ', '[', 'esp', ']', ', ', 'eax'], 8167L)"
p514
aS"(['fild', '    ', 'dword ', '[', 'esp', ']'], 8170L)"
p515
aS"(['fldpi', '   '], 8173L)"
p516
aS"(['fdivp', '   ', 'st1', ', ', 'st0'], 8175L)"
p517
aS"(['fistp', '   ', 'dword ', '[', 'esp', ']'], 8177L)"
p518
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'esp', ']'], 8180L)"
p519
aS"(['add', '     ', 'esp', ', ', '0x4'], 8183L)"
p520
aS"(['retn', '    ', '0x4'], 8189L)"
p521
asS'test_low_il_ssa'
p522
(lp523
S'None'
p524
aS'[]'
p525
ag14
aS'None'
p526
aS'[]'
p527
ag14
aS'None'
p528
aS'[]'
p529
ag14
aS'None'
p530
aS'[]'
p531
ag14
aS'None'
p532
aS'[]'
p533
ag14
aS'None'
p534
aS'[]'
p535
ag14
aS'None'
p536
aS'[]'
p537
ag14
aS'None'
p538
aS'[]'
p539
ag14
aS'None'
p540
aS'[]'
p541
ag14
aS'None'
p542
aS'[]'
p543
ag14
aS'None'
p544
aS'[]'
p545
ag14
aS'None'
p546
aS'[]'
p547
ag14
aS'None'
p548
aS'[]'
p549
ag14
aS'None'
p550
aS'[]'
p551
ag14
aS'None'
p552
aS'[]'
p553
ag14
aS'None'
p554
aS'[]'
p555
ag14
aS'None'
p556
aS'[]'
p557
ag14
aS'None'
p558
aS'[]'
p559
ag14
aS'None'
p560
aS'[]'
p561
ag14
aS'None'
p562
aS'[]'
p563
ag14
aS'None'
p564
aS'[]'
p565
ag14
aS'None'
p566
aS'[]'
p567
ag14
aS'1'
p568
aS'[2L]'
p569
aS'<stack frame offset -0x4>'
p570
aS'None'
p571
aS'[]'
p572
ag14
aS'None'
p573
aS'[]'
p574
ag14
aS'None'
p575
aS'[]'
p576
ag14
aS'None'
p577
aS'[]'
p578
ag14
aS'None'
p579
aS'[]'
p580
ag14
aS'None'
p581
aS'[]'
p582
ag14
aS'None'
p583
aS'[]'
p584
ag14
aS'None'
p585
aS'[]'
p586
ag14
aS'None'
p587
aS'[]'
p588
ag14
aS'None'
p589
aS'[]'
p590
ag14
aS'None'
p591
aS'[]'
p592
ag14
aS'None'
p593
aS'[]'
p594
ag14
aS'None'
p595
aS'[]'
p596
ag14
aS'None'
p597
aS'[]'
p598
ag14
aS'None'
p599
aS'[]'
p600
ag14
aS'None'
p601
aS'[]'
p602
ag14
aS'None'
p603
aS'[]'
p604
ag14
aS'None'
p605
aS'[]'
p606
ag14
aS'None'
p607
aS'[]'
p608
ag14
aS'None'
p609
aS'[]'
p610
ag14
aS'None'
p611
aS'[]'
p612
ag14
aS'None'
p613
aS'[]'
p614
ag14
aS'None'
p615
aS'[]'
p616
ag14
aS'None'
p617
aS'[]'
p618
ag14
aS'0'
p619
aS'[]'
p620
ag14
aS'None'
p621
aS'[]'
p622
ag14
aS'None'
p623
aS'[]'
p624
ag14
aS'None'
p625
aS'[]'
p626
ag14
aS'None'
p627
aS'[]'
p628
ag14
aS'None'
p629
aS'[]'
p630
ag14
aS'None'
p631
aS'[]'
p632
ag14
aS'None'
p633
aS'[]'
p634
ag14
aS'None'
p635
aS'[]'
p636
ag14
aS'None'
p637
aS'[]'
p638
ag14
aS'None'
p639
aS'[]'
p640
ag14
aS'None'
p641
aS'[]'
p642
ag14
aS'None'
p643
aS'[]'
p644
ag14
aS'None'
p645
aS'[]'
p646
ag14
aS'None'
p647
aS'[]'
p648
ag14
aS'None'
p649
aS'[]'
p650
ag14
aS'None'
p651
aS'[]'
p652
ag14
aS'None'
p653
aS'[]'
p654
ag14
aS'[]'
p655
ag14
aS'[]'
p656
ag14
aS'[]'
p657
ag14
aS'[]'
p658
ag14
aS'[]'
p659
ag14
aS'[]'
p660
ag14
aS'[]'
p661
ag14
aS'[]'
p662
ag14
aS'[]'
p663
ag14
aS'[]'
p664
ag14
aS'[]'
p665
ag14
aS'0'
p666
aS'0'
p667
aS'0'
p668
aS'0'
p669
aS'1'
p670
aS'1'
p671
aS'1'
p672
aS'1'
p673
aS'2'
p674
aS'3'
p675
aS'1'
p676
aS'3'
p677
aS'3'
p678
aS'5'
p679
aS'2'
p680
aS'5'
p681
aS'4'
p682
aS'7'
p683
aS'2'
p684
aS'7'
p685
aS'5'
p686
aS'9'
p687
aS'3'
p688
aS'9'
p689
aS'None'
p690
aS'[]'
p691
ag14
aS'None'
p692
aS'[]'
p693
ag14
aS'None'
p694
aS'[]'
p695
ag14
aS'None'
p696
aS'[]'
p697
ag14
aS'None'
p698
aS'[]'
p699
ag14
aS'None'
p700
aS'[]'
p701
ag14
aS'None'
p702
aS'[]'
p703
ag14
aS'None'
p704
aS'[]'
p705
ag14
aS'None'
p706
aS'[]'
p707
ag14
aS'None'
p708
aS'[]'
p709
ag14
aS'None'
p710
aS'[]'
p711
ag14
aS'None'
p712
aS'[]'
p713
ag14
aS'None'
p714
aS'[]'
p715
ag14
aS'None'
p716
aS'[]'
p717
ag14
aS'None'
p718
aS'[]'
p719
ag14
aS'None'
p720
aS'[]'
p721
ag14
aS'None'
p722
aS'[]'
p723
ag14
aS'None'
p724
aS'[]'
p725
ag14
aS'None'
p726
aS'[]'
p727
ag14
aS'None'
p728
aS'[]'
p729
ag14
aS'None'
p730
aS'[]'
p731
ag14
aS'None'
p732
aS'[]'
p733
ag14
aS'0'
p734
aS'[3L, 4L, 5L, 6L]'
p735
aS'<stack frame offset -0x4>'
p736
aS'None'
p737
aS'[]'
p738
ag14
aS'1'
p739
aS'[1L, 2L]'
p740
aS'<const 0xffff>'
p741
aS'None'
p742
aS'[]'
p743
ag14
aS'None'
p744
aS'[]'
p745
ag14
aS'None'
p746
aS'[]'
p747
ag14
aS'None'
p748
aS'[]'
p749
ag14
aS'None'
p750
aS'[]'
p751
ag14
aS'3'
p752
aS'[3L]'
p753
ag14
aS'None'
p754
aS'[]'
p755
ag14
aS'None'
p756
aS'[]'
p757
ag14
aS'None'
p758
aS'[]'
p759
ag14
aS'None'
p760
aS'[]'
p761
ag14
aS'None'
p762
aS'[]'
p763
ag14
aS'None'
p764
aS'[]'
p765
ag14
aS'None'
p766
aS'[]'
p767
ag14
aS'None'
p768
aS'[]'
p769
ag14
aS'None'
p770
aS'[]'
p771
ag14
aS'None'
p772
aS'[]'
p773
ag14
aS'None'
p774
aS'[]'
p775
ag14
aS'None'
p776
aS'[]'
p777
ag14
aS'None'
p778
aS'[]'
p779
ag14
aS'None'
p780
aS'[]'
p781
ag14
aS'None'
p782
aS'[]'
p783
ag14
aS'None'
p784
aS'[]'
p785
ag14
aS'5'
p786
aS'[6L]'
p787
ag14
aS'None'
p788
aS'[]'
p789
ag14
aS'None'
p790
aS'[]'
p791
ag14
aS'None'
p792
aS'[]'
p793
ag14
aS'None'
p794
aS'[]'
p795
ag14
aS'None'
p796
aS'[]'
p797
ag14
aS'None'
p798
aS'[]'
p799
ag14
aS'None'
p800
aS'[]'
p801
ag14
aS'None'
p802
aS'[]'
p803
ag14
aS'None'
p804
aS'[]'
p805
ag14
aS'None'
p806
aS'[]'
p807
ag14
aS'None'
p808
aS'[]'
p809
ag14
aS'None'
p810
aS'[]'
p811
ag14
aS'None'
p812
aS'[]'
p813
ag14
aS'None'
p814
aS'[]'
p815
ag14
aS'None'
p816
aS'[]'
p817
ag14
aS'None'
p818
aS'[]'
p819
ag14
aS'None'
p820
aS'[]'
p821
ag14
aS'[]'
p822
ag14
aS'[]'
p823
ag14
aS'[]'
p824
ag14
aS'[]'
p825
ag14
aS'[]'
p826
ag14
aS'[]'
p827
ag14
aS'[]'
p828
ag14
aS'[]'
p829
ag14
aS'[]'
p830
ag14
aS'[]'
p831
ag14
aS'[]'
p832
ag14
aS'0'
p833
aS'0'
p834
aS'None'
p835
aS'0'
p836
aS'1'
p837
aS'1'
p838
aS'0'
p839
aS'1'
p840
aS'2'
p841
aS'3'
p842
aS'1'
p843
aS'3'
p844
aS'3'
p845
aS'5'
p846
aS'2'
p847
aS'5'
p848
aS'4'
p849
aS'8'
p850
aS'4'
p851
aS'8'
p852
aS'5'
p853
aS'11'
p854
aS'5'
p855
aS'11'
p856
aS'6'
p857
aS'12'
p858
aS'6'
p859
aS'12'
p860
aS'7'
p861
aS'14'
p862
aS'7'
p863
aS'14'
p864
aS'8'
p865
aS'18'
p866
aS'9'
p867
aS'18'
p868
aS'9'
p869
aS'21'
p870
aS'10'
p871
aS'21'
p872
aS'10'
p873
aS'23'
p874
aS'11'
p875
aS'23'
p876
aS'11'
p877
aS'25'
p878
aS'12'
p879
aS'25'
p880
aS'12'
p881
aS'27'
p882
aS'None'
p883
aS'27'
p884
aS'13'
p885
aS'28'
p886
aS'13'
p887
aS'28'
p888
aS'None'
p889
aS'[]'
p890
ag14
aS'None'
p891
aS'[]'
p892
ag14
aS'None'
p893
aS'[]'
p894
ag14
aS'None'
p895
aS'[]'
p896
ag14
aS'None'
p897
aS'[]'
p898
ag14
aS'None'
p899
aS'[]'
p900
ag14
aS'None'
p901
aS'[]'
p902
ag14
aS'None'
p903
aS'[]'
p904
ag14
aS'None'
p905
aS'[]'
p906
ag14
aS'None'
p907
aS'[]'
p908
ag14
aS'None'
p909
aS'[]'
p910
ag14
aS'None'
p911
aS'[]'
p912
ag14
aS'None'
p913
aS'[]'
p914
ag14
aS'None'
p915
aS'[]'
p916
ag14
aS'None'
p917
aS'[]'
p918
ag14
aS'None'
p919
aS'[]'
p920
ag14
aS'None'
p921
aS'[]'
p922
ag14
aS'None'
p923
aS'[]'
p924
ag14
aS'None'
p925
aS'[]'
p926
ag14
aS'None'
p927
aS'[]'
p928
ag14
aS'None'
p929
aS'[]'
p930
ag14
aS'None'
p931
aS'[]'
p932
ag14
aS'None'
p933
aS'[]'
p934
ag14
aS'None'
p935
aS'[]'
p936
ag14
aS'2'
p937
aS'[]'
p938
aS'<const 0x1>'
p939
aS'None'
p940
aS'[]'
p941
ag14
aS'None'
p942
aS'[]'
p943
ag14
aS'None'
p944
aS'[]'
p945
ag14
aS'None'
p946
aS'[]'
p947
ag14
aS'None'
p948
aS'[]'
p949
ag14
aS'None'
p950
aS'[]'
p951
ag14
aS'None'
p952
aS'[]'
p953
ag14
aS'None'
p954
aS'[]'
p955
ag14
aS'None'
p956
aS'[]'
p957
ag14
aS'None'
p958
aS'[]'
p959
ag14
aS'None'
p960
aS'[]'
p961
ag14
aS'None'
p962
aS'[]'
p963
ag14
aS'None'
p964
aS'[]'
p965
ag14
aS'None'
p966
aS'[]'
p967
ag14
aS'None'
p968
aS'[]'
p969
ag14
aS'None'
p970
aS'[]'
p971
ag14
aS'None'
p972
aS'[]'
p973
ag14
aS'None'
p974
aS'[]'
p975
ag14
aS'None'
p976
aS'[]'
p977
ag14
aS'None'
p978
aS'[]'
p979
ag14
aS'None'
p980
aS'[]'
p981
ag14
aS'None'
p982
aS'[]'
p983
ag14
aS'None'
p984
aS'[]'
p985
ag14
aS'None'
p986
aS'[]'
p987
ag14
aS'None'
p988
aS'[]'
p989
ag14
aS'None'
p990
aS'[]'
p991
ag14
aS'None'
p992
aS'[]'
p993
ag14
aS'None'
p994
aS'[]'
p995
ag14
aS'None'
p996
aS'[]'
p997
ag14
aS'None'
p998
aS'[]'
p999
ag14
aS'None'
p1000
aS'[]'
p1001
ag14
aS'None'
p1002
aS'[]'
p1003
ag14
aS'None'
p1004
aS'[]'
p1005
ag14
aS'None'
p1006
aS'[]'
p1007
ag14
aS'None'
p1008
aS'[]'
p1009
ag14
aS'None'
p1010
aS'[]'
p1011
ag14
aS'None'
p1012
aS'[]'
p1013
ag14
aS'None'
p1014
aS'[]'
p1015
ag14
aS'None'
p1016
aS'[]'
p1017
ag14
aS'None'
p1018
aS'[]'
p1019
ag14
aS'[]'
p1020
ag14
aS'[]'
p1021
ag14
aS'[]'
p1022
ag14
aS'[]'
p1023
ag14
aS'[]'
p1024
ag14
aS'[]'
p1025
ag14
aS'[]'
p1026
ag14
aS'[]'
p1027
ag14
aS'[]'
p1028
ag14
aS'[]'
p1029
ag14
aS'[]'
p1030
ag14
aS'0'
p1031
aS'0'
p1032
aS'0'
p1033
aS'0'
p1034
aS'1'
p1035
aS'1'
p1036
aS'1'
p1037
aS'1'
p1038
aS'2'
p1039
aS'2'
p1040
aS'1'
p1041
aS'2'
p1042
aS'3'
p1043
aS'3'
p1044
aS'1'
p1045
aS'3'
p1046
aS'None'
p1047
aS'[]'
p1048
ag14
aS'None'
p1049
aS'[]'
p1050
ag14
aS'None'
p1051
aS'[]'
p1052
ag14
aS'None'
p1053
aS'[]'
p1054
ag14
aS'None'
p1055
aS'[]'
p1056
ag14
aS'None'
p1057
aS'[]'
p1058
ag14
aS'None'
p1059
aS'[]'
p1060
ag14
aS'None'
p1061
aS'[]'
p1062
ag14
aS'None'
p1063
aS'[]'
p1064
ag14
aS'None'
p1065
aS'[]'
p1066
ag14
aS'None'
p1067
aS'[]'
p1068
ag14
aS'None'
p1069
aS'[]'
p1070
ag14
aS'None'
p1071
aS'[]'
p1072
ag14
aS'None'
p1073
aS'[]'
p1074
ag14
aS'None'
p1075
aS'[]'
p1076
ag14
aS'None'
p1077
aS'[]'
p1078
ag14
aS'None'
p1079
aS'[]'
p1080
ag14
aS'None'
p1081
aS'[]'
p1082
ag14
aS'None'
p1083
aS'[]'
p1084
ag14
aS'None'
p1085
aS'[]'
p1086
ag14
aS'None'
p1087
aS'[]'
p1088
ag14
aS'None'
p1089
aS'[]'
p1090
ag14
aS'2'
p1091
aS'[3L]'
p1092
aS'<stack frame offset 0x4>'
p1093
aS'None'
p1094
aS'[]'
p1095
ag14
aS'0'
p1096
aS'[0L, 1L]'
p1097
aS'<const 0xffff>'
p1098
aS'None'
p1099
aS'[]'
p1100
ag14
aS'None'
p1101
aS'[]'
p1102
ag14
aS'None'
p1103
aS'[]'
p1104
ag14
aS'None'
p1105
aS'[]'
p1106
ag14
aS'None'
p1107
aS'[]'
p1108
ag14
aS'None'
p1109
aS'[]'
p1110
ag14
aS'None'
p1111
aS'[]'
p1112
ag14
aS'None'
p1113
aS'[]'
p1114
ag14
aS'None'
p1115
aS'[]'
p1116
ag14
aS'None'
p1117
aS'[]'
p1118
ag14
aS'None'
p1119
aS'[]'
p1120
ag14
aS'None'
p1121
aS'[]'
p1122
ag14
aS'None'
p1123
aS'[]'
p1124
ag14
aS'None'
p1125
aS'[]'
p1126
ag14
aS'None'
p1127
aS'[]'
p1128
ag14
aS'None'
p1129
aS'[]'
p1130
ag14
aS'None'
p1131
aS'[]'
p1132
ag14
aS'None'
p1133
aS'[]'
p1134
ag14
aS'None'
p1135
aS'[]'
p1136
ag14
aS'None'
p1137
aS'[]'
p1138
ag14
aS'None'
p1139
aS'[]'
p1140
ag14
aS'None'
p1141
aS'[]'
p1142
ag14
aS'None'
p1143
aS'[]'
p1144
ag14
aS'None'
p1145
aS'[]'
p1146
ag14
aS'None'
p1147
aS'[]'
p1148
ag14
aS'None'
p1149
aS'[]'
p1150
ag14
aS'None'
p1151
aS'[]'
p1152
ag14
aS'None'
p1153
aS'[]'
p1154
ag14
aS'None'
p1155
aS'[]'
p1156
ag14
aS'None'
p1157
aS'[]'
p1158
ag14
aS'None'
p1159
aS'[]'
p1160
ag14
aS'None'
p1161
aS'[]'
p1162
ag14
aS'None'
p1163
aS'[]'
p1164
ag14
aS'None'
p1165
aS'[]'
p1166
ag14
aS'None'
p1167
aS'[]'
p1168
ag14
aS'None'
p1169
aS'[]'
p1170
ag14
aS'None'
p1171
aS'[]'
p1172
ag14
aS'None'
p1173
aS'[]'
p1174
ag14
aS'None'
p1175
aS'[]'
p1176
ag14
aS'None'
p1177
aS'[]'
p1178
ag14
aS'[]'
p1179
ag14
aS'[]'
p1180
ag14
aS'[]'
p1181
ag14
aS'[]'
p1182
ag14
aS'[]'
p1183
ag14
aS'[]'
p1184
ag14
aS'[]'
p1185
ag14
aS'[]'
p1186
ag14
aS'[]'
p1187
ag14
aS'[]'
p1188
ag14
aS'[]'
p1189
ag14
aS'0'
p1190
aS'0'
p1191
aS'0'
p1192
aS'0'
p1193
aS'1'
p1194
aS'2'
p1195
aS'1'
p1196
aS'2'
p1197
aS'2'
p1198
aS'3'
p1199
aS'None'
p1200
aS'3'
p1201
aS'3'
p1202
aS'5'
p1203
aS'None'
p1204
aS'5'
p1205
aS'4'
p1206
aS'6'
p1207
aS'2'
p1208
aS'6'
p1209
aS'None'
p1210
aS'[]'
p1211
ag14
aS'None'
p1212
aS'[]'
p1213
ag14
aS'None'
p1214
aS'[]'
p1215
ag14
aS'None'
p1216
aS'[]'
p1217
ag14
aS'None'
p1218
aS'[]'
p1219
ag14
aS'None'
p1220
aS'[]'
p1221
ag14
aS'None'
p1222
aS'[]'
p1223
ag14
aS'None'
p1224
aS'[]'
p1225
ag14
aS'None'
p1226
aS'[]'
p1227
ag14
aS'None'
p1228
aS'[]'
p1229
ag14
aS'None'
p1230
aS'[]'
p1231
ag14
aS'None'
p1232
aS'[]'
p1233
ag14
aS'None'
p1234
aS'[]'
p1235
ag14
aS'None'
p1236
aS'[]'
p1237
ag14
aS'None'
p1238
aS'[]'
p1239
ag14
aS'None'
p1240
aS'[]'
p1241
ag14
aS'None'
p1242
aS'[]'
p1243
ag14
aS'None'
p1244
aS'[]'
p1245
ag14
aS'None'
p1246
aS'[]'
p1247
ag14
aS'None'
p1248
aS'[]'
p1249
ag14
aS'None'
p1250
aS'[]'
p1251
ag14
aS'None'
p1252
aS'[]'
p1253
ag14
aS'0'
p1254
aS'[4L, 5L]'
p1255
aS'<stack frame offset -0x4>'
p1256
aS'None'
p1257
aS'[]'
p1258
ag14
aS'3'
p1259
aS'[4L]'
p1260
aS'<const 0x1>'
p1261
aS'None'
p1262
aS'[]'
p1263
ag14
aS'None'
p1264
aS'[]'
p1265
ag14
aS'None'
p1266
aS'[]'
p1267
ag14
aS'None'
p1268
aS'[]'
p1269
ag14
aS'None'
p1270
aS'[]'
p1271
ag14
aS'None'
p1272
aS'[]'
p1273
ag14
aS'None'
p1274
aS'[]'
p1275
ag14
aS'None'
p1276
aS'[]'
p1277
ag14
aS'None'
p1278
aS'[]'
p1279
ag14
aS'None'
p1280
aS'[]'
p1281
ag14
aS'None'
p1282
aS'[]'
p1283
ag14
aS'None'
p1284
aS'[]'
p1285
ag14
aS'None'
p1286
aS'[]'
p1287
ag14
aS'None'
p1288
aS'[]'
p1289
ag14
aS'None'
p1290
aS'[]'
p1291
ag14
aS'None'
p1292
aS'[]'
p1293
ag14
aS'None'
p1294
aS'[]'
p1295
ag14
aS'None'
p1296
aS'[]'
p1297
ag14
aS'None'
p1298
aS'[]'
p1299
ag14
aS'None'
p1300
aS'[]'
p1301
ag14
aS'None'
p1302
aS'[]'
p1303
ag14
aS'None'
p1304
aS'[]'
p1305
ag14
aS'5'
p1306
aS'[]'
p1307
ag14
aS'None'
p1308
aS'[]'
p1309
ag14
aS'None'
p1310
aS'[]'
p1311
ag14
aS'None'
p1312
aS'[]'
p1313
ag14
aS'None'
p1314
aS'[]'
p1315
ag14
aS'None'
p1316
aS'[]'
p1317
ag14
aS'None'
p1318
aS'[]'
p1319
ag14
aS'None'
p1320
aS'[]'
p1321
ag14
aS'None'
p1322
aS'[]'
p1323
ag14
aS'None'
p1324
aS'[]'
p1325
ag14
aS'None'
p1326
aS'[]'
p1327
ag14
aS'None'
p1328
aS'[]'
p1329
ag14
aS'None'
p1330
aS'[]'
p1331
ag14
aS'None'
p1332
aS'[]'
p1333
ag14
aS'None'
p1334
aS'[]'
p1335
ag14
aS'None'
p1336
aS'[]'
p1337
ag14
aS'None'
p1338
aS'[]'
p1339
ag14
aS'None'
p1340
aS'[]'
p1341
ag14
aS'[]'
p1342
ag14
aS'[]'
p1343
ag14
aS'[]'
p1344
ag14
aS'[]'
p1345
ag14
aS'[]'
p1346
ag14
aS'[]'
p1347
ag14
aS'[]'
p1348
ag14
aS'[]'
p1349
ag14
aS'[]'
p1350
ag14
aS'[]'
p1351
ag14
aS'[]'
p1352
ag14
aS'0'
p1353
aS'0'
p1354
aS'None'
p1355
aS'0'
p1356
aS'1'
p1357
aS'1'
p1358
aS'0'
p1359
aS'1'
p1360
aS'2'
p1361
aS'2'
p1362
aS'1'
p1363
aS'2'
p1364
aS'3'
p1365
aS'3'
p1366
aS'1'
p1367
aS'3'
p1368
aS'4'
p1369
aS'4'
p1370
aS'1'
p1371
aS'4'
p1372
aS'5'
p1373
aS'7'
p1374
aS'2'
p1375
aS'7'
p1376
aS'6'
p1377
aS'9'
p1378
aS'3'
p1379
aS'9'
p1380
aS'None'
p1381
aS'[]'
p1382
ag14
aS'None'
p1383
aS'[]'
p1384
ag14
aS'None'
p1385
aS'[]'
p1386
ag14
aS'None'
p1387
aS'[]'
p1388
ag14
aS'None'
p1389
aS'[]'
p1390
ag14
aS'None'
p1391
aS'[]'
p1392
ag14
aS'None'
p1393
aS'[]'
p1394
ag14
aS'None'
p1395
aS'[]'
p1396
ag14
aS'None'
p1397
aS'[]'
p1398
ag14
aS'None'
p1399
aS'[]'
p1400
ag14
aS'None'
p1401
aS'[]'
p1402
ag14
aS'None'
p1403
aS'[]'
p1404
ag14
aS'None'
p1405
aS'[]'
p1406
ag14
aS'None'
p1407
aS'[]'
p1408
ag14
aS'None'
p1409
aS'[]'
p1410
ag14
aS'None'
p1411
aS'[]'
p1412
ag14
aS'None'
p1413
aS'[]'
p1414
ag14
aS'None'
p1415
aS'[]'
p1416
ag14
aS'None'
p1417
aS'[]'
p1418
ag14
aS'None'
p1419
aS'[]'
p1420
ag14
aS'None'
p1421
aS'[]'
p1422
ag14
aS'None'
p1423
aS'[]'
p1424
ag14
aS'0'
p1425
aS'[1L, 2L, 3L, 8L]'
p1426
aS'<stack frame offset -0x4>'
p1427
aS'None'
p1428
aS'[]'
p1429
ag14
aS'9'
p1430
aS'[9L, 10L]'
p1431
aS'<const 0xffff>'
p1432
aS'None'
p1433
aS'[]'
p1434
ag14
aS'None'
p1435
aS'[]'
p1436
ag14
aS'None'
p1437
aS'[]'
p1438
ag14
aS'None'
p1439
aS'[]'
p1440
ag14
aS'None'
p1441
aS'[]'
p1442
ag14
aS'None'
p1443
aS'[]'
p1444
ag14
aS'None'
p1445
aS'[]'
p1446
ag14
aS'None'
p1447
aS'[]'
p1448
ag14
aS'None'
p1449
aS'[]'
p1450
ag14
aS'None'
p1451
aS'[]'
p1452
ag14
aS'None'
p1453
aS'[]'
p1454
ag14
aS'None'
p1455
aS'[]'
p1456
ag14
aS'None'
p1457
aS'[]'
p1458
ag14
aS'None'
p1459
aS'[]'
p1460
ag14
aS'None'
p1461
aS'[]'
p1462
ag14
aS'None'
p1463
aS'[]'
p1464
ag14
aS'None'
p1465
aS'[]'
p1466
ag14
aS'None'
p1467
aS'[]'
p1468
ag14
aS'None'
p1469
aS'[]'
p1470
ag14
aS'None'
p1471
aS'[]'
p1472
ag14
aS'None'
p1473
aS'[]'
p1474
ag14
aS'None'
p1475
aS'[]'
p1476
ag14
aS'2'
p1477
aS'[3L]'
p1478
ag14
aS'None'
p1479
aS'[]'
p1480
ag14
aS'None'
p1481
aS'[]'
p1482
ag14
aS'None'
p1483
aS'[]'
p1484
ag14
aS'None'
p1485
aS'[]'
p1486
ag14
aS'None'
p1487
aS'[]'
p1488
ag14
aS'None'
p1489
aS'[]'
p1490
ag14
aS'None'
p1491
aS'[]'
p1492
ag14
aS'None'
p1493
aS'[]'
p1494
ag14
aS'None'
p1495
aS'[]'
p1496
ag14
aS'None'
p1497
aS'[]'
p1498
ag14
aS'None'
p1499
aS'[]'
p1500
ag14
aS'None'
p1501
aS'[]'
p1502
ag14
aS'None'
p1503
aS'[]'
p1504
ag14
aS'None'
p1505
aS'[]'
p1506
ag14
aS'None'
p1507
aS'[]'
p1508
ag14
aS'None'
p1509
aS'[]'
p1510
ag14
aS'None'
p1511
aS'[]'
p1512
ag14
aS'[]'
p1513
ag14
aS'[]'
p1514
ag14
aS'[]'
p1515
ag14
aS'[]'
p1516
ag14
aS'[]'
p1517
ag14
aS'[]'
p1518
ag14
aS'[]'
p1519
ag14
aS'[]'
p1520
ag14
aS'[]'
p1521
ag14
aS'[]'
p1522
ag14
aS'[]'
p1523
ag14
aS'0'
p1524
aS'0'
p1525
aS'None'
p1526
aS'0'
p1527
aS'1'
p1528
aS'1'
p1529
aS'0'
p1530
aS'1'
p1531
aS'2'
p1532
aS'2'
p1533
aS'1'
p1534
aS'2'
p1535
aS'3'
p1536
aS'3'
p1537
aS'2'
p1538
aS'3'
p1539
aS'4'
p1540
aS'5'
p1541
aS'3'
p1542
aS'5'
p1543
aS'5'
p1544
aS'7'
p1545
aS'4'
p1546
aS'7'
p1547
aS'6'
p1548
aS'8'
p1549
aS'5'
p1550
aS'8'
p1551
aS'7'
p1552
aS'9'
p1553
aS'6'
p1554
aS'9'
p1555
aS'8'
p1556
aS'13'
p1557
aS'7'
p1558
aS'10'
p1559
aS'9'
p1560
aS'14'
p1561
aS'8'
p1562
aS'11'
p1563
aS'10'
p1564
aS'16'
p1565
aS'9'
p1566
aS'13'
p1567
aS'11'
p1568
aS'18'
p1569
aS'10'
p1570
aS'15'
p1571
aS'12'
p1572
aS'19'
p1573
aS'11'
p1574
aS'16'
p1575
aS'13'
p1576
aS'20'
p1577
aS'11'
p1578
aS'17'
p1579
aS'14'
p1580
aS'21'
p1581
aS'11'
p1582
aS'18'
p1583
aS'15'
p1584
aS'24'
p1585
aS'12'
p1586
aS'21'
p1587
aS'16'
p1588
aS'25'
p1589
aS'None'
p1590
aS'22'
p1591
aS'17'
p1592
aS'26'
p1593
aS'None'
p1594
aS'23'
p1595
aS'18'
p1596
aS'28'
p1597
aS'None'
p1598
aS'25'
p1599
aS'19'
p1600
aS'29'
p1601
aS'13'
p1602
aS'26'
p1603
aS'None'
p1604
aS'[]'
p1605
ag14
aS'None'
p1606
aS'[]'
p1607
ag14
aS'None'
p1608
aS'[]'
p1609
ag14
aS'None'
p1610
aS'[]'
p1611
ag14
aS'None'
p1612
aS'[]'
p1613
ag14
aS'None'
p1614
aS'[]'
p1615
ag14
aS'None'
p1616
aS'[]'
p1617
ag14
aS'None'
p1618
aS'[]'
p1619
ag14
aS'None'
p1620
aS'[]'
p1621
ag14
aS'None'
p1622
aS'[]'
p1623
ag14
aS'None'
p1624
aS'[]'
p1625
ag14
aS'None'
p1626
aS'[]'
p1627
ag14
aS'None'
p1628
aS'[]'
p1629
ag14
aS'None'
p1630
aS'[]'
p1631
ag14
aS'None'
p1632
aS'[]'
p1633
ag14
aS'None'
p1634
aS'[]'
p1635
ag14
aS'None'
p1636
aS'[]'
p1637
ag14
aS'None'
p1638
aS'[]'
p1639
ag14
aS'None'
p1640
aS'[]'
p1641
ag14
aS'None'
p1642
aS'[]'
p1643
ag14
aS'None'
p1644
aS'[]'
p1645
ag14
aS'None'
p1646
aS'[]'
p1647
ag14
aS'5'
p1648
aS'[6L, 10L]'
p1649
aS'<stack frame offset -0x4>'
p1650
aS'None'
p1651
aS'[]'
p1652
ag14
aS'0'
p1653
aS'[0L, 1L]'
p1654
aS'<const 0xffff>'
p1655
aS'None'
p1656
aS'[]'
p1657
ag14
aS'None'
p1658
aS'[]'
p1659
ag14
aS'None'
p1660
aS'[]'
p1661
ag14
aS'None'
p1662
aS'[]'
p1663
ag14
aS'None'
p1664
aS'[]'
p1665
ag14
aS'None'
p1666
aS'[]'
p1667
ag14
aS'None'
p1668
aS'[]'
p1669
ag14
aS'None'
p1670
aS'[]'
p1671
ag14
aS'None'
p1672
aS'[]'
p1673
ag14
aS'None'
p1674
aS'[]'
p1675
ag14
aS'None'
p1676
aS'[]'
p1677
ag14
aS'None'
p1678
aS'[]'
p1679
ag14
aS'None'
p1680
aS'[]'
p1681
ag14
aS'None'
p1682
aS'[]'
p1683
ag14
aS'None'
p1684
aS'[]'
p1685
ag14
aS'None'
p1686
aS'[]'
p1687
ag14
aS'None'
p1688
aS'[]'
p1689
ag14
aS'None'
p1690
aS'[]'
p1691
ag14
aS'None'
p1692
aS'[]'
p1693
ag14
aS'None'
p1694
aS'[]'
p1695
ag14
aS'None'
p1696
aS'[]'
p1697
ag14
aS'None'
p1698
aS'[]'
p1699
ag14
aS'10'
p1700
aS'[]'
p1701
ag14
aS'None'
p1702
aS'[]'
p1703
ag14
aS'None'
p1704
aS'[]'
p1705
ag14
aS'None'
p1706
aS'[]'
p1707
ag14
aS'None'
p1708
aS'[]'
p1709
ag14
aS'None'
p1710
aS'[]'
p1711
ag14
aS'None'
p1712
aS'[]'
p1713
ag14
aS'None'
p1714
aS'[]'
p1715
ag14
aS'None'
p1716
aS'[]'
p1717
ag14
aS'None'
p1718
aS'[]'
p1719
ag14
aS'None'
p1720
aS'[]'
p1721
ag14
aS'None'
p1722
aS'[]'
p1723
ag14
aS'None'
p1724
aS'[]'
p1725
ag14
aS'None'
p1726
aS'[]'
p1727
ag14
aS'None'
p1728
aS'[]'
p1729
ag14
aS'None'
p1730
aS'[]'
p1731
ag14
aS'None'
p1732
aS'[]'
p1733
ag14
aS'None'
p1734
aS'[]'
p1735
ag14
aS'[]'
p1736
ag14
aS'[]'
p1737
ag14
aS'[]'
p1738
ag14
aS'[]'
p1739
ag14
aS'[]'
p1740
ag14
aS'[]'
p1741
ag14
aS'[]'
p1742
ag14
aS'[]'
p1743
ag14
aS'[]'
p1744
ag14
aS'[]'
p1745
ag14
aS'[]'
p1746
ag14
aS'0'
p1747
aS'0'
p1748
aS'0'
p1749
aS'0'
p1750
aS'1'
p1751
aS'2'
p1752
aS'1'
p1753
aS'2'
p1754
aS'2'
p1755
aS'4'
p1756
aS'2'
p1757
aS'4'
p1758
aS'3'
p1759
aS'5'
p1760
aS'3'
p1761
aS'5'
p1762
aS'4'
p1763
aS'7'
p1764
aS'4'
p1765
aS'7'
p1766
aS'5'
p1767
aS'8'
p1768
aS'None'
p1769
aS'8'
p1770
aS'6'
p1771
aS'9'
p1772
aS'5'
p1773
aS'9'
p1774
aS'7'
p1775
aS'10'
p1776
aS'6'
p1777
aS'10'
p1778
aS'8'
p1779
aS'11'
p1780
aS'6'
p1781
aS'11'
p1782
aS'9'
p1783
aS'12'
p1784
aS'6'
p1785
aS'12'
p1786
aS'10'
p1787
aS'13'
p1788
aS'6'
p1789
aS'13'
p1790
aS'11'
p1791
aS'15'
p1792
aS'None'
p1793
aS'15'
p1794
aS'12'
p1795
aS'17'
p1796
aS'None'
p1797
aS'17'
p1798
aS'13'
p1799
aS'18'
p1800
aS'7'
p1801
aS'18'
p1802
aS'None'
p1803
aS'[]'
p1804
ag14
aS'None'
p1805
aS'[]'
p1806
ag14
aS'None'
p1807
aS'[]'
p1808
ag14
aS'None'
p1809
aS'[]'
p1810
ag14
aS'None'
p1811
aS'[]'
p1812
ag14
aS'None'
p1813
aS'[]'
p1814
ag14
aS'None'
p1815
aS'[]'
p1816
ag14
aS'None'
p1817
aS'[]'
p1818
ag14
aS'None'
p1819
aS'[]'
p1820
ag14
aS'None'
p1821
aS'[]'
p1822
ag14
aS'None'
p1823
aS'[]'
p1824
ag14
aS'None'
p1825
aS'[]'
p1826
ag14
aS'None'
p1827
aS'[]'
p1828
ag14
aS'None'
p1829
aS'[]'
p1830
ag14
aS'None'
p1831
aS'[]'
p1832
ag14
aS'None'
p1833
aS'[]'
p1834
ag14
aS'None'
p1835
aS'[]'
p1836
ag14
aS'None'
p1837
aS'[]'
p1838
ag14
aS'None'
p1839
aS'[]'
p1840
ag14
aS'None'
p1841
aS'[]'
p1842
ag14
aS'None'
p1843
aS'[]'
p1844
ag14
aS'None'
p1845
aS'[]'
p1846
ag14
aS'0'
p1847
aS'[1L, 2L, 7L, 11L, 15L, 16L, 21L, 22L, 23L]'
p1848
aS'<stack frame offset -0x4>'
p1849
aS'None'
p1850
aS'[]'
p1851
ag14
aS'2'
p1852
aS'[2L, 3L]'
p1853
aS'<const 0xffff>'
p1854
aS'None'
p1855
aS'[]'
p1856
ag14
aS'None'
p1857
aS'[]'
p1858
ag14
aS'None'
p1859
aS'[]'
p1860
ag14
aS'None'
p1861
aS'[]'
p1862
ag14
aS'None'
p1863
aS'[]'
p1864
ag14
aS'None'
p1865
aS'[]'
p1866
ag14
aS'None'
p1867
aS'[]'
p1868
ag14
aS'None'
p1869
aS'[]'
p1870
ag14
aS'None'
p1871
aS'[]'
p1872
ag14
aS'None'
p1873
aS'[]'
p1874
ag14
aS'None'
p1875
aS'[]'
p1876
ag14
aS'None'
p1877
aS'[]'
p1878
ag14
aS'None'
p1879
aS'[]'
p1880
ag14
aS'None'
p1881
aS'[]'
p1882
ag14
aS'None'
p1883
aS'[]'
p1884
ag14
aS'None'
p1885
aS'[]'
p1886
ag14
aS'None'
p1887
aS'[]'
p1888
ag14
aS'None'
p1889
aS'[]'
p1890
ag14
aS'None'
p1891
aS'[]'
p1892
ag14
aS'None'
p1893
aS'[]'
p1894
ag14
aS'None'
p1895
aS'[]'
p1896
ag14
aS'None'
p1897
aS'[]'
p1898
ag14
aS'11'
p1899
aS'[15L]'
p1900
ag14
aS'None'
p1901
aS'[]'
p1902
ag14
aS'None'
p1903
aS'[]'
p1904
ag14
aS'None'
p1905
aS'[]'
p1906
ag14
aS'None'
p1907
aS'[]'
p1908
ag14
aS'None'
p1909
aS'[]'
p1910
ag14
aS'None'
p1911
aS'[]'
p1912
ag14
aS'None'
p1913
aS'[]'
p1914
ag14
aS'None'
p1915
aS'[]'
p1916
ag14
aS'None'
p1917
aS'[]'
p1918
ag14
aS'None'
p1919
aS'[]'
p1920
ag14
aS'None'
p1921
aS'[]'
p1922
ag14
aS'None'
p1923
aS'[]'
p1924
ag14
aS'None'
p1925
aS'[]'
p1926
ag14
aS'None'
p1927
aS'[]'
p1928
ag14
aS'None'
p1929
aS'[]'
p1930
ag14
aS'None'
p1931
aS'[]'
p1932
ag14
aS'None'
p1933
aS'[]'
p1934
ag14
aS'[]'
p1935
ag14
aS'[]'
p1936
ag14
aS'[]'
p1937
ag14
aS'[]'
p1938
ag14
aS'[]'
p1939
ag14
aS'[]'
p1940
ag14
aS'[]'
p1941
ag14
aS'[]'
p1942
ag14
aS'[]'
p1943
ag14
aS'[]'
p1944
ag14
aS'[]'
p1945
ag14
aS'0'
p1946
aS'0'
p1947
aS'None'
p1948
aS'0'
p1949
aS'1'
p1950
aS'1'
p1951
aS'0'
p1952
aS'1'
p1953
aS'2'
p1954
aS'2'
p1955
aS'1'
p1956
aS'2'
p1957
aS'3'
p1958
aS'4'
p1959
aS'2'
p1960
aS'4'
p1961
aS'4'
p1962
aS'6'
p1963
aS'3'
p1964
aS'6'
p1965
aS'5'
p1966
aS'7'
p1967
aS'4'
p1968
aS'7'
p1969
aS'6'
p1970
aS'9'
p1971
aS'5'
p1972
aS'9'
p1973
aS'7'
p1974
aS'10'
p1975
aS'6'
p1976
aS'10'
p1977
aS'8'
p1978
aS'11'
p1979
aS'7'
p1980
aS'11'
p1981
aS'9'
p1982
aS'12'
p1983
aS'7'
p1984
aS'12'
p1985
aS'10'
p1986
aS'13'
p1987
aS'7'
p1988
aS'13'
p1989
aS'11'
p1990
aS'14'
p1991
aS'7'
p1992
aS'14'
p1993
aS'12'
p1994
aS'15'
p1995
aS'8'
p1996
aS'15'
p1997
aS'13'
p1998
aS'16'
p1999
aS'9'
p2000
aS'16'
p2001
aS'14'
p2002
aS'17'
p2003
aS'10'
p2004
aS'17'
p2005
aS'15'
p2006
aS'22'
p2007
aS'11'
p2008
aS'18'
p2009
aS'16'
p2010
aS'23'
p2011
aS'12'
p2012
aS'19'
p2013
aS'17'
p2014
aS'25'
p2015
aS'13'
p2016
aS'21'
p2017
aS'18'
p2018
aS'27'
p2019
aS'14'
p2020
aS'23'
p2021
aS'19'
p2022
aS'28'
p2023
aS'15'
p2024
aS'24'
p2025
aS'20'
p2026
aS'29'
p2027
aS'16'
p2028
aS'25'
p2029
aS'21'
p2030
aS'30'
p2031
aS'16'
p2032
aS'26'
p2033
aS'22'
p2034
aS'33'
p2035
aS'18'
p2036
aS'29'
p2037
aS'23'
p2038
aS'34'
p2039
aS'None'
p2040
aS'30'
p2041
aS'24'
p2042
aS'35'
p2043
aS'None'
p2044
aS'31'
p2045
aS'25'
p2046
aS'37'
p2047
aS'None'
p2048
aS'33'
p2049
aS'26'
p2050
aS'38'
p2051
aS'19'
p2052
aS'34'
p2053
asS'test_med_il_instructions'
p2054
(lp2055
S'None'
p2056
aS'eax#1, mem#1 = call(0x1f0d, stack = esp#0 @ mem#0)'
p2057
ag14
aS'<undetermined>'
p2058
aS'{}'
p2059
aS"['7949', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[]', '[]']"
p2060
aS"['7949', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[]', '[]']"
p2061
aS'mem#1 = 0x1f0d() @ mem#0'
p2062
aS'0x1f0d()'
p2063
aS'None'
p2064
aS'eax#2, mem#3 = call(0x1f55, stack = esp#1 @ mem#2)'
p2065
ag14
ag2058
aS'{}'
p2066
aS"['8021', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: 1>]', '[]']"
p2067
aS"['8021', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: 1>]', '[]']"
p2068
aS'mem#2 = 0x1f55(1) @ mem#1'
p2069
aS'0x1f55(1)'
p2070
aS'None'
p2071
aS'eax#3, mem#5 = call(0x1fb3, stack = esp#3 @ mem#4)'
p2072
ag14
ag2058
aS'{}'
p2073
aS"['8115', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: 1>]', '[<var int32_t eax>]']"
p2074
aS"['8115', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: 1>]', '[<var int32_t eax>]']"
p2075
aS'eax#1, mem#3 = 0x1fb3(1) @ mem#2'
p2076
aS'eax = 0x1fb3(1)'
p2077
aS'None'
p2078
aS'<return> jump([esp#4].d @ mem#5)'
p2079
ag14
ag2058
aS'{}'
p2080
aS"['<MLIL_RET>', '[<il: eax>]']"
p2081
aS"['<MLIL_RET>', '[<il: eax>]']"
p2082
aS'return eax#1'
p2083
aS'return eax'
p2084
aS'None'
p2085
aS'x87#1[0 + top#1] = float.t(1) @ x87#0'
p2086
ag14
ag2058
aS'{}'
p2087
aS"['1', '<MLIL_CONST 4>', '<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', 'x87_r7']"
p2088
aS"['1', '<MLIL_CONST 4>', '<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', 'x87_r7']"
p2089
aS'x87_r7#1 = float.t(1)'
p2090
aS'x87_r7 = float.t(1)'
p2091
aS'None'
p2092
aS'x87#2[0 + top#2] = fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10) @ x87#1'
p2093
ag14
ag2058
aS'{}'
p2094
aS"['1.21542010126e-10', '3.14159265347', '<MLIL_FADD 10>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONV 10>', '<MLIL_FLOAT_CONV 10>', '<MLIL_SET_VAR 10>', 'x87_r6']"
p2095
aS"['1.21542010126e-10', '3.14159265347', '<MLIL_FADD 10>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONV 10>', '<MLIL_FLOAT_CONV 10>', '<MLIL_SET_VAR 10>', 'x87_r6']"
p2096
aS'x87_r6#1 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2097
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2098
aS'None'
p2099
aS'st0#1, mem#1 = call(0x1f3c, stack = esp#1 @ mem#0, params = x87#2[0 + top#2], x87#2[1 + top#2])'
p2100
ag14
ag2058
aS'{}'
p2101
aS"['7996', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: x87_r6>, <il: x87_r7>]', '[<var long double st0>]']"
p2102
aS"['7996', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: x87_r6>, <il: x87_r7>]', '[<var long double st0>]']"
p2103
aS'st0#1, mem#1 = 0x1f3c(x87_r6#1, x87_r7#1) @ mem#0'
p2104
aS'st0 = 0x1f3c(x87_r6, x87_r7)'
p2105
aS'None'
p2106
aS'x87#3[0 + top#3] = st0#1 @ x87#2'
p2107
ag14
ag2058
aS'{}'
p2108
aS"['<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', 'st0', 'x87_r7_1']"
p2109
aS"['<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', 'st0', 'x87_r7_1']"
p2110
aS'x87_r7_1#2 = st0#1'
p2111
aS'x87_r7_1 = st0'
p2112
aS'None'
p2113
aS'[esp#1].d = int.d(x87#3[0 + top#3]) @ mem#1 -> mem#2'
p2114
ag14
ag2058
aS'{}'
p2115
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4', 'x87_r7_1']"
p2116
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4', 'x87_r7_1']"
p2117
aS'var_4#1 = int.d(x87_r7_1#2)'
p2118
aS'var_4 = int.d(x87_r7_1)'
p2119
aS'None'
p2120
aS'eax#1 = [esp#1].d @ mem#2'
p2121
ag14
ag2058
aS'{}'
p2122
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p2123
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p2124
aS'eax#1 = var_4#1'
p2125
aS'eax = var_4'
p2126
aS'None'
p2127
aS'[esp#1 - 4].d = eax#1 @ mem#2 -> mem#3'
p2128
ag14
ag2058
aS'{}'
p2129
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_8']"
p2130
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_8']"
p2131
aS'var_8#1 = eax#1'
p2132
aS'var_8 = eax'
p2133
aS'None'
p2134
aS'st0#2, mem#4 = call(0x1f3f, stack = esp#2 @ mem#3)'
p2135
ag14
ag2058
aS'{}'
p2136
aS"['7999', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_8>]', '[<var long double st0_1>]']"
p2137
aS"['7999', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_8>]', '[<var long double st0_1>]']"
p2138
aS'st0_1#2, mem#2 = 0x1f3f(var_8#1) @ mem#1'
p2139
aS'st0_1 = 0x1f3f(var_8)'
p2140
aS'None'
p2141
aS'x87#5[0 + top#5] = st0#2 @ x87#4'
p2142
ag14
ag2058
aS'{}'
p2143
aS"['<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', 'st0_1', 'x87_r7_2']"
p2144
aS"['<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', 'st0_1', 'x87_r7_2']"
p2145
aS'x87_r7_2#3 = st0_1#2'
p2146
aS'x87_r7_2 = st0_1'
p2147
aS'None'
p2148
aS'[esp#3].d = int.d(x87#5[0 + top#5]) @ mem#4 -> mem#5'
p2149
ag14
ag2058
aS'{}'
p2150
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4_1', 'x87_r7_2']"
p2151
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4_1', 'x87_r7_2']"
p2152
aS'var_4_1#2 = int.d(x87_r7_2#3)'
p2153
aS'var_4_1 = int.d(x87_r7_2)'
p2154
aS'None'
p2155
aS'x87#7[0 + top#7] = float.t(0) @ x87#6'
p2156
ag14
ag2058
aS'{}'
p2157
aS"['0', '<MLIL_CONST 4>', '<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', 'x87_r7_3']"
p2158
aS"['0', '<MLIL_CONST 4>', '<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', 'x87_r7_3']"
p2159
aS'x87_r7_3#4 = float.t(0)'
p2160
aS'x87_r7_3 = float.t(0)'
p2161
aS'None'
p2162
aS'x87#8[0 + top#8] = float.t([esp#3].d @ mem#5) @ x87#7'
p2163
ag14
ag2058
aS'{}'
p2164
aS"['<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 4>', 'var_4_1', 'x87_r6_1']"
p2165
aS"['<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 4>', 'var_4_1', 'x87_r6_1']"
p2166
aS'x87_r6_1#2 = float.t(var_4_1#2)'
p2167
aS'x87_r6_1 = float.t(var_4_1)'
p2168
aS'None'
p2169
aS'eax#2, mem#6 = call(0x1f48, stack = esp#3 @ mem#5, params = x87#8[0 + top#8], x87#8[1 + top#8])'
p2170
ag14
ag2058
aS'{}'
p2171
aS"['8008', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: x87_r6_1>, <il: x87_r7_3>]', '[<var int32_t eax_1>]']"
p2172
aS"['8008', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: x87_r6_1>, <il: x87_r7_3>]', '[<var int32_t eax_1>]']"
p2173
aS'eax_1#2, mem#3 = 0x1f48(x87_r6_1#2, x87_r7_3#4) @ mem#2'
p2174
aS'eax_1 = 0x1f48(x87_r6_1, x87_r7_3)'
p2175
aS'None'
p2176
aS'<return> jump([esp#4].d @ mem#6)'
p2177
ag14
ag2058
aS'{}'
p2178
aS"['<MLIL_RET>', '[<il: eax_1>]']"
p2179
aS"['<MLIL_RET>', '[<il: eax_1>]']"
p2180
aS'return eax_1#2'
p2181
aS'return eax_1'
p2182
aS'None'
p2183
aS'x87#1[1 + top#0] = x87#0[1 + top#0] f+ x87#0[0 + top#0] @ x87#0'
p2184
ag14
ag2058
aS'{}'
p2185
aS"['<MLIL_FADD 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'arg1', 'arg2', 'x87_r1']"
p2186
aS"['<MLIL_FADD 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'arg1', 'arg2', 'x87_r1']"
p2187
aS'x87_r1#1 = arg2#0 + arg1#0'
p2188
aS'x87_r1 = arg2 + arg1'
p2189
aS'None'
p2190
aS'<return> jump([esp#0].d @ mem#0)'
p2191
ag14
ag2058
aS'{}'
p2192
aS"['<MLIL_RET>', '[<il: x87_r1>]']"
p2193
aS"['<MLIL_RET>', '[<il: x87_r1>]']"
p2194
aS'return x87_r1#1'
p2195
aS'return x87_r1'
p2196
aS'None'
p2197
aS'x87#1[0 + top#1] = float.t([esp#0 + 4].d @ mem#0) @ x87#0'
p2198
ag14
ag2058
aS'{}'
p2199
aS"['<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 4>', 'testautovar', 'x87_r7_1']"
p2200
aS"['<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 4>', 'testautovar', 'x87_r7_1']"
p2201
aS'x87_r7_1#1 = float.t(testautovar#0)'
p2202
aS'x87_r7_1 = float.t(testautovar)'
p2203
aS'None'
p2204
aS'x87#2[0 + top#1] = sqrt(x87#1[0 + top#1]) @ x87#1'
p2205
ag14
ag2058
aS'{}'
p2206
aS"['<MLIL_FSQRT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', 'x87_r7', 'x87_r7_1']"
p2207
aS"['<MLIL_FSQRT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', 'x87_r7', 'x87_r7_1']"
p2208
aS'x87_r7#2 = sqrt(x87_r7_1#1)'
p2209
aS'x87_r7 = sqrt(x87_r7_1)'
p2210
aS'None'
p2211
aS'<return> jump(temp0#1.d)'
p2212
ag14
ag2058
aS'{}'
p2213
aS"['<MLIL_RET>', '[<il: x87_r7>]']"
p2214
aS"['<MLIL_RET>', '[<il: x87_r7>]']"
p2215
aS'return x87_r7#2'
p2216
aS'return x87_r7'
p2217
aS'None'
p2218
aS'x87#1[1 + top#0] = x87#0[1 + top#0] f- x87#0[0 + top#0] @ x87#0'
p2219
ag14
ag2058
aS'{}'
p2220
aS"['<MLIL_FSUB 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'arg1', 'arg2', 'x87_r1']"
p2221
aS"['<MLIL_FSUB 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'arg1', 'arg2', 'x87_r1']"
p2222
aS'x87_r1#1 = arg2#0 - arg1#0'
p2223
aS'x87_r1 = arg2 - arg1'
p2224
aS'None'
p2225
aS'[esp#1].d = int.d(x87#2[0 + top#1]) @ mem#0 -> mem#1'
p2226
ag14
ag2058
aS'{}'
p2227
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4', 'x87_r1']"
p2228
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4', 'x87_r1']"
p2229
aS'var_4#1 = int.d(x87_r1#1)'
p2230
aS'var_4 = int.d(x87_r1)'
p2231
aS'None'
p2232
aS'eax#1 = [esp#1].d @ mem#1'
p2233
ag14
ag2058
aS'{}'
p2234
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p2235
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p2236
aS'eax#1 = var_4#1'
p2237
aS'eax = var_4'
p2238
aS'None'
p2239
aS'<return> jump([esp#2].d @ mem#1)'
p2240
ag14
ag2058
aS'{}'
p2241
aS"['<MLIL_RET>', '[<il: eax>]']"
p2242
aS"['<MLIL_RET>', '[<il: eax>]']"
p2243
aS'return eax#1'
p2244
aS'return eax'
p2245
aS'None'
p2246
aS'if ([esp#1 + 8].d @ mem#0 != 1) then 2 @ 0x1f6c else 8 @ 0x1f65'
p2247
ag14
ag2058
aS'{}'
p2248
aS"['1', '1', '5', '<MLIL_CMP_NE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'testautovar']"
p2249
aS"['1', '1', '5', '<MLIL_CMP_NE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'testautovar']"
p2250
aS'if (testautovar#0 != 1) then 1 @ 0x1f6c else 5 @ 0x1f65'
p2251
aS'if (testautovar != 1) then 1 @ 0x1f6c else 5 @ 0x1f65'
p2252
aS'None'
p2253
aS'eax#1 = [esp#1 + 8].d @ mem#0'
p2254
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2255
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'testautovar']"
p2256
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'testautovar']"
p2257
aS'eax_1#1 = testautovar#0'
p2258
aS'eax_1 = testautovar'
p2259
aS'None'
p2260
aS'[esp#1 - 4].d = eax#1 @ mem#0 -> mem#1'
p2261
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2262
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'var_8_1']"
p2263
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'var_8_1']"
p2264
aS'var_8_1#1 = eax_1#1'
p2265
aS'var_8_1 = eax_1'
p2266
aS'None'
p2267
aS'eax#2, mem#2 = call(0x1f94, stack = esp#2 @ mem#1)'
p2268
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2269
aS"['8084', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_8_1>]', '[<var int32_t eax>]']"
p2270
aS"['8084', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_8_1>]', '[<var int32_t eax>]']"
p2271
aS'eax#2, mem#1 = 0x1f94(var_8_1#1) @ mem#0'
p2272
aS'eax = 0x1f94(var_8_1)'
p2273
aS'None'
p2274
aS'goto 10 @ 0x1f7b'
p2275
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2276
aS"['7', '<MLIL_GOTO>']"
p2277
aS"['7', '<MLIL_GOTO>']"
p2278
aS'goto 7 @ 0x1f7b'
p2279
aS'goto 7 @ 0x1f7b'
p2280
aS'None'
p2281
aS'eax#3 = 0'
p2282
ag14
ag2058
aS'{0L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2283
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax']"
p2284
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax']"
p2285
aS'eax#3 = 0'
p2286
aS'eax = 0'
p2287
aS'None'
p2288
aS'goto 10 @ 0x1f7b'
p2289
ag14
ag2058
aS'{0L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2290
aS"['7', '<MLIL_GOTO>']"
p2291
aS"['7', '<MLIL_GOTO>']"
p2292
aS'goto 7 @ 0x1f7b'
p2293
aS'goto 7 @ 0x1f7b'
p2294
aS'None'
p2295
aS'[esp#4].d = eax#4 @ mem#3 -> mem#4'
p2296
ag14
ag2058
aS'{}'
p2297
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p2298
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p2299
aS'var_4#1 = eax#4'
p2300
aS'var_4 = eax'
p2301
aS'None'
p2302
aS'x87#1[0 + top#1] = float.t([esp#4].d @ mem#4) @ x87#0'
p2303
ag14
ag2058
aS'{}'
p2304
aS"['<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 4>', 'var_4', 'x87_r7']"
p2305
aS"['<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 4>', 'var_4', 'x87_r7']"
p2306
aS'x87_r7#1 = float.t(var_4#1)'
p2307
aS'x87_r7 = float.t(var_4)'
p2308
aS'None'
p2309
aS'x87#2[0 + top#2] = fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10) @ x87#1'
p2310
ag14
ag2058
aS'{}'
p2311
aS"['1.21542010126e-10', '3.14159265347', '<MLIL_FADD 10>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONV 10>', '<MLIL_FLOAT_CONV 10>', '<MLIL_SET_VAR 10>', 'x87_r6']"
p2312
aS"['1.21542010126e-10', '3.14159265347', '<MLIL_FADD 10>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONV 10>', '<MLIL_FLOAT_CONV 10>', '<MLIL_SET_VAR 10>', 'x87_r6']"
p2313
aS'x87_r6#1 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2314
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2315
aS'None'
p2316
aS'x87#3[1 + top#2] = x87#2[1 + top#2] f/ x87#2[0 + top#2] @ x87#2'
p2317
ag14
ag2058
aS'{}'
p2318
aS"['<MLIL_FDIV 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'x87_r6', 'x87_r7', 'x87_r7_1']"
p2319
aS"['<MLIL_FDIV 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'x87_r6', 'x87_r7', 'x87_r7_1']"
p2320
aS'x87_r7_1#2 = x87_r7#1 / x87_r6#1'
p2321
aS'x87_r7_1 = x87_r7 / x87_r6'
p2322
aS'None'
p2323
aS'[esp#4].d = int.d(x87#4[0 + top#3]) @ mem#4 -> mem#5'
p2324
ag14
ag2058
aS'{}'
p2325
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4_1', 'x87_r7_1']"
p2326
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4_1', 'x87_r7_1']"
p2327
aS'var_4_1#2 = int.d(x87_r7_1#2)'
p2328
aS'var_4_1 = int.d(x87_r7_1)'
p2329
aS'None'
p2330
aS'eax#5 = [esp#4].d @ mem#5'
p2331
ag14
ag2058
aS'{}'
p2332
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_2', 'var_4_1']"
p2333
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_2', 'var_4_1']"
p2334
aS'eax_2#5 = var_4_1#2'
p2335
aS'eax_2 = var_4_1'
p2336
aS'None'
p2337
aS'<return> jump(temp0#1.d)'
p2338
ag14
ag2058
aS'{}'
p2339
aS"['<MLIL_RET>', '[<il: eax_2>]']"
p2340
aS"['<MLIL_RET>', '[<il: eax_2>]']"
p2341
aS'return eax_2#5'
p2342
aS'return eax_2'
p2343
aS'None'
p2344
aS'x87#1[0 + top#1] = float.t([esp#0 + 4].d @ mem#0) @ x87#0'
p2345
ag14
ag2058
aS'{}'
p2346
aS"['<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 4>', 'testautovar', 'x87_r7']"
p2347
aS"['<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 4>', 'testautovar', 'x87_r7']"
p2348
aS'x87_r7#1 = float.t(testautovar#0)'
p2349
aS'x87_r7 = float.t(testautovar)'
p2350
aS'None'
p2351
aS'x87#2[0 + top#2] = fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10) @ x87#1'
p2352
ag14
ag2058
aS'{}'
p2353
aS"['1.21542010126e-10', '3.14159265347', '<MLIL_FADD 10>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONV 10>', '<MLIL_FLOAT_CONV 10>', '<MLIL_SET_VAR 10>', 'x87_r6']"
p2354
aS"['1.21542010126e-10', '3.14159265347', '<MLIL_FADD 10>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONV 10>', '<MLIL_FLOAT_CONV 10>', '<MLIL_SET_VAR 10>', 'x87_r6']"
p2355
aS'x87_r6#1 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2356
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2357
aS'None'
p2358
aS'x87#3[0 + top#2] = x87#2[0 + top#2] f* x87#2[1 + top#2] @ x87#2'
p2359
ag14
ag2058
aS'{}'
p2360
aS"['<MLIL_FMUL 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'x87_r6', 'x87_r6_1', 'x87_r7']"
p2361
aS"['<MLIL_FMUL 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'x87_r6', 'x87_r6_1', 'x87_r7']"
p2362
aS'x87_r6_1#2 = x87_r6#1 * x87_r7#1'
p2363
aS'x87_r6_1 = x87_r6 * x87_r7'
p2364
aS'None'
p2365
aS'x87#4[0 + top#3] = float.t(1) @ x87#3'
p2366
ag14
ag2058
aS'{}'
p2367
aS"['1', '<MLIL_CONST 4>', '<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', 'x87_r5']"
p2368
aS"['1', '<MLIL_CONST 4>', '<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', 'x87_r5']"
p2369
aS'x87_r5#1 = float.t(1)'
p2370
aS'x87_r5 = float.t(1)'
p2371
aS'None'
p2372
aS'x87#5[0 + top#3] = x87#4[0 + top#3] f- x87#4[1 + top#3] @ x87#4'
p2373
ag14
ag2058
aS'{}'
p2374
aS"['<MLIL_FSUB 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'x87_r5', 'x87_r5_1', 'x87_r6_1']"
p2375
aS"['<MLIL_FSUB 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'x87_r5', 'x87_r5_1', 'x87_r6_1']"
p2376
aS'x87_r5_1#2 = x87_r5#1 - x87_r6_1#2'
p2377
aS'x87_r5_1 = x87_r5 - x87_r6_1'
p2378
aS'None'
p2379
aS'[esp#1].d = int.d(x87#5[0 + top#3]) @ mem#0 -> mem#1'
p2380
ag14
ag2058
aS'{}'
p2381
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4', 'x87_r5_1']"
p2382
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4', 'x87_r5_1']"
p2383
aS'var_4#1 = int.d(x87_r5_1#2)'
p2384
aS'var_4 = int.d(x87_r5_1)'
p2385
aS'None'
p2386
aS'eax#1 = [esp#1].d @ mem#1'
p2387
ag14
ag2058
aS'{}'
p2388
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p2389
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p2390
aS'eax#1 = var_4#1'
p2391
aS'eax = var_4'
p2392
aS'None'
p2393
aS'<return> jump(temp0#1.d)'
p2394
ag14
ag2058
aS'{}'
p2395
aS"['<MLIL_RET>', '[<il: eax>]']"
p2396
aS"['<MLIL_RET>', '[<il: eax>]']"
p2397
aS'return eax#1'
p2398
aS'return eax'
p2399
aS'None'
p2400
aS'if ([esp#1 + 8].d @ mem#0 != 1) then 2 @ 0x1fca else 16 @ 0x1fc3'
p2401
ag14
ag2058
aS'{}'
p2402
aS"['1', '1', '9', '<MLIL_CMP_NE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'testautovar']"
p2403
aS"['1', '1', '9', '<MLIL_CMP_NE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'testautovar']"
p2404
aS'if (testautovar#0 != 1) then 1 @ 0x1fca else 9 @ 0x1fc3'
p2405
aS'if (testautovar != 1) then 1 @ 0x1fca else 9 @ 0x1fc3'
p2406
aS'None'
p2407
aS'x87#1[0 + top#1] = float.t([esp#1 + 8].d @ mem#0) @ x87#0'
p2408
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2409
aS"['<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 4>', 'testautovar', 'x87_r7_1']"
p2410
aS"['<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 4>', 'testautovar', 'x87_r7_1']"
p2411
aS'x87_r7_1#1 = float.t(testautovar#0)'
p2412
aS'x87_r7_1 = float.t(testautovar)'
p2413
aS'None'
p2414
aS'x87#2[0 + top#2] = fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10) @ x87#1'
p2415
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2416
aS"['1.21542010126e-10', '3.14159265347', '<MLIL_FADD 10>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONV 10>', '<MLIL_FLOAT_CONV 10>', '<MLIL_SET_VAR 10>', 'x87_r6_1']"
p2417
aS"['1.21542010126e-10', '3.14159265347', '<MLIL_FADD 10>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONST 8>', '<MLIL_FLOAT_CONV 10>', '<MLIL_FLOAT_CONV 10>', '<MLIL_SET_VAR 10>', 'x87_r6_1']"
p2418
aS'x87_r6_1#1 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2419
aS'x87_r6_1 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2420
aS'None'
p2421
aS'x87#3[0 + top#2] = x87#2[0 + top#2] f* x87#2[1 + top#2] @ x87#2'
p2422
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2423
aS"['<MLIL_FMUL 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'x87_r6_1', 'x87_r6_2', 'x87_r7_1']"
p2424
aS"['<MLIL_FMUL 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'x87_r6_1', 'x87_r6_2', 'x87_r7_1']"
p2425
aS'x87_r6_2#2 = x87_r6_1#1 * x87_r7_1#1'
p2426
aS'x87_r6_2 = x87_r6_1 * x87_r7_1'
p2427
aS'None'
p2428
aS'x87#4[0 + top#3] = float.t(1) @ x87#3'
p2429
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2430
aS"['1', '<MLIL_CONST 4>', '<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', 'x87_r5_1']"
p2431
aS"['1', '<MLIL_CONST 4>', '<MLIL_INT_TO_FLOAT 10>', '<MLIL_SET_VAR 10>', 'x87_r5_1']"
p2432
aS'x87_r5_1#1 = float.t(1)'
p2433
aS'x87_r5_1 = float.t(1)'
p2434
aS'None'
p2435
aS'x87#5[0 + top#3] = x87#4[0 + top#3] f- x87#4[1 + top#3] @ x87#4'
p2436
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2437
aS"['<MLIL_FSUB 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'x87_r5_1', 'x87_r5_2', 'x87_r6_2']"
p2438
aS"['<MLIL_FSUB 10>', '<MLIL_SET_VAR 10>', '<MLIL_VAR 10>', '<MLIL_VAR 10>', 'x87_r5_1', 'x87_r5_2', 'x87_r6_2']"
p2439
aS'x87_r5_2#2 = x87_r5_1#1 - x87_r6_2#2'
p2440
aS'x87_r5_2 = x87_r5_1 - x87_r6_2'
p2441
aS'None'
p2442
aS'[esp#1].d = int.d(x87#5[0 + top#3]) @ mem#0 -> mem#1'
p2443
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2444
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4_1', 'x87_r5_2']"
p2445
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 10>', 'var_4_1', 'x87_r5_2']"
p2446
aS'var_4_1#1 = int.d(x87_r5_2#2)'
p2447
aS'var_4_1 = int.d(x87_r5_2)'
p2448
aS'None'
p2449
aS'eax#1 = [esp#1].d @ mem#1'
p2450
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2451
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4_1']"
p2452
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4_1']"
p2453
aS'eax#1 = var_4_1#1'
p2454
aS'eax = var_4_1'
p2455
aS'None'
p2456
aS'goto 18 @ 0x1fe7'
p2457
ag14
ag2058
aS'{0L: <ILBranchDependence.TrueBranchDependent: 1>}'
p2458
aS"['11', '<MLIL_GOTO>']"
p2459
aS"['11', '<MLIL_GOTO>']"
p2460
aS'goto 11 @ 0x1fe7'
p2461
aS'goto 11 @ 0x1fe7'
p2462
aS'None'
p2463
aS'eax#2 = 0'
p2464
ag14
ag2058
aS'{0L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2465
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax']"
p2466
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax']"
p2467
aS'eax#2 = 0'
p2468
aS'eax = 0'
p2469
aS'None'
p2470
aS'goto 18 @ 0x1fe7'
p2471
ag14
ag2058
aS'{0L: <ILBranchDependence.FalseBranchDependent: 2>}'
p2472
aS"['11', '<MLIL_GOTO>']"
p2473
aS"['11', '<MLIL_GOTO>']"
p2474
aS'goto 11 @ 0x1fe7'
p2475
aS'goto 11 @ 0x1fe7'
p2476
aS'None'
p2477
aS'[esp#1].d = eax#3 @ mem#2 -> mem#3'
p2478
ag14
ag2058
aS'{}'
p2479
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4_2']"
p2480
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4_2']"
p2481
aS'var_4_2#3 = eax#3'
p2482
aS'var_4_2 = eax'
p2483
aS'None'
p2484
aS'x87#10[0 + top#5] = float.t([esp#1].d @ mem#3) @ x87#9'
p2485
ag14
ag2058
aS'{}'
p2486
aS"['<MLIL_UNIMPL>']"
p2487
aS"['<MLIL_UNIMPL>']"
p2488
aS'unimplemented'
p2489
aS'unimplemented'
p2490
aS'None'
p2491
aS'x87#11[0 + top#6] = fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10) @ x87#10'
p2492
ag14
ag2058
aS'{}'
p2493
aS"['<MLIL_UNIMPL>']"
p2494
aS"['<MLIL_UNIMPL>']"
p2495
aS'unimplemented'
p2496
aS'unimplemented'
p2497
aS'None'
p2498
aS'x87#12[1 + top#6] = x87#11[1 + top#6] f/ x87#11[0 + top#6] @ x87#11'
p2499
ag14
ag2058
aS'{}'
p2500
aS"['<MLIL_UNIMPL>']"
p2501
aS"['<MLIL_UNIMPL>']"
p2502
aS'unimplemented'
p2503
aS'unimplemented'
p2504
aS'None'
p2505
aS'__free_slot(x87#13[0 + top#6]) @ x87#12'
p2506
ag14
ag2058
aS'{}'
p2507
aS"['<MLIL_UNIMPL>']"
p2508
aS"['<MLIL_UNIMPL>']"
p2509
aS'unimplemented'
p2510
aS'unimplemented'
p2511
aS'None'
p2512
aS'[esp#1].d = int.d(x87#13[0 + top#7]) @ mem#3 -> mem#4'
p2513
ag14
ag2058
aS'{}'
p2514
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_UNIMPL>', 'var_4_3']"
p2515
aS"['<MLIL_FLOAT_TO_INT 4>', '<MLIL_SET_VAR 4>', '<MLIL_UNIMPL>', 'var_4_3']"
p2516
aS'var_4_3#4 = int.d(unimplemented)'
p2517
aS'var_4_3 = int.d(unimplemented)'
p2518
aS'None'
p2519
aS'__free_slot(x87#14[0 + top#7]) @ x87#13'
p2520
ag14
ag2058
aS'{}'
p2521
aS"['<MLIL_UNIMPL>']"
p2522
aS"['<MLIL_UNIMPL>']"
p2523
aS'unimplemented'
p2524
aS'unimplemented'
p2525
aS'None'
p2526
aS'eax#4 = [esp#1].d @ mem#4'
p2527
ag14
ag2058
aS'{}'
p2528
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'var_4_3']"
p2529
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'var_4_3']"
p2530
aS'eax_1#4 = var_4_3#4'
p2531
aS'eax_1 = var_4_3'
p2532
aS'None'
p2533
aS'<return> jump(temp0#1.d)'
p2534
ag14
ag2058
aS'{}'
p2535
aS"['<MLIL_RET>', '[<il: eax_1>]']"
p2536
aS"['<MLIL_RET>', '[<il: eax_1>]']"
p2537
aS'return eax_1#4'
p2538
aS'return eax_1'
p2539
asS'test_function_symbol_names'
p2540
(lp2541
S'_main SymbolType.DataSymbol 0x1ef3L'
p2542
aS'test1 SymbolType.DataSymbol 0x1f0dL'
p2543
aS'a SymbolType.DataSymbol 0x1f3cL'
p2544
aS'b SymbolType.DataSymbol 0x1f3fL'
p2545
aS'c SymbolType.DataSymbol 0x1f48L'
p2546
aS'test2 SymbolType.DataSymbol 0x1f55L'
p2547
aS'd SymbolType.DataSymbol 0x1f94L'
p2548
aS'test3 SymbolType.DataSymbol 0x1fb3L'
p2549
asS'test_BinaryView'
p2550
(lp2551
S'void*'
p2552
aS'[<segment: 0x1000-0x2000, r-x>, <segment: 0x2000-0x3000, r-->]'
p2553
aS"{'__text': <section __text: 0x1ef3-0x2000>}"
p2554
aS'[<0x1000-0x3000>]'
p2555
aS'{}'
p2556
aS'8167'
p2557
aS'8008'
p2558
aS'8138'
p2559
aS'8044'
p2560
aS'7949'
p2561
aS'7923'
p2562
aS'8084'
p2563
aS'8021'
p2564
aS'8059'
p2565
aS'7996'
p2566
aS'8115'
p2567
aS'7999'
p2568
aS'<func: x86@0x1ef3>'
p2569
aS'<func: x86@0x1ef3>'
p2570
aS'<func: x86@0x1f0d>'
p2571
aS'<func: x86@0x1f3c>'
p2572
aS'<func: x86@0x1f3f>'
p2573
aS'<func: x86@0x1f48>'
p2574
aS'<func: x86@0x1f55>'
p2575
aS'<func: x86@0x1f94>'
p2576
aS'<func: x86@0x1fb3>'
p2577
aS'0x1ef3L'
p2578
aS'0x1000L'
p2579
aS'length: 0x2000'
p2580
asS'test_available_types'
p2581
(lp2582
S'Raw'
p2583
aS'Mach-O'
p2584
asS'test_function_basic_blocks'
p2585
(lp2586
S'0x1ef3L 0x1f0dL True'
p2587
aS'0x1f0dL 0x1f3cL True'
p2588
aS'0x1f3cL 0x1f3fL True'
p2589
aS'0x1f3fL 0x1f48L True'
p2590
aS'0x1f48L 0x1f55L True'
p2591
aS'0x1f55L 0x1f65L False'
p2592
aS'0x1f6cL 0x1f7bL False'
p2593
aS'0x1f65L 0x1f6cL False'
p2594
aS'0x1f7bL 0x1f94L True'
p2595
aS'0x1f94L 0x1fb3L True'
p2596
aS'0x1fb3L 0x1fc3L False'
p2597
aS'0x1fcaL 0x1fe7L False'
p2598
aS'0x1fc3L 0x1fcaL False'
p2599
aS'0x1fe7L 0x2000L True'
p2600
asS'test_function_med_il_basic_blocks'
p2601
(lp2602
S'0x0L 0x4L 0'
p2603
aS'0x0L 0xeL 0'
p2604
aS'0x0L 0x2L 0'
p2605
aS'0x0L 0x3L 0'
p2606
aS'0x0L 0x4L 0'
p2607
aS'0x0L 0x1L 2'
p2608
aS'0x1L 0x5L 1'
p2609
aS'0x5L 0x7L 1'
p2610
aS'0x7L 0xeL 0'
p2611
aS'0x0L 0x8L 0'
p2612
aS'0x0L 0x1L 2'
p2613
aS'0x1L 0x9L 1'
p2614
aS'0x9L 0xbL 1'
p2615
aS'0xbL 0x14L 0'
p2616
asS'test_symbols'
p2617
(lp2618
S'_main'
p2619
aS'a'
p2620
aS'b'
p2621
aS'c'
p2622
aS'd'
p2623
aS'test1'
p2624
aS'test2'
p2625
aS'test2.done'
p2626
aS'test2.one'
p2627
aS'test3'
p2628
aS'test3.done'
p2629
aS'test3.one'
p2630
asS'test_low_il_instructions'
p2631
(lp2632
S'0x1f0d()'
p2633
aS'eax = call(0x1f0d, stack = &arg_0)'
p2634
ag14
ag2058
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 7949L, 0L, {}]'
p2635
aS'[7949L, <LLIL_CONST_PTR 4>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p2636
aS'eax#1, mem#1 = call(0x1f0d, stack = esp#0 @ mem#0)'
p2637
aS'call(0x1f0d)'
p2638
aS'None'
p2639
aS'var_4 = 1'
p2640
ag14
ag2058
aS'[<LLIL_PUSH 4>, <LLIL_CONST 4>, 1L]'
p2641
aS'[1L, <LLIL_CONST 4>, <LLIL_PUSH 4>]'
p2642
aS'[esp#0 - 4].d = 1 @ mem#1 -> mem#2'
p2643
aS'push(1)'
p2644
aS'0x1f55(1)'
p2645
aS'eax = call(0x1f55, stack = &var_4)'
p2646
ag14
ag2058
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8021L, 4L, {}]'
p2647
aS'[8021L, <LLIL_CONST_PTR 4>, 4L, {}, <LLIL_CALL_STACK_ADJUST>]'
p2648
aS'eax#2, mem#3 = call(0x1f55, stack = esp#1 @ mem#2)'
p2649
aS'call(0x1f55), esp += 4'
p2650
aS'None'
p2651
aS'var_4 = 1'
p2652
ag14
ag2058
aS'[<LLIL_PUSH 4>, <LLIL_CONST 4>, 1L]'
p2653
aS'[1L, <LLIL_CONST 4>, <LLIL_PUSH 4>]'
p2654
aS'[esp#2 - 4].d = 1 @ mem#3 -> mem#4'
p2655
aS'push(1)'
p2656
aS'eax = 0x1fb3(1)'
p2657
aS'eax = call(0x1fb3, stack = &var_4)'
p2658
ag14
ag2058
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8115L, 4L, {}]'
p2659
aS'[8115L, <LLIL_CONST_PTR 4>, 4L, {}, <LLIL_CALL_STACK_ADJUST>]'
p2660
aS'eax#3, mem#5 = call(0x1fb3, stack = esp#3 @ mem#4)'
p2661
aS'call(0x1fb3), esp += 4'
p2662
aS'None'
p2663
aS'return '
p2664
ag14
ag2058
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p2665
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p2666
aS'<return> jump([esp#4].d @ mem#5)'
p2667
aS'<return> jump(pop)'
p2668
aS'None'
p2669
aS'esp = &var_4'
p2670
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_SUB 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p2671
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p2672
aS'esp#1 = esp#0 - 4'
p2673
aS'esp = esp - 4'
p2674
aS'x87_r7 = float.t(1)'
p2675
aS'x87_r7 = float.t(1)'
p2676
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_INT_TO_FLOAT 10>, <LLIL_CONST 4>, 1L]'
p2677
aS'[x87, 1L, <LLIL_CONST 4>, <LLIL_INT_TO_FLOAT 10>, <LLIL_REG_STACK_PUSH 10>]'
p2678
aS'x87#1[0 + top#1] = float.t(1) @ x87#0'
p2679
aS'x87.push{x87c1z}(float.t(1))'
p2680
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2681
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2682
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_FADD 10>, <LLIL_FLOAT_CONV 10>, <LLIL_FLOAT_CONST 8>, 3.1415926534682512, <LLIL_FLOAT_CONV 10>, <LLIL_FLOAT_CONST 8>, 1.2154201012607932e-10]'
p2683
aS'[x87, 3.1415926534682512, <LLIL_FLOAT_CONST 8>, <LLIL_FLOAT_CONV 10>, 1.2154201012607932e-10, <LLIL_FLOAT_CONST 8>, <LLIL_FLOAT_CONV 10>, <LLIL_FADD 10>, <LLIL_REG_STACK_PUSH 10>]'
p2684
aS'x87#2[0 + top#2] = fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10) @ x87#1'
p2685
aS'x87.push{x87c1z}(fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10))'
p2686
aS'st0 = 0x1f3c(x87_r6, x87_r7)'
p2687
aS'st0 = call(0x1f3c, x87_r6, x87_r7, stack = &var_4)'
p2688
ag14
ag2058
aS"[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 7996L, 0L, {'x87': 1L}]"
p2689
aS"[7996L, <LLIL_CONST_PTR 4>, 0L, {'x87': 1L}, <LLIL_CALL_STACK_ADJUST>]"
p2690
aS'st0#1, mem#1 = call(0x1f3c, stack = esp#1 @ mem#0, params = x87#2[0 + top#2], x87#2[1 + top#2])'
p2691
aS'call(0x1f3c), top += 1'
p2692
aS'var_4 = int.d(x87_r7_1)'
p2693
aS'var_4 = int.d(x87_r7)'
p2694
ag14
ag2058
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_FLOAT_TO_INT 4>, <LLIL_REG_STACK_POP 10>, x87]'
p2695
aS'[esp, <LLIL_REG 4>, x87, <LLIL_REG_STACK_POP 10>, <LLIL_FLOAT_TO_INT 4>, <LLIL_STORE 4>]'
p2696
aS'[esp#1].d = int.d(x87#3[0 + top#3]) @ mem#1 -> mem#2'
p2697
aS'[esp].d = int.d(x87.pop)'
p2698
aS'eax = var_4'
p2699
aS'eax = var_4'
p2700
ag14
ag2058
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_REG 4>, esp]'
p2701
aS'[eax, esp, <LLIL_REG 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p2702
aS'eax#1 = [esp#1].d @ mem#2'
p2703
aS'eax = [esp].d'
p2704
aS'var_8 = eax'
p2705
aS'var_8 = eax'
p2706
ag14
ag2058
aS'[<LLIL_PUSH 4>, <LLIL_REG 4>, eax]'
p2707
aS'[eax, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p2708
aS'[esp#1 - 4].d = eax#1 @ mem#2 -> mem#3'
p2709
aS'push(eax)'
p2710
aS'st0_1 = 0x1f3f(var_8)'
p2711
aS'st0 = call(0x1f3f, stack = &var_8)'
p2712
ag14
ag2058
aS"[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 7999L, 4L, {'x87': -1L}]"
p2713
aS"[7999L, <LLIL_CONST_PTR 4>, 4L, {'x87': -1L}, <LLIL_CALL_STACK_ADJUST>]"
p2714
aS'st0#2, mem#4 = call(0x1f3f, stack = esp#2 @ mem#3)'
p2715
aS'call(0x1f3f), esp += 4, top -= 1'
p2716
aS'var_4_1 = int.d(x87_r7_2)'
p2717
aS'var_4 = int.d(x87_r7)'
p2718
ag14
ag2058
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_FLOAT_TO_INT 4>, <LLIL_REG_STACK_POP 10>, x87]'
p2719
aS'[esp, <LLIL_REG 4>, x87, <LLIL_REG_STACK_POP 10>, <LLIL_FLOAT_TO_INT 4>, <LLIL_STORE 4>]'
p2720
aS'[esp#3].d = int.d(x87#5[0 + top#5]) @ mem#4 -> mem#5'
p2721
aS'[esp].d = int.d(x87.pop)'
p2722
aS'x87_r7_3 = float.t(0)'
p2723
aS'x87_r7 = float.t(0)'
p2724
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_INT_TO_FLOAT 10>, <LLIL_CONST 4>, 0L]'
p2725
aS'[x87, 0L, <LLIL_CONST 4>, <LLIL_INT_TO_FLOAT 10>, <LLIL_REG_STACK_PUSH 10>]'
p2726
aS'x87#7[0 + top#7] = float.t(0) @ x87#6'
p2727
aS'x87.push{x87c1z}(float.t(0))'
p2728
aS'x87_r6_1 = float.t(var_4_1)'
p2729
aS'x87_r6 = float.t(var_4)'
p2730
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_INT_TO_FLOAT 10>, <LLIL_LOAD 4>, <LLIL_REG 4>, esp]'
p2731
aS'[x87, esp, <LLIL_REG 4>, <LLIL_LOAD 4>, <LLIL_INT_TO_FLOAT 10>, <LLIL_REG_STACK_PUSH 10>]'
p2732
aS'x87#8[0 + top#8] = float.t([esp#3].d @ mem#5) @ x87#7'
p2733
aS'x87.push{x87c1z}(float.t([esp].d))'
p2734
aS'eax_1 = 0x1f48(x87_r6_1, x87_r7_3)'
p2735
aS'eax = call(0x1f48, x87_r6, x87_r7, stack = &var_4)'
p2736
ag14
ag2058
aS"[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8008L, 0L, {'x87': 2L}]"
p2737
aS"[8008L, <LLIL_CONST_PTR 4>, 0L, {'x87': 2L}, <LLIL_CALL_STACK_ADJUST>]"
p2738
aS'eax#2, mem#6 = call(0x1f48, stack = esp#3 @ mem#5, params = x87#8[0 + top#8], x87#8[1 + top#8])'
p2739
aS'call(0x1f48), top += 2'
p2740
aS'None'
p2741
aS'esp = &arg_0'
p2742
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p2743
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p2744
aS'esp#4 = esp#3 + 4'
p2745
aS'esp = esp + 4'
p2746
aS'None'
p2747
aS'return '
p2748
ag14
ag2058
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p2749
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p2750
aS'<return> jump([esp#4].d @ mem#6)'
p2751
aS'<return> jump(pop)'
p2752
aS'x87_r1 = arg2 + arg1'
p2753
aS'arg2 = arg2 + arg1'
p2754
ag14
ag2058
aS'[<LLIL_SET_REG 10>, st1, <LLIL_FADD 10>, <LLIL_REG 10>, st1, <LLIL_REG 10>, st0]'
p2755
aS'[st1, st1, <LLIL_REG 10>, st0, <LLIL_REG 10>, <LLIL_FADD 10>, <LLIL_SET_REG 10>]'
p2756
aS'x87#1[1 + top#0] = x87#0[1 + top#0] f+ x87#0[0 + top#0] @ x87#0'
p2757
aS'st1 = st1 f+ st0'
p2758
aS'None'
p2759
aS'__free_slot(arg1)'
p2760
ag14
ag2058
aS'[<LLIL_REG_STACK_FREE_REG>, st0]'
p2761
aS'[st0, <LLIL_REG_STACK_FREE_REG>]'
p2762
aS'__free_slot(x87#2[0 + top#0]) @ x87#1'
p2763
aS'__free_slot(st0)'
p2764
aS'None'
p2765
aS'top = 1'
p2766
ag14
ag2058
aS'[<LLIL_SET_REG 2>, top, <LLIL_ADD 2>, <LLIL_REG 2>, top, <LLIL_CONST 2>, 1L]'
p2767
aS'[top, top, <LLIL_REG 2>, 1L, <LLIL_CONST 2>, <LLIL_ADD 2>, <LLIL_SET_REG 2>]'
p2768
aS'top#1 = top#0 + 1'
p2769
aS'top = top + 1'
p2770
aS'None'
p2771
aS'return '
p2772
ag14
ag2058
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p2773
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p2774
aS'<return> jump([esp#0].d @ mem#0)'
p2775
aS'<return> jump(pop)'
p2776
aS'x87_r7_1 = float.t(testautovar)'
p2777
aS'x87_r7 = float.t(testautovar)'
p2778
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_INT_TO_FLOAT 10>, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p2779
aS'[x87, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_INT_TO_FLOAT 10>, <LLIL_REG_STACK_PUSH 10>]'
p2780
aS'x87#1[0 + top#1] = float.t([esp#0 + 4].d @ mem#0) @ x87#0'
p2781
aS'x87.push{x87c1z}(float.t([esp + 4].d))'
p2782
aS'x87_r7 = sqrt(x87_r7_1)'
p2783
aS'x87_r7 = sqrt(x87_r7)'
p2784
ag14
ag2058
aS'[<LLIL_SET_REG 10>, st0, <LLIL_FSQRT 10>, <LLIL_REG 10>, st0]'
p2785
aS'[st0, st0, <LLIL_REG 10>, <LLIL_FSQRT 10>, <LLIL_SET_REG 10>]'
p2786
aS'x87#2[0 + top#1] = sqrt(x87#1[0 + top#1]) @ x87#1'
p2787
aS'st0 = sqrt(st0)'
p2788
aS'None'
p2789
aS'temp0 = arg_0'
p2790
ag14
ag2058
aS'[<LLIL_SET_REG 4>, temp0, <LLIL_POP 4>]'
p2791
aS'[temp0, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p2792
aS'temp0#1.d = [esp#0].d @ mem#0'
p2793
aS'temp0.d = pop'
p2794
aS'None'
p2795
aS'esp = &arg_8'
p2796
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p2797
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p2798
aS'esp#2 = esp#1 + 4'
p2799
aS'esp = esp + 4'
p2800
aS'None'
p2801
aS'return '
p2802
ag14
ag2058
aS'[<LLIL_RET>, <LLIL_REG 4>, temp0]'
p2803
aS'[temp0, <LLIL_REG 4>, <LLIL_RET>]'
p2804
aS'<return> jump(temp0#1.d)'
p2805
aS'<return> jump(temp0.d)'
p2806
aS'None'
p2807
aS'esp = &var_4'
p2808
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_SUB 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p2809
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p2810
aS'esp#1 = esp#0 - 4'
p2811
aS'esp = esp - 4'
p2812
aS'x87_r1 = arg2 - arg1'
p2813
aS'arg2 = arg2 - arg1'
p2814
ag14
ag2058
aS'[<LLIL_SET_REG 10>, st1, <LLIL_FSUB 10>, <LLIL_REG 10>, st1, <LLIL_REG 10>, st0]'
p2815
aS'[st1, st1, <LLIL_REG 10>, st0, <LLIL_REG 10>, <LLIL_FSUB 10>, <LLIL_SET_REG 10>]'
p2816
aS'x87#1[1 + top#0] = x87#0[1 + top#0] f- x87#0[0 + top#0] @ x87#0'
p2817
aS'st1 = st1 f- st0'
p2818
aS'None'
p2819
aS'__free_slot(arg1)'
p2820
ag14
ag2058
aS'[<LLIL_REG_STACK_FREE_REG>, st0]'
p2821
aS'[st0, <LLIL_REG_STACK_FREE_REG>]'
p2822
aS'__free_slot(x87#2[0 + top#0]) @ x87#1'
p2823
aS'__free_slot(st0)'
p2824
aS'None'
p2825
aS'top = 1'
p2826
ag14
ag2058
aS'[<LLIL_SET_REG 2>, top, <LLIL_ADD 2>, <LLIL_REG 2>, top, <LLIL_CONST 2>, 1L]'
p2827
aS'[top, top, <LLIL_REG 2>, 1L, <LLIL_CONST 2>, <LLIL_ADD 2>, <LLIL_SET_REG 2>]'
p2828
aS'top#1 = top#0 + 1'
p2829
aS'top = top + 1'
p2830
aS'var_4 = int.d(x87_r1)'
p2831
aS'var_4 = int.d(arg2)'
p2832
ag14
ag2058
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_FLOAT_TO_INT 4>, <LLIL_REG_STACK_POP 10>, x87]'
p2833
aS'[esp, <LLIL_REG 4>, x87, <LLIL_REG_STACK_POP 10>, <LLIL_FLOAT_TO_INT 4>, <LLIL_STORE 4>]'
p2834
aS'[esp#1].d = int.d(x87#2[0 + top#1]) @ mem#0 -> mem#1'
p2835
aS'[esp].d = int.d(x87.pop)'
p2836
aS'eax = var_4'
p2837
aS'eax = var_4'
p2838
ag14
ag2058
aS'[<LLIL_SET_REG 4>, eax, <LLIL_POP 4>]'
p2839
aS'[eax, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p2840
aS'eax#1 = [esp#1].d @ mem#1'
p2841
aS'eax = pop'
p2842
aS'None'
p2843
aS'return '
p2844
ag14
ag2058
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p2845
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p2846
aS'<return> jump([esp#2].d @ mem#1)'
p2847
aS'<return> jump(pop)'
p2848
aS'None'
p2849
aS'esp = &var_4'
p2850
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_SUB 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p2851
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p2852
aS'esp#1 = esp#0 - 4'
p2853
aS'esp = esp - 4'
p2854
aS'None'
p2855
aS'if (testautovar != 1) then 2 @ 0x1f6c else 8 @ 0x1f65'
p2856
ag14
ag2058
aS'[<LLIL_IF>, <LLIL_CMP_NE 4>, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 8L, <LLIL_CONST 4>, 1L, 2L, 6L]'
p2857
aS'[esp, <LLIL_REG 4>, 8L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, 1L, <LLIL_CONST 4>, <LLIL_CMP_NE 4>, 2L, 6L, <LLIL_IF>]'
p2858
aS'if ([esp#1 + 8].d @ mem#0 != 1) then 2 @ 0x1f6c else 8 @ 0x1f65'
p2859
aS'if ([esp + 8].d != 1) then 2 @ 0x1f6c else 6 @ 0x1f65'
p2860
aS'eax_1 = testautovar'
p2861
aS'eax = testautovar'
p2862
ag14
ag2058
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 8L]'
p2863
aS'[eax, esp, <LLIL_REG 4>, 8L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p2864
aS'eax#1 = [esp#1 + 8].d @ mem#0'
p2865
aS'eax = [esp + 8].d'
p2866
aS'var_8_1 = eax_1'
p2867
aS'var_8 = eax'
p2868
ag14
ag2058
aS'[<LLIL_PUSH 4>, <LLIL_REG 4>, eax]'
p2869
aS'[eax, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p2870
aS'[esp#1 - 4].d = eax#1 @ mem#0 -> mem#1'
p2871
aS'push(eax)'
p2872
aS'eax = 0x1f94(var_8_1)'
p2873
aS'eax = call(0x1f94, stack = &var_8)'
p2874
ag14
ag2058
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8084L, 4L, {}]'
p2875
aS'[8084L, <LLIL_CONST_PTR 4>, 4L, {}, <LLIL_CALL_STACK_ADJUST>]'
p2876
aS'eax#2, mem#2 = call(0x1f94, stack = esp#2 @ mem#1)'
p2877
aS'call(0x1f94), esp += 4'
p2878
aS'None'
p2879
aS'goto 10 @ 0x1f7b'
p2880
ag14
ag2058
aS'[<LLIL_GOTO>, 8L]'
p2881
aS'[8L, <LLIL_GOTO>]'
p2882
aS'goto 10 @ 0x1f7b'
p2883
aS'goto 8 @ 0x1f7b'
p2884
aS'eax = 0'
p2885
aS'eax = 0'
p2886
ag14
ag2058
aS'[<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 0L]'
p2887
aS'[eax, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p2888
aS'eax#3 = 0'
p2889
aS'eax = 0'
p2890
aS'None'
p2891
aS'goto 10 @ 0x1f7b'
p2892
ag14
ag2058
aS'[<LLIL_GOTO>, 8L]'
p2893
aS'[8L, <LLIL_GOTO>]'
p2894
aS'goto 10 @ 0x1f7b'
p2895
aS'goto 8 @ 0x1f7b'
p2896
aS'var_4 = eax'
p2897
aS'var_4 = eax'
p2898
ag14
ag2058
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_REG 4>, eax]'
p2899
aS'[esp, <LLIL_REG 4>, eax, <LLIL_REG 4>, <LLIL_STORE 4>]'
p2900
aS'[esp#4].d = eax#4 @ mem#3 -> mem#4'
p2901
aS'[esp].d = eax'
p2902
aS'x87_r7 = float.t(var_4)'
p2903
aS'x87_r7 = float.t(var_4)'
p2904
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_INT_TO_FLOAT 10>, <LLIL_LOAD 4>, <LLIL_REG 4>, esp]'
p2905
aS'[x87, esp, <LLIL_REG 4>, <LLIL_LOAD 4>, <LLIL_INT_TO_FLOAT 10>, <LLIL_REG_STACK_PUSH 10>]'
p2906
aS'x87#1[0 + top#1] = float.t([esp#4].d @ mem#4) @ x87#0'
p2907
aS'x87.push{x87c1z}(float.t([esp].d))'
p2908
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2909
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2910
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_FADD 10>, <LLIL_FLOAT_CONV 10>, <LLIL_FLOAT_CONST 8>, 3.1415926534682512, <LLIL_FLOAT_CONV 10>, <LLIL_FLOAT_CONST 8>, 1.2154201012607932e-10]'
p2911
aS'[x87, 3.1415926534682512, <LLIL_FLOAT_CONST 8>, <LLIL_FLOAT_CONV 10>, 1.2154201012607932e-10, <LLIL_FLOAT_CONST 8>, <LLIL_FLOAT_CONV 10>, <LLIL_FADD 10>, <LLIL_REG_STACK_PUSH 10>]'
p2912
aS'x87#2[0 + top#2] = fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10) @ x87#1'
p2913
aS'x87.push{x87c1z}(fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10))'
p2914
aS'x87_r7_1 = x87_r7 / x87_r6'
p2915
aS'x87_r7 = x87_r7 f/ x87_r6'
p2916
ag14
ag2058
aS'[<LLIL_SET_REG 10>, st1, <LLIL_FDIV 10>, <LLIL_REG 10>, st1, <LLIL_REG 10>, st0]'
p2917
aS'[st1, st1, <LLIL_REG 10>, st0, <LLIL_REG 10>, <LLIL_FDIV 10>, <LLIL_SET_REG 10>]'
p2918
aS'x87#3[1 + top#2] = x87#2[1 + top#2] f/ x87#2[0 + top#2] @ x87#2'
p2919
aS'st1 = st1 f/ st0'
p2920
aS'None'
p2921
aS'__free_slot(x87_r6)'
p2922
ag14
ag2058
aS'[<LLIL_REG_STACK_FREE_REG>, st0]'
p2923
aS'[st0, <LLIL_REG_STACK_FREE_REG>]'
p2924
aS'__free_slot(x87#4[0 + top#2]) @ x87#3'
p2925
aS'__free_slot(st0)'
p2926
aS'None'
p2927
aS'top = 0xffff'
p2928
ag14
ag2058
aS'[<LLIL_SET_REG 2>, top, <LLIL_ADD 2>, <LLIL_REG 2>, top, <LLIL_CONST 2>, 1L]'
p2929
aS'[top, top, <LLIL_REG 2>, 1L, <LLIL_CONST 2>, <LLIL_ADD 2>, <LLIL_SET_REG 2>]'
p2930
aS'top#3 = top#2 + 1'
p2931
aS'top = top + 1'
p2932
aS'var_4_1 = int.d(x87_r7_1)'
p2933
aS'var_4 = int.d(x87_r7)'
p2934
ag14
ag2058
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_FLOAT_TO_INT 4>, <LLIL_REG_STACK_POP 10>, x87]'
p2935
aS'[esp, <LLIL_REG 4>, x87, <LLIL_REG_STACK_POP 10>, <LLIL_FLOAT_TO_INT 4>, <LLIL_STORE 4>]'
p2936
aS'[esp#4].d = int.d(x87#4[0 + top#3]) @ mem#4 -> mem#5'
p2937
aS'[esp].d = int.d(x87.pop)'
p2938
aS'eax_2 = var_4_1'
p2939
aS'eax = var_4'
p2940
ag14
ag2058
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_REG 4>, esp]'
p2941
aS'[eax, esp, <LLIL_REG 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p2942
aS'eax#5 = [esp#4].d @ mem#5'
p2943
aS'eax = [esp].d'
p2944
aS'None'
p2945
aS'esp = &arg_0'
p2946
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p2947
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p2948
aS'esp#5 = esp#4 + 4'
p2949
aS'esp = esp + 4'
p2950
aS'None'
p2951
aS'temp0 = arg_0'
p2952
ag14
ag2058
aS'[<LLIL_SET_REG 4>, temp0, <LLIL_POP 4>]'
p2953
aS'[temp0, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p2954
aS'temp0#1.d = [esp#5].d @ mem#5'
p2955
aS'temp0.d = pop'
p2956
aS'None'
p2957
aS'esp = &arg_8'
p2958
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p2959
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p2960
aS'esp#7 = esp#6 + 4'
p2961
aS'esp = esp + 4'
p2962
aS'None'
p2963
aS'return '
p2964
ag14
ag2058
aS'[<LLIL_RET>, <LLIL_REG 4>, temp0]'
p2965
aS'[temp0, <LLIL_REG 4>, <LLIL_RET>]'
p2966
aS'<return> jump(temp0#1.d)'
p2967
aS'<return> jump(temp0.d)'
p2968
aS'x87_r7 = float.t(testautovar)'
p2969
aS'x87_r7 = float.t(testautovar)'
p2970
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_INT_TO_FLOAT 10>, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p2971
aS'[x87, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_INT_TO_FLOAT 10>, <LLIL_REG_STACK_PUSH 10>]'
p2972
aS'x87#1[0 + top#1] = float.t([esp#0 + 4].d @ mem#0) @ x87#0'
p2973
aS'x87.push{x87c1z}(float.t([esp + 4].d))'
p2974
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2975
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p2976
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_FADD 10>, <LLIL_FLOAT_CONV 10>, <LLIL_FLOAT_CONST 8>, 3.1415926534682512, <LLIL_FLOAT_CONV 10>, <LLIL_FLOAT_CONST 8>, 1.2154201012607932e-10]'
p2977
aS'[x87, 3.1415926534682512, <LLIL_FLOAT_CONST 8>, <LLIL_FLOAT_CONV 10>, 1.2154201012607932e-10, <LLIL_FLOAT_CONST 8>, <LLIL_FLOAT_CONV 10>, <LLIL_FADD 10>, <LLIL_REG_STACK_PUSH 10>]'
p2978
aS'x87#2[0 + top#2] = fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10) @ x87#1'
p2979
aS'x87.push{x87c1z}(fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10))'
p2980
aS'x87_r6_1 = x87_r6 * x87_r7'
p2981
aS'x87_r6 = x87_r6 f* x87_r7'
p2982
ag14
ag2058
aS'[<LLIL_SET_REG 10>, st0, <LLIL_FMUL 10>, <LLIL_REG 10>, st0, <LLIL_REG 10>, st1]'
p2983
aS'[st0, st0, <LLIL_REG 10>, st1, <LLIL_REG 10>, <LLIL_FMUL 10>, <LLIL_SET_REG 10>]'
p2984
aS'x87#3[0 + top#2] = x87#2[0 + top#2] f* x87#2[1 + top#2] @ x87#2'
p2985
aS'st0 = st0 f* st1'
p2986
aS'x87_r5 = float.t(1)'
p2987
aS'x87_r5 = float.t(1)'
p2988
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_INT_TO_FLOAT 10>, <LLIL_CONST 4>, 1L]'
p2989
aS'[x87, 1L, <LLIL_CONST 4>, <LLIL_INT_TO_FLOAT 10>, <LLIL_REG_STACK_PUSH 10>]'
p2990
aS'x87#4[0 + top#3] = float.t(1) @ x87#3'
p2991
aS'x87.push{x87c1z}(float.t(1))'
p2992
aS'x87_r5_1 = x87_r5 - x87_r6_1'
p2993
aS'x87_r5 = x87_r5 f- x87_r6'
p2994
ag14
ag2058
aS'[<LLIL_SET_REG 10>, st0, <LLIL_FSUB 10>, <LLIL_REG 10>, st0, <LLIL_REG 10>, st1]'
p2995
aS'[st0, st0, <LLIL_REG 10>, st1, <LLIL_REG 10>, <LLIL_FSUB 10>, <LLIL_SET_REG 10>]'
p2996
aS'x87#5[0 + top#3] = x87#4[0 + top#3] f- x87#4[1 + top#3] @ x87#4'
p2997
aS'st0 = st0 f- st1'
p2998
aS'None'
p2999
aS'esp = &var_4'
p3000
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_SUB 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p3001
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p3002
aS'esp#1 = esp#0 - 4'
p3003
aS'esp = esp - 4'
p3004
aS'var_4 = int.d(x87_r5_1)'
p3005
aS'var_4 = int.d(x87_r5)'
p3006
ag14
ag2058
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_FLOAT_TO_INT 4>, <LLIL_REG 10>, st0]'
p3007
aS'[esp, <LLIL_REG 4>, st0, <LLIL_REG 10>, <LLIL_FLOAT_TO_INT 4>, <LLIL_STORE 4>]'
p3008
aS'[esp#1].d = int.d(x87#5[0 + top#3]) @ mem#0 -> mem#1'
p3009
aS'[esp].d = int.d(st0)'
p3010
aS'None'
p3011
aS'__free_slot(x87_r7)'
p3012
ag14
ag2058
aS'[<LLIL_REG_STACK_FREE_REG>, st2]'
p3013
aS'[st2, <LLIL_REG_STACK_FREE_REG>]'
p3014
aS'__free_slot(x87#6[2 + top#3]) @ x87#5'
p3015
aS'__free_slot(st2)'
p3016
aS'None'
p3017
aS'__free_slot(x87_r6)'
p3018
ag14
ag2058
aS'[<LLIL_REG_STACK_FREE_REG>, st1]'
p3019
aS'[st1, <LLIL_REG_STACK_FREE_REG>]'
p3020
aS'__free_slot(x87#7[1 + top#3]) @ x87#6'
p3021
aS'__free_slot(st1)'
p3022
aS'None'
p3023
aS'__free_slot(x87_r5)'
p3024
ag14
ag2058
aS'[<LLIL_REG_STACK_FREE_REG>, st0]'
p3025
aS'[st0, <LLIL_REG_STACK_FREE_REG>]'
p3026
aS'__free_slot(x87#8[0 + top#3]) @ x87#7'
p3027
aS'__free_slot(st0)'
p3028
aS'eax = var_4'
p3029
aS'eax = var_4'
p3030
ag14
ag2058
aS'[<LLIL_SET_REG 4>, eax, <LLIL_POP 4>]'
p3031
aS'[eax, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p3032
aS'eax#1 = [esp#1].d @ mem#1'
p3033
aS'eax = pop'
p3034
aS'None'
p3035
aS'temp0 = arg_0'
p3036
ag14
ag2058
aS'[<LLIL_SET_REG 4>, temp0, <LLIL_POP 4>]'
p3037
aS'[temp0, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p3038
aS'temp0#1.d = [esp#2].d @ mem#1'
p3039
aS'temp0.d = pop'
p3040
aS'None'
p3041
aS'esp = &arg_8'
p3042
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p3043
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p3044
aS'esp#4 = esp#3 + 4'
p3045
aS'esp = esp + 4'
p3046
aS'None'
p3047
aS'return '
p3048
ag14
ag2058
aS'[<LLIL_RET>, <LLIL_REG 4>, temp0]'
p3049
aS'[temp0, <LLIL_REG 4>, <LLIL_RET>]'
p3050
aS'<return> jump(temp0#1.d)'
p3051
aS'<return> jump(temp0.d)'
p3052
aS'None'
p3053
aS'esp = &var_4'
p3054
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_SUB 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p3055
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p3056
aS'esp#1 = esp#0 - 4'
p3057
aS'esp = esp - 4'
p3058
aS'None'
p3059
aS'if (testautovar != 1) then 2 @ 0x1fca else 16 @ 0x1fc3'
p3060
ag14
ag2058
aS'[<LLIL_IF>, <LLIL_CMP_NE 4>, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 8L, <LLIL_CONST 4>, 1L, 2L, 13L]'
p3061
aS'[esp, <LLIL_REG 4>, 8L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, 1L, <LLIL_CONST 4>, <LLIL_CMP_NE 4>, 2L, 13L, <LLIL_IF>]'
p3062
aS'if ([esp#1 + 8].d @ mem#0 != 1) then 2 @ 0x1fca else 16 @ 0x1fc3'
p3063
aS'if ([esp + 8].d != 1) then 2 @ 0x1fca else 13 @ 0x1fc3'
p3064
aS'x87_r7_1 = float.t(testautovar)'
p3065
aS'x87_r7 = float.t(testautovar)'
p3066
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_INT_TO_FLOAT 10>, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 8L]'
p3067
aS'[x87, esp, <LLIL_REG 4>, 8L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_INT_TO_FLOAT 10>, <LLIL_REG_STACK_PUSH 10>]'
p3068
aS'x87#1[0 + top#1] = float.t([esp#1 + 8].d @ mem#0) @ x87#0'
p3069
aS'x87.push{x87c1z}(float.t([esp + 8].d))'
p3070
aS'x87_r6_1 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p3071
aS'x87_r6 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)'
p3072
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_FADD 10>, <LLIL_FLOAT_CONV 10>, <LLIL_FLOAT_CONST 8>, 3.1415926534682512, <LLIL_FLOAT_CONV 10>, <LLIL_FLOAT_CONST 8>, 1.2154201012607932e-10]'
p3073
aS'[x87, 3.1415926534682512, <LLIL_FLOAT_CONST 8>, <LLIL_FLOAT_CONV 10>, 1.2154201012607932e-10, <LLIL_FLOAT_CONST 8>, <LLIL_FLOAT_CONV 10>, <LLIL_FADD 10>, <LLIL_REG_STACK_PUSH 10>]'
p3074
aS'x87#2[0 + top#2] = fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10) @ x87#1'
p3075
aS'x87.push{x87c1z}(fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10))'
p3076
aS'x87_r6_2 = x87_r6_1 * x87_r7_1'
p3077
aS'x87_r6 = x87_r6 f* x87_r7'
p3078
ag14
ag2058
aS'[<LLIL_SET_REG 10>, st0, <LLIL_FMUL 10>, <LLIL_REG 10>, st0, <LLIL_REG 10>, st1]'
p3079
aS'[st0, st0, <LLIL_REG 10>, st1, <LLIL_REG 10>, <LLIL_FMUL 10>, <LLIL_SET_REG 10>]'
p3080
aS'x87#3[0 + top#2] = x87#2[0 + top#2] f* x87#2[1 + top#2] @ x87#2'
p3081
aS'st0 = st0 f* st1'
p3082
aS'x87_r5_1 = float.t(1)'
p3083
aS'x87_r5 = float.t(1)'
p3084
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_INT_TO_FLOAT 10>, <LLIL_CONST 4>, 1L]'
p3085
aS'[x87, 1L, <LLIL_CONST 4>, <LLIL_INT_TO_FLOAT 10>, <LLIL_REG_STACK_PUSH 10>]'
p3086
aS'x87#4[0 + top#3] = float.t(1) @ x87#3'
p3087
aS'x87.push{x87c1z}(float.t(1))'
p3088
aS'x87_r5_2 = x87_r5_1 - x87_r6_2'
p3089
aS'x87_r5 = x87_r5 f- x87_r6'
p3090
ag14
ag2058
aS'[<LLIL_SET_REG 10>, st0, <LLIL_FSUB 10>, <LLIL_REG 10>, st0, <LLIL_REG 10>, st1]'
p3091
aS'[st0, st0, <LLIL_REG 10>, st1, <LLIL_REG 10>, <LLIL_FSUB 10>, <LLIL_SET_REG 10>]'
p3092
aS'x87#5[0 + top#3] = x87#4[0 + top#3] f- x87#4[1 + top#3] @ x87#4'
p3093
aS'st0 = st0 f- st1'
p3094
aS'var_4_1 = int.d(x87_r5_2)'
p3095
aS'var_4 = int.d(x87_r5)'
p3096
ag14
ag2058
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_FLOAT_TO_INT 4>, <LLIL_REG 10>, st0]'
p3097
aS'[esp, <LLIL_REG 4>, st0, <LLIL_REG 10>, <LLIL_FLOAT_TO_INT 4>, <LLIL_STORE 4>]'
p3098
aS'[esp#1].d = int.d(x87#5[0 + top#3]) @ mem#0 -> mem#1'
p3099
aS'[esp].d = int.d(st0)'
p3100
aS'None'
p3101
aS'__free_slot(x87_r7)'
p3102
ag14
ag2058
aS'[<LLIL_REG_STACK_FREE_REG>, st2]'
p3103
aS'[st2, <LLIL_REG_STACK_FREE_REG>]'
p3104
aS'__free_slot(x87#6[2 + top#3]) @ x87#5'
p3105
aS'__free_slot(st2)'
p3106
aS'None'
p3107
aS'__free_slot(x87_r6)'
p3108
ag14
ag2058
aS'[<LLIL_REG_STACK_FREE_REG>, st1]'
p3109
aS'[st1, <LLIL_REG_STACK_FREE_REG>]'
p3110
aS'__free_slot(x87#7[1 + top#3]) @ x87#6'
p3111
aS'__free_slot(st1)'
p3112
aS'None'
p3113
aS'__free_slot(x87_r5)'
p3114
ag14
ag2058
aS'[<LLIL_REG_STACK_FREE_REG>, st0]'
p3115
aS'[st0, <LLIL_REG_STACK_FREE_REG>]'
p3116
aS'__free_slot(x87#8[0 + top#3]) @ x87#7'
p3117
aS'__free_slot(st0)'
p3118
aS'eax = var_4_1'
p3119
aS'eax = var_4'
p3120
ag14
ag2058
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_REG 4>, esp]'
p3121
aS'[eax, esp, <LLIL_REG 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p3122
aS'eax#1 = [esp#1].d @ mem#1'
p3123
aS'eax = [esp].d'
p3124
aS'None'
p3125
aS'goto 18 @ 0x1fe7'
p3126
ag14
ag2058
aS'[<LLIL_GOTO>, 15L]'
p3127
aS'[15L, <LLIL_GOTO>]'
p3128
aS'goto 18 @ 0x1fe7'
p3129
aS'goto 15 @ 0x1fe7'
p3130
aS'eax = 0'
p3131
aS'eax = 0'
p3132
ag14
ag2058
aS'[<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 0L]'
p3133
aS'[eax, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p3134
aS'eax#2 = 0'
p3135
aS'eax = 0'
p3136
aS'None'
p3137
aS'goto 18 @ 0x1fe7'
p3138
ag14
ag2058
aS'[<LLIL_GOTO>, 15L]'
p3139
aS'[15L, <LLIL_GOTO>]'
p3140
aS'goto 18 @ 0x1fe7'
p3141
aS'goto 15 @ 0x1fe7'
p3142
aS'var_4_2 = eax'
p3143
aS'var_4 = eax'
p3144
ag14
ag2058
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_REG 4>, eax]'
p3145
aS'[esp, <LLIL_REG 4>, eax, <LLIL_REG 4>, <LLIL_STORE 4>]'
p3146
aS'[esp#1].d = eax#3 @ mem#2 -> mem#3'
p3147
aS'[esp].d = eax'
p3148
aS'None'
p3149
aS'unimplemented'
p3150
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_INT_TO_FLOAT 10>, <LLIL_LOAD 4>, <LLIL_REG 4>, esp]'
p3151
aS'[x87, esp, <LLIL_REG 4>, <LLIL_LOAD 4>, <LLIL_INT_TO_FLOAT 10>, <LLIL_REG_STACK_PUSH 10>]'
p3152
aS'x87#10[0 + top#5] = float.t([esp#1].d @ mem#3) @ x87#9'
p3153
aS'x87.push{x87c1z}(float.t([esp].d))'
p3154
aS'None'
p3155
aS'unimplemented'
p3156
ag14
ag2058
aS'[<LLIL_REG_STACK_PUSH 10>, x87, <LLIL_FADD 10>, <LLIL_FLOAT_CONV 10>, <LLIL_FLOAT_CONST 8>, 3.1415926534682512, <LLIL_FLOAT_CONV 10>, <LLIL_FLOAT_CONST 8>, 1.2154201012607932e-10]'
p3157
aS'[x87, 3.1415926534682512, <LLIL_FLOAT_CONST 8>, <LLIL_FLOAT_CONV 10>, 1.2154201012607932e-10, <LLIL_FLOAT_CONST 8>, <LLIL_FLOAT_CONV 10>, <LLIL_FADD 10>, <LLIL_REG_STACK_PUSH 10>]'
p3158
aS'x87#11[0 + top#6] = fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10) @ x87#10'
p3159
aS'x87.push{x87c1z}(fconvert.t(3.1415926534682512) f+ fconvert.t(1.2154201012607932e-10))'
p3160
aS'None'
p3161
aS'unimplemented'
p3162
ag14
ag2058
aS'[<LLIL_SET_REG 10>, st1, <LLIL_FDIV 10>, <LLIL_REG 10>, st1, <LLIL_REG 10>, st0]'
p3163
aS'[st1, st1, <LLIL_REG 10>, st0, <LLIL_REG 10>, <LLIL_FDIV 10>, <LLIL_SET_REG 10>]'
p3164
aS'x87#12[1 + top#6] = x87#11[1 + top#6] f/ x87#11[0 + top#6] @ x87#11'
p3165
aS'st1 = st1 f/ st0'
p3166
aS'None'
p3167
aS'unimplemented'
p3168
ag14
ag2058
aS'[<LLIL_REG_STACK_FREE_REG>, st0]'
p3169
aS'[st0, <LLIL_REG_STACK_FREE_REG>]'
p3170
aS'__free_slot(x87#13[0 + top#6]) @ x87#12'
p3171
aS'__free_slot(st0)'
p3172
aS'None'
p3173
aS'top = top + 1'
p3174
ag14
ag2058
aS'[<LLIL_SET_REG 2>, top, <LLIL_ADD 2>, <LLIL_REG 2>, top, <LLIL_CONST 2>, 1L]'
p3175
aS'[top, top, <LLIL_REG 2>, 1L, <LLIL_CONST 2>, <LLIL_ADD 2>, <LLIL_SET_REG 2>]'
p3176
aS'top#7 = top#6 + 1'
p3177
aS'top = top + 1'
p3178
aS'var_4_3 = int.d(unimplemented)'
p3179
aS'var_4 = int.d(unimplemented)'
p3180
ag14
ag2058
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_FLOAT_TO_INT 4>, <LLIL_REG_STACK_POP 10>, x87]'
p3181
aS'[esp, <LLIL_REG 4>, x87, <LLIL_REG_STACK_POP 10>, <LLIL_FLOAT_TO_INT 4>, <LLIL_STORE 4>]'
p3182
aS'[esp#1].d = int.d(x87#13[0 + top#7]) @ mem#3 -> mem#4'
p3183
aS'[esp].d = int.d(x87.pop)'
p3184
aS'eax_1 = var_4_3'
p3185
aS'eax = var_4'
p3186
ag14
ag2058
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_REG 4>, esp]'
p3187
aS'[eax, esp, <LLIL_REG 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p3188
aS'eax#4 = [esp#1].d @ mem#4'
p3189
aS'eax = [esp].d'
p3190
aS'None'
p3191
aS'esp = &arg_0'
p3192
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p3193
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p3194
aS'esp#2 = esp#1 + 4'
p3195
aS'esp = esp + 4'
p3196
aS'None'
p3197
aS'temp0 = arg_0'
p3198
ag14
ag2058
aS'[<LLIL_SET_REG 4>, temp0, <LLIL_POP 4>]'
p3199
aS'[temp0, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p3200
aS'temp0#1.d = [esp#2].d @ mem#4'
p3201
aS'temp0.d = pop'
p3202
aS'None'
p3203
aS'esp = &arg_8'
p3204
ag14
ag2058
aS'[<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p3205
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p3206
aS'esp#4 = esp#3 + 4'
p3207
aS'esp = esp + 4'
p3208
aS'None'
p3209
aS'return '
p3210
ag14
ag2058
aS'[<LLIL_RET>, <LLIL_REG 4>, temp0]'
p3211
aS'[temp0, <LLIL_REG 4>, <LLIL_RET>]'
p3212
aS'<return> jump(temp0#1.d)'
p3213
aS'<return> jump(temp0.d)'
p3214
asS'test_med_il_vars'
p3215
(lp3216
S'2 [3L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1, mem#3 = 0x1fb3(1) @ mem#2>>'
p3217
aS'0 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7#1 = float.t(1)>>'
p3218
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6#1 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)>>'
p3219
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: st0#1, mem#1 = 0x1f3c(x87_r6#1, x87_r7#1) @ mem#0>>'
p3220
aS'0 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: st0#1, mem#1 = 0x1f3c(x87_r6#1, x87_r7#1) @ mem#0>>'
p3221
aS'2 [3L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: st0#1, mem#1 = 0x1f3c(x87_r6#1, x87_r7#1) @ mem#0>>'
p3222
aS'2 [3L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_1#2 = st0#1>>'
p3223
aS'3 [4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_1#2 = st0#1>>'
p3224
aS'3 [4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = int.d(x87_r7_1#2)>>'
p3225
aS'4 [5L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = int.d(x87_r7_1#2)>>'
p3226
aS'4 [5L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4#1>>'
p3227
aS'5 [6L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4#1>>'
p3228
aS'5 [6L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_8#1 = eax#1>>'
p3229
aS'6 [7L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_8#1 = eax#1>>'
p3230
aS'6 [7L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: st0_1#2, mem#2 = 0x1f3f(var_8#1) @ mem#1>>'
p3231
aS'7 [8L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: st0_1#2, mem#2 = 0x1f3f(var_8#1) @ mem#1>>'
p3232
aS'7 [8L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_2#3 = st0_1#2>>'
p3233
aS'8 [9L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_2#3 = st0_1#2>>'
p3234
aS'8 [9L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = int.d(x87_r7_2#3)>>'
p3235
aS'9 [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = int.d(x87_r7_2#3)>>'
p3236
aS'10 [12L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_3#4 = float.t(0)>>'
p3237
aS'9 [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6_1#2 = float.t(var_4_1#2)>>'
p3238
aS'11 [12L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6_1#2 = float.t(var_4_1#2)>>'
p3239
aS'11 [12L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#2, mem#3 = 0x1f48(x87_r6_1#2, x87_r7_3#4) @ mem#2>>'
p3240
aS'10 [12L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#2, mem#3 = 0x1f48(x87_r6_1#2, x87_r7_3#4) @ mem#2>>'
p3241
aS'12 [13L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#2, mem#3 = 0x1f48(x87_r6_1#2, x87_r7_3#4) @ mem#2>>'
p3242
aS'None [0L] <entry x87_r1> <entry x87_r1> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r1#1 = arg2#0 + arg1#0>>'
p3243
aS'None [0L] <entry x87_r0> <entry x87_r0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r1#1 = arg2#0 + arg1#0>>'
p3244
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r1#1 = arg2#0 + arg1#0>>'
p3245
aS'None [0L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_1#1 = float.t(testautovar#0)>>'
p3246
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_1#1 = float.t(testautovar#0)>>'
p3247
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7#2 = sqrt(x87_r7_1#1)>>'
p3248
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7#2 = sqrt(x87_r7_1#1)>>'
p3249
aS'None [0L] <entry x87_r1> <entry x87_r1> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r1#1 = arg2#0 - arg1#0>>'
p3250
aS'None [0L] <entry x87_r0> <entry x87_r0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r1#1 = arg2#0 - arg1#0>>'
p3251
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r1#1 = arg2#0 - arg1#0>>'
p3252
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = int.d(x87_r1#1)>>'
p3253
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = int.d(x87_r1#1)>>'
p3254
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4#1>>'
p3255
aS'2 [3L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4#1>>'
p3256
aS'None [0L, 1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (testautovar#0 != 1) then 1 @ 0x1f6c else 5 @ 0x1f65>>'
p3257
aS'None [0L, 1L] <undetermined> <not in set([0x1])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#1 = testautovar#0>>'
p3258
aS'1 [2L] <undetermined> <not in set([0x1])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#1 = testautovar#0>>'
p3259
aS'1 [2L] <undetermined> <not in set([0x1])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_8_1#1 = eax_1#1>>'
p3260
aS'2 [3L, 7L] <undetermined> <not in set([0x1])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_8_1#1 = eax_1#1>>'
p3261
aS'2 [3L, 7L] <undetermined> <not in set([0x1])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#2, mem#1 = 0x1f94(var_8_1#1) @ mem#0>>'
p3262
aS'3 [7L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#2, mem#1 = 0x1f94(var_8_1#1) @ mem#0>>'
p3263
aS'5 [7L] <const 0x0> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#3 = 0>>'
p3264
aS'7 [7L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = eax#4>>'
p3265
aS'7 [8L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = eax#4>>'
p3266
aS'7 [8L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7#1 = float.t(var_4#1)>>'
p3267
aS'8 [10L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7#1 = float.t(var_4#1)>>'
p3268
aS'9 [10L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6#1 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)>>'
p3269
aS'8 [10L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_1#2 = x87_r7#1 / x87_r6#1>>'
p3270
aS'9 [10L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_1#2 = x87_r7#1 / x87_r6#1>>'
p3271
aS'10 [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_1#2 = x87_r7#1 / x87_r6#1>>'
p3272
aS'10 [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = int.d(x87_r7_1#2)>>'
p3273
aS'11 [12L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#2 = int.d(x87_r7_1#2)>>'
p3274
aS'11 [12L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#5 = var_4_1#2>>'
p3275
aS'12 [13L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#5 = var_4_1#2>>'
p3276
aS'None [0L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7#1 = float.t(testautovar#0)>>'
p3277
aS'0 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7#1 = float.t(testautovar#0)>>'
p3278
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6#1 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)>>'
p3279
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6_1#2 = x87_r6#1 * x87_r7#1>>'
p3280
aS'0 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6_1#2 = x87_r6#1 * x87_r7#1>>'
p3281
aS'2 [4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6_1#2 = x87_r6#1 * x87_r7#1>>'
p3282
aS'3 [4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r5#1 = float.t(1)>>'
p3283
aS'3 [4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r5_1#2 = x87_r5#1 - x87_r6_1#2>>'
p3284
aS'2 [4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r5_1#2 = x87_r5#1 - x87_r6_1#2>>'
p3285
aS'4 [5L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r5_1#2 = x87_r5#1 - x87_r6_1#2>>'
p3286
aS'4 [5L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = int.d(x87_r5_1#2)>>'
p3287
aS'5 [6L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4#1 = int.d(x87_r5_1#2)>>'
p3288
aS'5 [6L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4#1>>'
p3289
aS'6 [7L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4#1>>'
p3290
aS'None [0L, 1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (testautovar#0 != 1) then 1 @ 0x1fca else 9 @ 0x1fc3>>'
p3291
aS'None [0L, 1L] <undetermined> <not in set([0x1])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_1#1 = float.t(testautovar#0)>>'
p3292
aS'1 [3L, 11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r7_1#1 = float.t(testautovar#0)>>'
p3293
aS'2 [3L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6_1#1 = fconvert.t(3.1415926534682512) + fconvert.t(1.2154201012607932e-10)>>'
p3294
aS'2 [3L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6_2#2 = x87_r6_1#1 * x87_r7_1#1>>'
p3295
aS'1 [3L, 11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6_2#2 = x87_r6_1#1 * x87_r7_1#1>>'
p3296
aS'3 [5L, 11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r6_2#2 = x87_r6_1#1 * x87_r7_1#1>>'
p3297
aS'4 [5L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r5_1#1 = float.t(1)>>'
p3298
aS'4 [5L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r5_2#2 = x87_r5_1#1 - x87_r6_2#2>>'
p3299
aS'3 [5L, 11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r5_2#2 = x87_r5_1#1 - x87_r6_2#2>>'
p3300
aS'5 [6L, 11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: x87_r5_2#2 = x87_r5_1#1 - x87_r6_2#2>>'
p3301
aS'5 [6L, 11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#1 = int.d(x87_r5_2#2)>>'
p3302
aS'6 [7L, 11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_1#1 = int.d(x87_r5_2#2)>>'
p3303
aS'6 [7L, 11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4_1#1>>'
p3304
aS'7 [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4_1#1>>'
p3305
aS'9 [11L] <const 0x0> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#2 = 0>>'
p3306
aS'11 [11L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_2#3 = eax#3>>'
p3307
aS'11 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_2#3 = eax#3>>'
p3308
aS'16 [18L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4_3#4 = int.d(unimplemented)>>'
p3309
aS'16 [18L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#4 = var_4_3#4>>'
p3310
aS'18 [19L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#4 = var_4_3#4>>'
p3311
as.
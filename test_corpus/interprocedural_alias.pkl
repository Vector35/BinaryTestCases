(dp0
S'test_function_can_return'
p1
(lp2
S'function name: _main type: SymbolType.DataSymbol address: 0x1f5dL can_return: True'
p3
aS'function name: aliased type: SymbolType.DataSymbol address: 0x1fcaL can_return: True'
p4
aS'function name: not_aliased type: SymbolType.DataSymbol address: 0x1fefL can_return: True'
p5
aS'function name: write_to_arg type: SymbolType.DataSymbol address: 0x1ff5L can_return: True'
p6
asS'test_function_stack'
p7
(lp8
S'Stack position 0: __return_addr'
p9
aS'Stack position 1: testautovar'
p10
aS'Stack content sample: <undetermined>'
p11
aS'Stack content range sample: <undetermined>'
p12
aS'Sample stack var: None'
p13
aS'Stack position 0: var_8'
p14
aS'Stack position 1: var_4'
p15
aS'Stack position 2: __return_addr'
p16
aS'Stack position 3: testautovar'
p17
aS'Stack content sample: <return address>'
p18
aS'Stack content range sample: <return address>'
p19
aS'Sample stack var: None'
p20
aS'Stack position 0: __return_addr'
p21
aS'Stack position 1: testautovar'
p22
aS'Stack content sample: <undetermined>'
p23
aS'Stack content range sample: <undetermined>'
p24
aS'Sample stack var: None'
p25
aS'Stack position 0: __return_addr'
p26
aS'Stack position 1: testautovar'
p27
aS'Stack content sample: <undetermined>'
p28
aS'Stack content range sample: <undetermined>'
p29
aS'Sample stack var: None'
p30
asS'test_strings'
p31
(lp32
S'String: __PAGEZERO type: StringType.AsciiString at: 0x1024L'
p33
aS'String: __TEXT type: StringType.AsciiString at: 0x105cL'
p34
aS'String: __text type: StringType.AsciiString at: 0x108cL'
p35
aS'String: __TEXT type: StringType.AsciiString at: 0x109cL'
p36
aS'String: __LINKEDIT type: StringType.AsciiString at: 0x10d8L'
p37
aS'String: /usr/lib/dyld type: StringType.AsciiString at: 0x11acL'
p38
aS'String: /usr/lib/libSystem.B.dylib type: StringType.AsciiString at: 0x1224L'
p39
aS"String: 'aliased_table type: StringType.AsciiString at: 0x2004L"
p40
aS'String: Lnot_aliased_table type: StringType.AsciiString at: 0x2013L'
p41
aS'String: _mh_execute_header type: StringType.AsciiString at: 0x2029L'
p42
aS'String: Cmain type: StringType.AsciiString at: 0x203cL'
p43
aS'String: __mh_execute_header type: StringType.AsciiString at: 0x2106L'
p44
aS'String: _main type: StringType.AsciiString at: 0x211aL'
p45
aS'String: aliased_table type: StringType.AsciiString at: 0x2120L'
p46
aS'String: not_aliased_table type: StringType.AsciiString at: 0x212eL'
p47
aS'String: dyld_stub_binder type: StringType.AsciiString at: 0x2140L'
p48
aS'String: aliased_one type: StringType.AsciiString at: 0x2151L'
p49
aS'String: aliased_two type: StringType.AsciiString at: 0x215dL'
p50
aS'String: aliased_done type: StringType.AsciiString at: 0x2169L'
p51
aS'String: not_aliased_one type: StringType.AsciiString at: 0x2176L'
p52
aS'String: not_aliased_two type: StringType.AsciiString at: 0x2186L'
p53
aS'String: not_aliased_done type: StringType.AsciiString at: 0x2196L'
p54
aS'String: aliased type: StringType.AsciiString at: 0x21a7L'
p55
aS'String: not_aliased type: StringType.AsciiString at: 0x21afL'
p56
aS'String: write_to_arg type: StringType.AsciiString at: 0x21bbL'
p57
asS'test_function_low_il_basic_blocks'
p58
(lp59
S'LLIL basic block <block: x86@0x0-0x4> start: 0x0L end: 0x4L outgoing edges: 2'
p60
aS'LLIL basic block <block: x86@0x4-0x8> start: 0x4L end: 0x8L outgoing edges: 2'
p61
aS'LLIL basic block <block: x86@0x8-0x9> start: 0x8L end: 0x9L outgoing edges: 2'
p62
aS'LLIL basic block <block: x86@0x9-0xc> start: 0x9L end: 0xcL outgoing edges: 0'
p63
aS'LLIL basic block <block: x86@0xc-0xd> start: 0xcL end: 0xdL outgoing edges: 1'
p64
aS'LLIL basic block <block: x86@0xd-0xf> start: 0xdL end: 0xfL outgoing edges: 1'
p65
aS'LLIL basic block <block: x86@0xf-0x11> start: 0xfL end: 0x11L outgoing edges: 1'
p66
aS'LLIL basic block <block: x86@0x11-0x13> start: 0x11L end: 0x13L outgoing edges: 1'
p67
aS'LLIL basic block <block: x86@0x0-0x9> start: 0x0L end: 0x9L outgoing edges: 0'
p68
aS'LLIL basic block <block: x86@0x0-0x2> start: 0x0L end: 0x2L outgoing edges: 0'
p69
aS'LLIL basic block <block: x86@0x0-0x3> start: 0x0L end: 0x3L outgoing edges: 0'
p70
asS'test_functions_attributes'
p71
(lp72
S'Function _main var: testautovar'
p73
aS'Function _main var: eax'
p74
aS'Function _main var: eax_1'
p75
aS'Function _main var: eax_2'
p76
aS'Function _main var: eax_3'
p77
aS'Function _main var: ebx'
p78
aS'Function _main var: esi'
p79
aS'Function _main indirect branch: <branch x86:0x1f73 -> x86:0x1f82>'
p80
aS'Function _main indirect branch: <branch x86:0x1f73 -> x86:0x1f8c>'
p81
aS'Function _main indirect branch: <branch x86:0x1fa7 -> x86:0x1fb6>'
p82
aS'Function _main session data: {}'
p83
aS'Function _main analysis perf length: 1'
p84
aS'Function _main clobbered reg: eax'
p85
aS'Function _main clobbered reg: ebx'
p86
aS'Function _main clobbered reg: esi'
p87
aS'Function _main explicitly defined type: False'
p88
aS'Function _main needs update: True'
p89
aS'Function _main global pointer value: <undetermined>'
p90
aS'Function _main comment: testcomment _main'
p91
aS'Function _main too large: False'
p92
aS'Function _main analysis skipped: False'
p93
aS'Function _main first ins LLIL: call(0x1fca)'
p94
aS'Function _main LLIL exit test: []'
p95
aS'Function _main regs read test: []'
p96
aS"Function _main regs written test: ['eax', 'ecx', 'edx']"
p97
aS'Function _main stack var test: []'
p98
aS'Function _main constant reference test: [<constant pointer 0x1fca>]'
p99
aS'Function _main first ins lifted IL: call(0x1fca)'
p100
aS'Function _main flags read by lifted IL ins: []'
p101
aS'Function _main flags written by lifted IL ins: []'
p102
aS'Function _main create graph: <graph of <func: x86@0x1f5d>>'
p103
aS'Function _main indirect branches test: []'
p104
aS'Function _main test instr highlight: <color: #ff00ff>'
p105
aS'Function _main type token: _main()'
p106
aS'Function aliased var: var_8'
p107
aS'Function aliased var: var_4'
p108
aS'Function aliased var: testautovar'
p109
aS'Function aliased var: eax'
p110
aS'Function aliased session data: {}'
p111
aS'Function aliased analysis perf length: 1'
p112
aS'Function aliased clobbered reg: eax'
p113
aS'Function aliased explicitly defined type: False'
p114
aS'Function aliased needs update: True'
p115
aS'Function aliased global pointer value: <undetermined>'
p116
aS'Function aliased comment: testcomment aliased'
p117
aS'Function aliased too large: False'
p118
aS'Function aliased analysis skipped: False'
p119
aS'Function aliased first ins LLIL: esp = esp - 4'
p120
aS'Function aliased LLIL exit test: []'
p121
aS"Function aliased regs read test: ['esp']"
p122
aS"Function aliased regs written test: ['esp']"
p123
aS'Function aliased stack var test: []'
p124
aS'Function aliased constant reference test: [<constant 0x4 size 4>]'
p125
aS'Function aliased first ins lifted IL: esp = sub.d{*}(esp, 4)'
p126
aS'Function aliased flags read by lifted IL ins: []'
p127
aS"Function aliased flags written by lifted IL ins: ['c', 'p', 'a', 'z', 's', 'o']"
p128
aS'Function aliased create graph: <graph of <func: x86@0x1fca>>'
p129
aS'Function aliased indirect branches test: []'
p130
aS'Function aliased test instr highlight: <color: #ff00ff>'
p131
aS'Function aliased type token: aliased()'
p132
aS'Function not_aliased var: testautovar'
p133
aS'Function not_aliased var: eax'
p134
aS'Function not_aliased session data: {}'
p135
aS'Function not_aliased analysis perf length: 1'
p136
aS'Function not_aliased clobbered reg: eax'
p137
aS'Function not_aliased explicitly defined type: False'
p138
aS'Function not_aliased needs update: True'
p139
aS'Function not_aliased global pointer value: <undetermined>'
p140
aS'Function not_aliased comment: testcomment not_aliased'
p141
aS'Function not_aliased too large: False'
p142
aS'Function not_aliased analysis skipped: False'
p143
aS'Function not_aliased first ins LLIL: eax = 0x2a'
p144
aS'Function not_aliased LLIL exit test: []'
p145
aS'Function not_aliased regs read test: []'
p146
aS"Function not_aliased regs written test: ['eax']"
p147
aS'Function not_aliased stack var test: []'
p148
aS'Function not_aliased constant reference test: [<constant 0x2a size 4>]'
p149
aS'Function not_aliased first ins lifted IL: eax = 0x2a'
p150
aS'Function not_aliased flags read by lifted IL ins: []'
p151
aS'Function not_aliased flags written by lifted IL ins: []'
p152
aS'Function not_aliased create graph: <graph of <func: x86@0x1fef>>'
p153
aS'Function not_aliased indirect branches test: []'
p154
aS'Function not_aliased test instr highlight: <color: #ff00ff>'
p155
aS'Function not_aliased type token: not_aliased()'
p156
aS'Function write_to_arg var: testautovar'
p157
aS'Function write_to_arg var: eax'
p158
aS'Function write_to_arg session data: {}'
p159
aS'Function write_to_arg analysis perf length: 1'
p160
aS'Function write_to_arg clobbered reg: eax'
p161
aS'Function write_to_arg explicitly defined type: False'
p162
aS'Function write_to_arg needs update: True'
p163
aS'Function write_to_arg global pointer value: <undetermined>'
p164
aS'Function write_to_arg comment: testcomment write_to_arg'
p165
aS'Function write_to_arg too large: False'
p166
aS'Function write_to_arg analysis skipped: False'
p167
aS'Function write_to_arg first ins LLIL: eax = [esp + 4 {testautovar}].d'
p168
aS'Function write_to_arg LLIL exit test: []'
p169
aS"Function write_to_arg regs read test: ['esp']"
p170
aS"Function write_to_arg regs written test: ['eax']"
p171
aS'Function write_to_arg stack var test: [<operand 1 ref to testautovar>]'
p172
aS'Function write_to_arg constant reference test: [<constant 0x4 size 4>]'
p173
aS'Function write_to_arg first ins lifted IL: eax = [esp + 4].d'
p174
aS'Function write_to_arg flags read by lifted IL ins: []'
p175
aS'Function write_to_arg flags written by lifted IL ins: []'
p176
aS'Function write_to_arg create graph: <graph of <func: x86@0x1ff5>>'
p177
aS'Function write_to_arg indirect branches test: []'
p178
aS'Function write_to_arg test instr highlight: <color: #ff00ff>'
p179
aS'Function write_to_arg type token: int32_t* write_to_arg(testautovar)'
p180
asS'test_function_starts'
p181
(lp182
S'Function start: 0x1f5dL'
p183
aS'Function start: 0x1fcaL'
p184
aS'Function start: 0x1fefL'
p185
aS'Function start: 0x1ff5L'
p186
asS'test_function_llil'
p187
(lp188
S'LLIL basic block: <block: x86@0x0-0x4>'
p189
aS'LLIL basic block: <block: x86@0x4-0x8>'
p190
aS'LLIL basic block: <block: x86@0x8-0x9>'
p191
aS'LLIL basic block: <block: x86@0x9-0xc>'
p192
aS'LLIL basic block: <block: x86@0xc-0xd>'
p193
aS'LLIL basic block: <block: x86@0xd-0xf>'
p194
aS'LLIL basic block: <block: x86@0xf-0x11>'
p195
aS'LLIL basic block: <block: x86@0x11-0x13>'
p196
aS'LLIL instruction: call(0x1fca)'
p197
aS'LLIL instruction: eax = eax - 0x2a'
p198
aS'LLIL instruction: ebx = 0'
p199
aS'LLIL instruction: if (eax u>= 2) then 4 @ 0x1f91 else 8 @ 0x1f73'
p200
aS'LLIL instruction: call(0x1fef)'
p201
aS'LLIL instruction: eax = eax - 0x2a'
p202
aS'LLIL instruction: esi = 0'
p203
aS'LLIL instruction: if (eax u>= 2) then 9 @ 0x1fc5 else 12 @ 0x1fa7'
p204
aS'LLIL instruction: jump([(eax << 2) + 0x1f7a].d => 13 @ 0x1f82, 15 @ 0x1f8c)'
p205
aS'LLIL instruction: eax = ebx'
p206
aS'LLIL instruction: eax = eax + esi'
p207
aS'LLIL instruction: <return> jump(pop)'
p208
aS'LLIL instruction: jump([(eax << 2) + 0x1fae {0x1fae}].d => 17 @ 0x1fb6)'
p209
aS'LLIL instruction: ebx = 1'
p210
aS'LLIL instruction: goto 4'
p211
aS'LLIL instruction: ebx = 2'
p212
aS'LLIL instruction: goto 4 @ 0x1f91'
p213
aS'LLIL instruction: esi = 1'
p214
aS'LLIL instruction: goto 9 @ 0x1fc5'
p215
aS'MLIL basic block: <block: x86@0x0-0x4>'
p216
aS'MLIL basic block: <block: x86@0x4-0x7>'
p217
aS'MLIL basic block: <block: x86@0x7-0x8>'
p218
aS'MLIL basic block: <block: x86@0x8-0xb>'
p219
aS'MLIL basic block: <block: x86@0xb-0xc>'
p220
aS'MLIL basic block: <block: x86@0xc-0xe>'
p221
aS'MLIL basic block: <block: x86@0xe-0x10>'
p222
aS'MLIL basic block: <block: x86@0x10-0x12>'
p223
aS'MLIL instruction: eax_3 = 0x1fca()'
p224
aS'MLIL instruction: eax = eax_3 - 0x2a'
p225
aS'MLIL instruction: ebx = 0'
p226
aS'MLIL instruction: if (eax u>= 2) then 4 @ 0x1f91 else 7 @ 0x1f73'
p227
aS'MLIL instruction: 0x1fef()'
p228
aS'MLIL instruction: esi = 0'
p229
aS'MLIL instruction: if (false) then 8 @ 0x1fc5 else 11 @ 0x1fa7'
p230
aS'MLIL instruction: jump([(eax << 2) + 0x1f7a].d => 12 @ 0x1f82, 14 @ 0x1f8c)'
p231
aS'MLIL instruction: eax_1 = ebx'
p232
aS'MLIL instruction: eax_2 = eax_1 + esi'
p233
aS'MLIL instruction: return eax_2'
p234
aS'MLIL instruction: jump(0x1fb6 => 16 @ 0x1fb6)'
p235
aS'MLIL instruction: ebx = 1'
p236
aS'MLIL instruction: goto 4 @ 0x1f91'
p237
aS'MLIL instruction: ebx = 2'
p238
aS'MLIL instruction: goto 4 @ 0x1f91'
p239
aS'MLIL instruction: esi = 1'
p240
aS'MLIL instruction: goto 8 @ 0x1fc5'
p241
aS'Instructiin: 0x1f5dL: call    0x1fca'
p242
aS'Instructiin: 0x1f62L: sub     eax, 0x2a'
p243
aS'Instructiin: 0x1f67L: mov     ebx, 0x0'
p244
aS'Instructiin: 0x1f6cL: cmp     eax, 0x2'
p245
aS'Instructiin: 0x1f71L: jae     0x1f91'
p246
aS'Instructiin: 0x1f91L: call    0x1fef'
p247
aS'Instructiin: 0x1f96L: sub     eax, 0x2a'
p248
aS'Instructiin: 0x1f9bL: mov     esi, 0x0'
p249
aS'Instructiin: 0x1fa0L: cmp     eax, 0x2'
p250
aS'Instructiin: 0x1fa5L: jae     0x1fc5'
p251
aS'Instructiin: 0x1f73L: jmp     dword [eax*4+0x1f7a]'
p252
aS'Instructiin: 0x1fc5L: mov     eax, ebx'
p253
aS'Instructiin: 0x1fc7L: add     eax, esi'
p254
aS'Instructiin: 0x1fc9L: retn    '
p255
aS'Instructiin: 0x1fa7L: jmp     dword [eax*4+0x1fae]'
p256
aS'Instructiin: 0x1f82L: mov     ebx, 0x1'
p257
aS'Instructiin: 0x1f87L: jmp     0x1f91'
p258
aS'Instructiin: 0x1f8cL: mov     ebx, 0x2'
p259
aS'Instructiin: 0x1fb6L: mov     esi, 0x1'
p260
aS'Instructiin: 0x1fbbL: jmp     0x1fc5'
p261
aS'LLIL basic block: <block: x86@0x0-0x9>'
p262
aS'LLIL instruction: esp = esp - 4'
p263
aS'LLIL instruction: [esp {var_4}].d = 0x2a'
p264
aS'LLIL instruction: eax = esp {var_4}'
p265
aS'LLIL instruction: push(eax)'
p266
aS'LLIL instruction: call(0x1ff5)'
p267
aS'LLIL instruction: esp = esp + 4'
p268
aS'LLIL instruction: eax = [esp {var_4}].d'
p269
aS'LLIL instruction: esp = esp + 4'
p270
aS'LLIL instruction: <return> jump(pop)'
p271
aS'MLIL basic block: <block: x86@0x0-0x5>'
p272
aS'MLIL instruction: var_4 = 0x2a'
p273
aS'MLIL instruction: var_8 = &var_4'
p274
aS'MLIL instruction: 0x1ff5(var_8)'
p275
aS'MLIL instruction: eax = var_4'
p276
aS'MLIL instruction: return eax'
p277
aS'Instructiin: 0x1fcaL: sub     esp, 0x4'
p278
aS'Instructiin: 0x1fd0L: mov     dword [esp], 0x2a'
p279
aS'Instructiin: 0x1fd7L: mov     eax, esp'
p280
aS'Instructiin: 0x1fd9L: push    eax'
p281
aS'Instructiin: 0x1fdaL: call    0x1ff5'
p282
aS'Instructiin: 0x1fdfL: add     esp, 0x4'
p283
aS'Instructiin: 0x1fe5L: mov     eax, dword [esp]'
p284
aS'Instructiin: 0x1fe8L: add     esp, 0x4'
p285
aS'Instructiin: 0x1feeL: retn    '
p286
aS'LLIL basic block: <block: x86@0x0-0x2>'
p287
aS'LLIL instruction: eax = 0x2a'
p288
aS'LLIL instruction: <return> jump(pop)'
p289
aS'MLIL basic block: <block: x86@0x0-0x2>'
p290
aS'MLIL instruction: eax = 0x2a'
p291
aS'MLIL instruction: return 0x2a'
p292
aS'Instructiin: 0x1fefL: mov     eax, 0x2a'
p293
aS'Instructiin: 0x1ff4L: retn    '
p294
aS'LLIL basic block: <block: x86@0x0-0x3>'
p295
aS'LLIL instruction: eax = [esp + 4 {arg1}].d'
p296
aS'LLIL instruction: [eax].d = 2'
p297
aS'LLIL instruction: <return> jump(pop)'
p298
aS'MLIL basic block: <block: x86@0x0-0x3>'
p299
aS'MLIL instruction: eax = arg1'
p300
aS'MLIL instruction: [eax].d = 2'
p301
aS'MLIL instruction: return eax'
p302
aS'Instructiin: 0x1ff5L: mov     eax, dword [esp+0x4]'
p303
aS'Instructiin: 0x1ff9L: mov     dword [eax], 0x2'
p304
aS'Instructiin: 0x1fffL: retn    '
p305
asS'test_low_il_ssa'
p306
(lp307
S'Reg ch SSA definition: None'
p308
aS'Reg ch SSA uses: []'
p309
aS'Reg ch SSA value: <undetermined>'
p310
aS'Reg gs SSA definition: None'
p311
aS'Reg gs SSA uses: []'
p312
aS'Reg gs SSA value: <undetermined>'
p313
aS'Reg xmm4 SSA definition: None'
p314
aS'Reg xmm4 SSA uses: []'
p315
aS'Reg xmm4 SSA value: <undetermined>'
p316
aS'Reg x87_r3 SSA definition: None'
p317
aS'Reg x87_r3 SSA uses: []'
p318
aS'Reg x87_r3 SSA value: <undetermined>'
p319
aS'Reg cl SSA definition: None'
p320
aS'Reg cl SSA uses: []'
p321
aS'Reg cl SSA value: <undetermined>'
p322
aS'Reg mm5 SSA definition: None'
p323
aS'Reg mm5 SSA uses: []'
p324
aS'Reg mm5 SSA value: <undetermined>'
p325
aS'Reg ah SSA definition: None'
p326
aS'Reg ah SSA uses: []'
p327
aS'Reg ah SSA value: <undetermined>'
p328
aS'Reg mm7 SSA definition: None'
p329
aS'Reg mm7 SSA uses: []'
p330
aS'Reg mm7 SSA value: <undetermined>'
p331
aS'Reg edi SSA definition: None'
p332
aS'Reg edi SSA uses: []'
p333
aS'Reg edi SSA value: <undetermined>'
p334
aS'Reg mm1 SSA definition: None'
p335
aS'Reg mm1 SSA uses: []'
p336
aS'Reg mm1 SSA value: <undetermined>'
p337
aS'Reg al SSA definition: None'
p338
aS'Reg al SSA uses: []'
p339
aS'Reg al SSA value: <undetermined>'
p340
aS'Reg mm3 SSA definition: None'
p341
aS'Reg mm3 SSA uses: []'
p342
aS'Reg mm3 SSA value: <undetermined>'
p343
aS'Reg mm2 SSA definition: None'
p344
aS'Reg mm2 SSA uses: []'
p345
aS'Reg mm2 SSA value: <undetermined>'
p346
aS'Reg gsbase SSA definition: None'
p347
aS'Reg gsbase SSA uses: []'
p348
aS'Reg gsbase SSA value: <undetermined>'
p349
aS'Reg cx SSA definition: None'
p350
aS'Reg cx SSA uses: []'
p351
aS'Reg cx SSA value: <undetermined>'
p352
aS'Reg ebp SSA definition: None'
p353
aS'Reg ebp SSA uses: []'
p354
aS'Reg ebp SSA value: <undetermined>'
p355
aS'Reg cs SSA definition: None'
p356
aS'Reg cs SSA uses: []'
p357
aS'Reg cs SSA value: <undetermined>'
p358
aS'Reg ax SSA definition: None'
p359
aS'Reg ax SSA uses: []'
p360
aS'Reg ax SSA value: <undetermined>'
p361
aS'Reg edx SSA definition: None'
p362
aS'Reg edx SSA uses: []'
p363
aS'Reg edx SSA value: <undetermined>'
p364
aS'Reg ebx SSA definition: 2'
p365
aS'Reg ebx SSA uses: [4L]'
p366
aS'Reg ebx SSA value: <const 0x0>'
p367
aS'Reg es SSA definition: None'
p368
aS'Reg es SSA uses: []'
p369
aS'Reg es SSA value: <undetermined>'
p370
aS'Reg x87_r2 SSA definition: None'
p371
aS'Reg x87_r2 SSA uses: []'
p372
aS'Reg x87_r2 SSA value: <undetermined>'
p373
aS'Reg esp SSA definition: None'
p374
aS'Reg esp SSA uses: []'
p375
aS'Reg esp SSA value: <undetermined>'
p376
aS'Reg mm4 SSA definition: None'
p377
aS'Reg mm4 SSA uses: []'
p378
aS'Reg mm4 SSA value: <undetermined>'
p379
aS'Reg top SSA definition: None'
p380
aS'Reg top SSA uses: []'
p381
aS'Reg top SSA value: <undetermined>'
p382
aS'Reg x87_r0 SSA definition: None'
p383
aS'Reg x87_r0 SSA uses: []'
p384
aS'Reg x87_r0 SSA value: <undetermined>'
p385
aS'Reg st4 SSA definition: None'
p386
aS'Reg st4 SSA uses: []'
p387
aS'Reg st4 SSA value: <undetermined>'
p388
aS'Reg st5 SSA definition: None'
p389
aS'Reg st5 SSA uses: []'
p390
aS'Reg st5 SSA value: <undetermined>'
p391
aS'Reg st6 SSA definition: None'
p392
aS'Reg st6 SSA uses: []'
p393
aS'Reg st6 SSA value: <undetermined>'
p394
aS'Reg st7 SSA definition: None'
p395
aS'Reg st7 SSA uses: []'
p396
aS'Reg st7 SSA value: <undetermined>'
p397
aS'Reg st0 SSA definition: None'
p398
aS'Reg st0 SSA uses: []'
p399
aS'Reg st0 SSA value: <undetermined>'
p400
aS'Reg st1 SSA definition: None'
p401
aS'Reg st1 SSA uses: []'
p402
aS'Reg st1 SSA value: <undetermined>'
p403
aS'Reg st2 SSA definition: None'
p404
aS'Reg st2 SSA uses: []'
p405
aS'Reg st2 SSA value: <undetermined>'
p406
aS'Reg st3 SSA definition: None'
p407
aS'Reg st3 SSA uses: []'
p408
aS'Reg st3 SSA value: <undetermined>'
p409
aS'Reg x87_r6 SSA definition: None'
p410
aS'Reg x87_r6 SSA uses: []'
p411
aS'Reg x87_r6 SSA value: <undetermined>'
p412
aS'Reg esi SSA definition: 6'
p413
aS'Reg esi SSA uses: [9L]'
p414
aS'Reg esi SSA value: <const 0x0>'
p415
aS'Reg x87_r7 SSA definition: None'
p416
aS'Reg x87_r7 SSA uses: []'
p417
aS'Reg x87_r7 SSA value: <undetermined>'
p418
aS'Reg dl SSA definition: None'
p419
aS'Reg dl SSA uses: []'
p420
aS'Reg dl SSA value: <undetermined>'
p421
aS'Reg mm6 SSA definition: None'
p422
aS'Reg mm6 SSA uses: []'
p423
aS'Reg mm6 SSA value: <undetermined>'
p424
aS'Reg x87_r4 SSA definition: None'
p425
aS'Reg x87_r4 SSA uses: []'
p426
aS'Reg x87_r4 SSA value: <undetermined>'
p427
aS'Reg dh SSA definition: None'
p428
aS'Reg dh SSA uses: []'
p429
aS'Reg dh SSA value: <undetermined>'
p430
aS'Reg di SSA definition: None'
p431
aS'Reg di SSA uses: []'
p432
aS'Reg di SSA value: <undetermined>'
p433
aS'Reg bl SSA definition: None'
p434
aS'Reg bl SSA uses: []'
p435
aS'Reg bl SSA value: <undetermined>'
p436
aS'Reg x87_r5 SSA definition: None'
p437
aS'Reg x87_r5 SSA uses: []'
p438
aS'Reg x87_r5 SSA value: <undetermined>'
p439
aS'Reg bh SSA definition: None'
p440
aS'Reg bh SSA uses: []'
p441
aS'Reg bh SSA value: <undetermined>'
p442
aS'Reg mm0 SSA definition: None'
p443
aS'Reg mm0 SSA uses: []'
p444
aS'Reg mm0 SSA value: <undetermined>'
p445
aS'Reg xmm2 SSA definition: None'
p446
aS'Reg xmm2 SSA uses: []'
p447
aS'Reg xmm2 SSA value: <undetermined>'
p448
aS'Reg eax SSA definition: 0'
p449
aS'Reg eax SSA uses: [1L]'
p450
aS'Reg eax SSA value: <undetermined>'
p451
aS'Reg xmm0 SSA definition: None'
p452
aS'Reg xmm0 SSA uses: []'
p453
aS'Reg xmm0 SSA value: <undetermined>'
p454
aS'Reg xmm1 SSA definition: None'
p455
aS'Reg xmm1 SSA uses: []'
p456
aS'Reg xmm1 SSA value: <undetermined>'
p457
aS'Reg bp SSA definition: None'
p458
aS'Reg bp SSA uses: []'
p459
aS'Reg bp SSA value: <undetermined>'
p460
aS'Reg xmm7 SSA definition: None'
p461
aS'Reg xmm7 SSA uses: []'
p462
aS'Reg xmm7 SSA value: <undetermined>'
p463
aS'Reg dx SSA definition: None'
p464
aS'Reg dx SSA uses: []'
p465
aS'Reg dx SSA value: <undetermined>'
p466
aS'Reg xmm5 SSA definition: None'
p467
aS'Reg xmm5 SSA uses: []'
p468
aS'Reg xmm5 SSA value: <undetermined>'
p469
aS'Reg bx SSA definition: None'
p470
aS'Reg bx SSA uses: []'
p471
aS'Reg bx SSA value: <undetermined>'
p472
aS'Reg ds SSA definition: None'
p473
aS'Reg ds SSA uses: []'
p474
aS'Reg ds SSA value: <undetermined>'
p475
aS'Reg ecx SSA definition: None'
p476
aS'Reg ecx SSA uses: []'
p477
aS'Reg ecx SSA value: <undetermined>'
p478
aS'Reg xmm3 SSA definition: None'
p479
aS'Reg xmm3 SSA uses: []'
p480
aS'Reg xmm3 SSA value: <undetermined>'
p481
aS'Reg ss SSA definition: None'
p482
aS'Reg ss SSA uses: []'
p483
aS'Reg ss SSA value: <undetermined>'
p484
aS'Reg sp SSA definition: None'
p485
aS'Reg sp SSA uses: []'
p486
aS'Reg sp SSA value: <undetermined>'
p487
aS'Reg fs SSA definition: None'
p488
aS'Reg fs SSA uses: []'
p489
aS'Reg fs SSA value: <undetermined>'
p490
aS'Reg si SSA definition: None'
p491
aS'Reg si SSA uses: []'
p492
aS'Reg si SSA value: <undetermined>'
p493
aS'Reg x87_r1 SSA definition: None'
p494
aS'Reg x87_r1 SSA uses: []'
p495
aS'Reg x87_r1 SSA value: <undetermined>'
p496
aS'Reg xmm6 SSA definition: None'
p497
aS'Reg xmm6 SSA uses: []'
p498
aS'Reg xmm6 SSA value: <undetermined>'
p499
aS'Reg fsbase SSA definition: None'
p500
aS'Reg fsbase SSA uses: []'
p501
aS'Reg fsbase SSA value: <undetermined>'
p502
aS'Flag c SSA uses: []'
p503
aS'Flag c SSA value: <undetermined>'
p504
aS'Flag p SSA uses: []'
p505
aS'Flag p SSA value: <undetermined>'
p506
aS'Flag a SSA uses: []'
p507
aS'Flag a SSA value: <undetermined>'
p508
aS'Flag z SSA uses: []'
p509
aS'Flag z SSA value: <undetermined>'
p510
aS'Flag s SSA uses: []'
p511
aS'Flag s SSA value: <undetermined>'
p512
aS'Flag d SSA uses: []'
p513
aS'Flag d SSA value: <undetermined>'
p514
aS'Flag o SSA uses: []'
p515
aS'Flag o SSA value: <undetermined>'
p516
aS'Flag c0 SSA uses: []'
p517
aS'Flag c0 SSA value: <undetermined>'
p518
aS'Flag c1 SSA uses: []'
p519
aS'Flag c1 SSA value: <undetermined>'
p520
aS'Flag c2 SSA uses: []'
p521
aS'Flag c2 SSA value: <undetermined>'
p522
aS'Flag c3 SSA uses: []'
p523
aS'Flag c3 SSA value: <undetermined>'
p524
aS'Non-SSA instruction index: 0'
p525
aS'SSA instruction index: 0'
p526
aS'MLIL instruction index: 0'
p527
aS'Mapped MLIL instruction index: 0'
p528
aS'Non-SSA instruction index: 1'
p529
aS'SSA instruction index: 1'
p530
aS'MLIL instruction index: 1'
p531
aS'Mapped MLIL instruction index: 1'
p532
aS'Non-SSA instruction index: 2'
p533
aS'SSA instruction index: 2'
p534
aS'MLIL instruction index: 2'
p535
aS'Mapped MLIL instruction index: 2'
p536
aS'Non-SSA instruction index: 3'
p537
aS'SSA instruction index: 3'
p538
aS'MLIL instruction index: 3'
p539
aS'Mapped MLIL instruction index: 3'
p540
aS'Non-SSA instruction index: 4'
p541
aS'SSA instruction index: 5'
p542
aS'MLIL instruction index: 4'
p543
aS'Mapped MLIL instruction index: 4'
p544
aS'Non-SSA instruction index: 5'
p545
aS'SSA instruction index: 6'
p546
aS'MLIL instruction index: 5'
p547
aS'Mapped MLIL instruction index: 5'
p548
aS'Non-SSA instruction index: 6'
p549
aS'SSA instruction index: 7'
p550
aS'MLIL instruction index: 5'
p551
aS'Mapped MLIL instruction index: 6'
p552
aS'Non-SSA instruction index: 7'
p553
aS'SSA instruction index: 8'
p554
aS'MLIL instruction index: 6'
p555
aS'Mapped MLIL instruction index: 7'
p556
aS'Non-SSA instruction index: 8'
p557
aS'SSA instruction index: 9'
p558
aS'MLIL instruction index: 7'
p559
aS'Mapped MLIL instruction index: 8'
p560
aS'Non-SSA instruction index: 9'
p561
aS'SSA instruction index: 11'
p562
aS'MLIL instruction index: 8'
p563
aS'Mapped MLIL instruction index: 9'
p564
aS'Non-SSA instruction index: 10'
p565
aS'SSA instruction index: 12'
p566
aS'MLIL instruction index: 9'
p567
aS'Mapped MLIL instruction index: 10'
p568
aS'Non-SSA instruction index: 11'
p569
aS'SSA instruction index: 13'
p570
aS'MLIL instruction index: 10'
p571
aS'Mapped MLIL instruction index: 11'
p572
aS'Non-SSA instruction index: 12'
p573
aS'SSA instruction index: 14'
p574
aS'MLIL instruction index: 11'
p575
aS'Mapped MLIL instruction index: 12'
p576
aS'Non-SSA instruction index: 13'
p577
aS'SSA instruction index: 15'
p578
aS'MLIL instruction index: 12'
p579
aS'Mapped MLIL instruction index: 13'
p580
aS'Non-SSA instruction index: 14'
p581
aS'SSA instruction index: 16'
p582
aS'MLIL instruction index: 13'
p583
aS'Mapped MLIL instruction index: 14'
p584
aS'Non-SSA instruction index: 15'
p585
aS'SSA instruction index: 17'
p586
aS'MLIL instruction index: 14'
p587
aS'Mapped MLIL instruction index: 15'
p588
aS'Non-SSA instruction index: 16'
p589
aS'SSA instruction index: 18'
p590
aS'MLIL instruction index: 15'
p591
aS'Mapped MLIL instruction index: 16'
p592
aS'Non-SSA instruction index: 17'
p593
aS'SSA instruction index: 19'
p594
aS'MLIL instruction index: 16'
p595
aS'Mapped MLIL instruction index: 17'
p596
aS'Non-SSA instruction index: 18'
p597
aS'SSA instruction index: 20'
p598
aS'MLIL instruction index: 17'
p599
aS'Mapped MLIL instruction index: 18'
p600
aS'Reg ch SSA definition: None'
p601
aS'Reg ch SSA uses: []'
p602
aS'Reg ch SSA value: <undetermined>'
p603
aS'Reg gs SSA definition: None'
p604
aS'Reg gs SSA uses: []'
p605
aS'Reg gs SSA value: <undetermined>'
p606
aS'Reg xmm4 SSA definition: None'
p607
aS'Reg xmm4 SSA uses: []'
p608
aS'Reg xmm4 SSA value: <undetermined>'
p609
aS'Reg x87_r3 SSA definition: None'
p610
aS'Reg x87_r3 SSA uses: []'
p611
aS'Reg x87_r3 SSA value: <undetermined>'
p612
aS'Reg cl SSA definition: None'
p613
aS'Reg cl SSA uses: []'
p614
aS'Reg cl SSA value: <undetermined>'
p615
aS'Reg mm5 SSA definition: None'
p616
aS'Reg mm5 SSA uses: []'
p617
aS'Reg mm5 SSA value: <undetermined>'
p618
aS'Reg ah SSA definition: None'
p619
aS'Reg ah SSA uses: []'
p620
aS'Reg ah SSA value: <undetermined>'
p621
aS'Reg mm7 SSA definition: None'
p622
aS'Reg mm7 SSA uses: []'
p623
aS'Reg mm7 SSA value: <undetermined>'
p624
aS'Reg edi SSA definition: None'
p625
aS'Reg edi SSA uses: []'
p626
aS'Reg edi SSA value: <undetermined>'
p627
aS'Reg mm1 SSA definition: None'
p628
aS'Reg mm1 SSA uses: []'
p629
aS'Reg mm1 SSA value: <undetermined>'
p630
aS'Reg al SSA definition: None'
p631
aS'Reg al SSA uses: []'
p632
aS'Reg al SSA value: <undetermined>'
p633
aS'Reg mm3 SSA definition: None'
p634
aS'Reg mm3 SSA uses: []'
p635
aS'Reg mm3 SSA value: <undetermined>'
p636
aS'Reg mm2 SSA definition: None'
p637
aS'Reg mm2 SSA uses: []'
p638
aS'Reg mm2 SSA value: <undetermined>'
p639
aS'Reg gsbase SSA definition: None'
p640
aS'Reg gsbase SSA uses: []'
p641
aS'Reg gsbase SSA value: <undetermined>'
p642
aS'Reg cx SSA definition: None'
p643
aS'Reg cx SSA uses: []'
p644
aS'Reg cx SSA value: <undetermined>'
p645
aS'Reg ebp SSA definition: None'
p646
aS'Reg ebp SSA uses: []'
p647
aS'Reg ebp SSA value: <undetermined>'
p648
aS'Reg cs SSA definition: None'
p649
aS'Reg cs SSA uses: []'
p650
aS'Reg cs SSA value: <undetermined>'
p651
aS'Reg ax SSA definition: None'
p652
aS'Reg ax SSA uses: []'
p653
aS'Reg ax SSA value: <undetermined>'
p654
aS'Reg edx SSA definition: None'
p655
aS'Reg edx SSA uses: []'
p656
aS'Reg edx SSA value: <undetermined>'
p657
aS'Reg ebx SSA definition: None'
p658
aS'Reg ebx SSA uses: []'
p659
aS'Reg ebx SSA value: <undetermined>'
p660
aS'Reg es SSA definition: None'
p661
aS'Reg es SSA uses: []'
p662
aS'Reg es SSA value: <undetermined>'
p663
aS'Reg x87_r2 SSA definition: None'
p664
aS'Reg x87_r2 SSA uses: []'
p665
aS'Reg x87_r2 SSA value: <undetermined>'
p666
aS'Reg esp SSA definition: 0'
p667
aS'Reg esp SSA uses: [1L, 2L, 3L]'
p668
aS'Reg esp SSA value: <stack frame offset -0x4>'
p669
aS'Reg mm4 SSA definition: None'
p670
aS'Reg mm4 SSA uses: []'
p671
aS'Reg mm4 SSA value: <undetermined>'
p672
aS'Reg top SSA definition: None'
p673
aS'Reg top SSA uses: []'
p674
aS'Reg top SSA value: <undetermined>'
p675
aS'Reg x87_r0 SSA definition: None'
p676
aS'Reg x87_r0 SSA uses: []'
p677
aS'Reg x87_r0 SSA value: <undetermined>'
p678
aS'Reg st4 SSA definition: None'
p679
aS'Reg st4 SSA uses: []'
p680
aS'Reg st4 SSA value: <undetermined>'
p681
aS'Reg st5 SSA definition: None'
p682
aS'Reg st5 SSA uses: []'
p683
aS'Reg st5 SSA value: <undetermined>'
p684
aS'Reg st6 SSA definition: None'
p685
aS'Reg st6 SSA uses: []'
p686
aS'Reg st6 SSA value: <undetermined>'
p687
aS'Reg st7 SSA definition: None'
p688
aS'Reg st7 SSA uses: []'
p689
aS'Reg st7 SSA value: <undetermined>'
p690
aS'Reg st0 SSA definition: None'
p691
aS'Reg st0 SSA uses: []'
p692
aS'Reg st0 SSA value: <undetermined>'
p693
aS'Reg st1 SSA definition: None'
p694
aS'Reg st1 SSA uses: []'
p695
aS'Reg st1 SSA value: <undetermined>'
p696
aS'Reg st2 SSA definition: None'
p697
aS'Reg st2 SSA uses: []'
p698
aS'Reg st2 SSA value: <undetermined>'
p699
aS'Reg st3 SSA definition: None'
p700
aS'Reg st3 SSA uses: []'
p701
aS'Reg st3 SSA value: <undetermined>'
p702
aS'Reg x87_r6 SSA definition: None'
p703
aS'Reg x87_r6 SSA uses: []'
p704
aS'Reg x87_r6 SSA value: <undetermined>'
p705
aS'Reg esi SSA definition: None'
p706
aS'Reg esi SSA uses: []'
p707
aS'Reg esi SSA value: <undetermined>'
p708
aS'Reg x87_r7 SSA definition: None'
p709
aS'Reg x87_r7 SSA uses: []'
p710
aS'Reg x87_r7 SSA value: <undetermined>'
p711
aS'Reg dl SSA definition: None'
p712
aS'Reg dl SSA uses: []'
p713
aS'Reg dl SSA value: <undetermined>'
p714
aS'Reg mm6 SSA definition: None'
p715
aS'Reg mm6 SSA uses: []'
p716
aS'Reg mm6 SSA value: <undetermined>'
p717
aS'Reg x87_r4 SSA definition: None'
p718
aS'Reg x87_r4 SSA uses: []'
p719
aS'Reg x87_r4 SSA value: <undetermined>'
p720
aS'Reg dh SSA definition: None'
p721
aS'Reg dh SSA uses: []'
p722
aS'Reg dh SSA value: <undetermined>'
p723
aS'Reg di SSA definition: None'
p724
aS'Reg di SSA uses: []'
p725
aS'Reg di SSA value: <undetermined>'
p726
aS'Reg bl SSA definition: None'
p727
aS'Reg bl SSA uses: []'
p728
aS'Reg bl SSA value: <undetermined>'
p729
aS'Reg x87_r5 SSA definition: None'
p730
aS'Reg x87_r5 SSA uses: []'
p731
aS'Reg x87_r5 SSA value: <undetermined>'
p732
aS'Reg bh SSA definition: None'
p733
aS'Reg bh SSA uses: []'
p734
aS'Reg bh SSA value: <undetermined>'
p735
aS'Reg mm0 SSA definition: None'
p736
aS'Reg mm0 SSA uses: []'
p737
aS'Reg mm0 SSA value: <undetermined>'
p738
aS'Reg xmm2 SSA definition: None'
p739
aS'Reg xmm2 SSA uses: []'
p740
aS'Reg xmm2 SSA value: <undetermined>'
p741
aS'Reg eax SSA definition: 2'
p742
aS'Reg eax SSA uses: [3L]'
p743
aS'Reg eax SSA value: <stack frame offset -0x4>'
p744
aS'Reg xmm0 SSA definition: None'
p745
aS'Reg xmm0 SSA uses: []'
p746
aS'Reg xmm0 SSA value: <undetermined>'
p747
aS'Reg xmm1 SSA definition: None'
p748
aS'Reg xmm1 SSA uses: []'
p749
aS'Reg xmm1 SSA value: <undetermined>'
p750
aS'Reg bp SSA definition: None'
p751
aS'Reg bp SSA uses: []'
p752
aS'Reg bp SSA value: <undetermined>'
p753
aS'Reg xmm7 SSA definition: None'
p754
aS'Reg xmm7 SSA uses: []'
p755
aS'Reg xmm7 SSA value: <undetermined>'
p756
aS'Reg dx SSA definition: None'
p757
aS'Reg dx SSA uses: []'
p758
aS'Reg dx SSA value: <undetermined>'
p759
aS'Reg xmm5 SSA definition: None'
p760
aS'Reg xmm5 SSA uses: []'
p761
aS'Reg xmm5 SSA value: <undetermined>'
p762
aS'Reg bx SSA definition: None'
p763
aS'Reg bx SSA uses: []'
p764
aS'Reg bx SSA value: <undetermined>'
p765
aS'Reg ds SSA definition: None'
p766
aS'Reg ds SSA uses: []'
p767
aS'Reg ds SSA value: <undetermined>'
p768
aS'Reg ecx SSA definition: None'
p769
aS'Reg ecx SSA uses: []'
p770
aS'Reg ecx SSA value: <undetermined>'
p771
aS'Reg xmm3 SSA definition: None'
p772
aS'Reg xmm3 SSA uses: []'
p773
aS'Reg xmm3 SSA value: <undetermined>'
p774
aS'Reg ss SSA definition: None'
p775
aS'Reg ss SSA uses: []'
p776
aS'Reg ss SSA value: <undetermined>'
p777
aS'Reg sp SSA definition: None'
p778
aS'Reg sp SSA uses: []'
p779
aS'Reg sp SSA value: <undetermined>'
p780
aS'Reg fs SSA definition: None'
p781
aS'Reg fs SSA uses: []'
p782
aS'Reg fs SSA value: <undetermined>'
p783
aS'Reg si SSA definition: None'
p784
aS'Reg si SSA uses: []'
p785
aS'Reg si SSA value: <undetermined>'
p786
aS'Reg x87_r1 SSA definition: None'
p787
aS'Reg x87_r1 SSA uses: []'
p788
aS'Reg x87_r1 SSA value: <undetermined>'
p789
aS'Reg xmm6 SSA definition: None'
p790
aS'Reg xmm6 SSA uses: []'
p791
aS'Reg xmm6 SSA value: <undetermined>'
p792
aS'Reg fsbase SSA definition: None'
p793
aS'Reg fsbase SSA uses: []'
p794
aS'Reg fsbase SSA value: <undetermined>'
p795
aS'Flag c SSA uses: []'
p796
aS'Flag c SSA value: <undetermined>'
p797
aS'Flag p SSA uses: []'
p798
aS'Flag p SSA value: <undetermined>'
p799
aS'Flag a SSA uses: []'
p800
aS'Flag a SSA value: <undetermined>'
p801
aS'Flag z SSA uses: []'
p802
aS'Flag z SSA value: <undetermined>'
p803
aS'Flag s SSA uses: []'
p804
aS'Flag s SSA value: <undetermined>'
p805
aS'Flag d SSA uses: []'
p806
aS'Flag d SSA value: <undetermined>'
p807
aS'Flag o SSA uses: []'
p808
aS'Flag o SSA value: <undetermined>'
p809
aS'Flag c0 SSA uses: []'
p810
aS'Flag c0 SSA value: <undetermined>'
p811
aS'Flag c1 SSA uses: []'
p812
aS'Flag c1 SSA value: <undetermined>'
p813
aS'Flag c2 SSA uses: []'
p814
aS'Flag c2 SSA value: <undetermined>'
p815
aS'Flag c3 SSA uses: []'
p816
aS'Flag c3 SSA value: <undetermined>'
p817
aS'Non-SSA instruction index: 0'
p818
aS'SSA instruction index: 0'
p819
aS'MLIL instruction index: None'
p820
aS'Mapped MLIL instruction index: 0'
p821
aS'Non-SSA instruction index: 1'
p822
aS'SSA instruction index: 1'
p823
aS'MLIL instruction index: 0'
p824
aS'Mapped MLIL instruction index: 1'
p825
aS'Non-SSA instruction index: 2'
p826
aS'SSA instruction index: 2'
p827
aS'MLIL instruction index: None'
p828
aS'Mapped MLIL instruction index: 2'
p829
aS'Non-SSA instruction index: 3'
p830
aS'SSA instruction index: 3'
p831
aS'MLIL instruction index: 1'
p832
aS'Mapped MLIL instruction index: 3'
p833
aS'Non-SSA instruction index: 4'
p834
aS'SSA instruction index: 5'
p835
aS'MLIL instruction index: 2'
p836
aS'Mapped MLIL instruction index: 5'
p837
aS'Non-SSA instruction index: 5'
p838
aS'SSA instruction index: 6'
p839
aS'MLIL instruction index: None'
p840
aS'Mapped MLIL instruction index: 6'
p841
aS'Non-SSA instruction index: 6'
p842
aS'SSA instruction index: 7'
p843
aS'MLIL instruction index: 3'
p844
aS'Mapped MLIL instruction index: 7'
p845
aS'Non-SSA instruction index: 7'
p846
aS'SSA instruction index: 8'
p847
aS'MLIL instruction index: None'
p848
aS'Mapped MLIL instruction index: 8'
p849
aS'Non-SSA instruction index: 8'
p850
aS'SSA instruction index: 9'
p851
aS'MLIL instruction index: 4'
p852
aS'Mapped MLIL instruction index: 9'
p853
aS'Reg ch SSA definition: None'
p854
aS'Reg ch SSA uses: []'
p855
aS'Reg ch SSA value: <undetermined>'
p856
aS'Reg gs SSA definition: None'
p857
aS'Reg gs SSA uses: []'
p858
aS'Reg gs SSA value: <undetermined>'
p859
aS'Reg xmm4 SSA definition: None'
p860
aS'Reg xmm4 SSA uses: []'
p861
aS'Reg xmm4 SSA value: <undetermined>'
p862
aS'Reg x87_r3 SSA definition: None'
p863
aS'Reg x87_r3 SSA uses: []'
p864
aS'Reg x87_r3 SSA value: <undetermined>'
p865
aS'Reg cl SSA definition: None'
p866
aS'Reg cl SSA uses: []'
p867
aS'Reg cl SSA value: <undetermined>'
p868
aS'Reg mm5 SSA definition: None'
p869
aS'Reg mm5 SSA uses: []'
p870
aS'Reg mm5 SSA value: <undetermined>'
p871
aS'Reg ah SSA definition: None'
p872
aS'Reg ah SSA uses: []'
p873
aS'Reg ah SSA value: <undetermined>'
p874
aS'Reg mm7 SSA definition: None'
p875
aS'Reg mm7 SSA uses: []'
p876
aS'Reg mm7 SSA value: <undetermined>'
p877
aS'Reg edi SSA definition: None'
p878
aS'Reg edi SSA uses: []'
p879
aS'Reg edi SSA value: <undetermined>'
p880
aS'Reg mm1 SSA definition: None'
p881
aS'Reg mm1 SSA uses: []'
p882
aS'Reg mm1 SSA value: <undetermined>'
p883
aS'Reg al SSA definition: None'
p884
aS'Reg al SSA uses: []'
p885
aS'Reg al SSA value: <undetermined>'
p886
aS'Reg mm3 SSA definition: None'
p887
aS'Reg mm3 SSA uses: []'
p888
aS'Reg mm3 SSA value: <undetermined>'
p889
aS'Reg mm2 SSA definition: None'
p890
aS'Reg mm2 SSA uses: []'
p891
aS'Reg mm2 SSA value: <undetermined>'
p892
aS'Reg gsbase SSA definition: None'
p893
aS'Reg gsbase SSA uses: []'
p894
aS'Reg gsbase SSA value: <undetermined>'
p895
aS'Reg cx SSA definition: None'
p896
aS'Reg cx SSA uses: []'
p897
aS'Reg cx SSA value: <undetermined>'
p898
aS'Reg ebp SSA definition: None'
p899
aS'Reg ebp SSA uses: []'
p900
aS'Reg ebp SSA value: <undetermined>'
p901
aS'Reg cs SSA definition: None'
p902
aS'Reg cs SSA uses: []'
p903
aS'Reg cs SSA value: <undetermined>'
p904
aS'Reg ax SSA definition: None'
p905
aS'Reg ax SSA uses: []'
p906
aS'Reg ax SSA value: <undetermined>'
p907
aS'Reg edx SSA definition: None'
p908
aS'Reg edx SSA uses: []'
p909
aS'Reg edx SSA value: <undetermined>'
p910
aS'Reg ebx SSA definition: None'
p911
aS'Reg ebx SSA uses: []'
p912
aS'Reg ebx SSA value: <undetermined>'
p913
aS'Reg es SSA definition: None'
p914
aS'Reg es SSA uses: []'
p915
aS'Reg es SSA value: <undetermined>'
p916
aS'Reg x87_r2 SSA definition: None'
p917
aS'Reg x87_r2 SSA uses: []'
p918
aS'Reg x87_r2 SSA value: <undetermined>'
p919
aS'Reg esp SSA definition: None'
p920
aS'Reg esp SSA uses: []'
p921
aS'Reg esp SSA value: <undetermined>'
p922
aS'Reg mm4 SSA definition: None'
p923
aS'Reg mm4 SSA uses: []'
p924
aS'Reg mm4 SSA value: <undetermined>'
p925
aS'Reg top SSA definition: None'
p926
aS'Reg top SSA uses: []'
p927
aS'Reg top SSA value: <undetermined>'
p928
aS'Reg x87_r0 SSA definition: None'
p929
aS'Reg x87_r0 SSA uses: []'
p930
aS'Reg x87_r0 SSA value: <undetermined>'
p931
aS'Reg st4 SSA definition: None'
p932
aS'Reg st4 SSA uses: []'
p933
aS'Reg st4 SSA value: <undetermined>'
p934
aS'Reg st5 SSA definition: None'
p935
aS'Reg st5 SSA uses: []'
p936
aS'Reg st5 SSA value: <undetermined>'
p937
aS'Reg st6 SSA definition: None'
p938
aS'Reg st6 SSA uses: []'
p939
aS'Reg st6 SSA value: <undetermined>'
p940
aS'Reg st7 SSA definition: None'
p941
aS'Reg st7 SSA uses: []'
p942
aS'Reg st7 SSA value: <undetermined>'
p943
aS'Reg st0 SSA definition: None'
p944
aS'Reg st0 SSA uses: []'
p945
aS'Reg st0 SSA value: <undetermined>'
p946
aS'Reg st1 SSA definition: None'
p947
aS'Reg st1 SSA uses: []'
p948
aS'Reg st1 SSA value: <undetermined>'
p949
aS'Reg st2 SSA definition: None'
p950
aS'Reg st2 SSA uses: []'
p951
aS'Reg st2 SSA value: <undetermined>'
p952
aS'Reg st3 SSA definition: None'
p953
aS'Reg st3 SSA uses: []'
p954
aS'Reg st3 SSA value: <undetermined>'
p955
aS'Reg x87_r6 SSA definition: None'
p956
aS'Reg x87_r6 SSA uses: []'
p957
aS'Reg x87_r6 SSA value: <undetermined>'
p958
aS'Reg esi SSA definition: None'
p959
aS'Reg esi SSA uses: []'
p960
aS'Reg esi SSA value: <undetermined>'
p961
aS'Reg x87_r7 SSA definition: None'
p962
aS'Reg x87_r7 SSA uses: []'
p963
aS'Reg x87_r7 SSA value: <undetermined>'
p964
aS'Reg dl SSA definition: None'
p965
aS'Reg dl SSA uses: []'
p966
aS'Reg dl SSA value: <undetermined>'
p967
aS'Reg mm6 SSA definition: None'
p968
aS'Reg mm6 SSA uses: []'
p969
aS'Reg mm6 SSA value: <undetermined>'
p970
aS'Reg x87_r4 SSA definition: None'
p971
aS'Reg x87_r4 SSA uses: []'
p972
aS'Reg x87_r4 SSA value: <undetermined>'
p973
aS'Reg dh SSA definition: None'
p974
aS'Reg dh SSA uses: []'
p975
aS'Reg dh SSA value: <undetermined>'
p976
aS'Reg di SSA definition: None'
p977
aS'Reg di SSA uses: []'
p978
aS'Reg di SSA value: <undetermined>'
p979
aS'Reg bl SSA definition: None'
p980
aS'Reg bl SSA uses: []'
p981
aS'Reg bl SSA value: <undetermined>'
p982
aS'Reg x87_r5 SSA definition: None'
p983
aS'Reg x87_r5 SSA uses: []'
p984
aS'Reg x87_r5 SSA value: <undetermined>'
p985
aS'Reg bh SSA definition: None'
p986
aS'Reg bh SSA uses: []'
p987
aS'Reg bh SSA value: <undetermined>'
p988
aS'Reg mm0 SSA definition: None'
p989
aS'Reg mm0 SSA uses: []'
p990
aS'Reg mm0 SSA value: <undetermined>'
p991
aS'Reg xmm2 SSA definition: None'
p992
aS'Reg xmm2 SSA uses: []'
p993
aS'Reg xmm2 SSA value: <undetermined>'
p994
aS'Reg eax SSA definition: 0'
p995
aS'Reg eax SSA uses: []'
p996
aS'Reg eax SSA value: <const 0x2a>'
p997
aS'Reg xmm0 SSA definition: None'
p998
aS'Reg xmm0 SSA uses: []'
p999
aS'Reg xmm0 SSA value: <undetermined>'
p1000
aS'Reg xmm1 SSA definition: None'
p1001
aS'Reg xmm1 SSA uses: []'
p1002
aS'Reg xmm1 SSA value: <undetermined>'
p1003
aS'Reg bp SSA definition: None'
p1004
aS'Reg bp SSA uses: []'
p1005
aS'Reg bp SSA value: <undetermined>'
p1006
aS'Reg xmm7 SSA definition: None'
p1007
aS'Reg xmm7 SSA uses: []'
p1008
aS'Reg xmm7 SSA value: <undetermined>'
p1009
aS'Reg dx SSA definition: None'
p1010
aS'Reg dx SSA uses: []'
p1011
aS'Reg dx SSA value: <undetermined>'
p1012
aS'Reg xmm5 SSA definition: None'
p1013
aS'Reg xmm5 SSA uses: []'
p1014
aS'Reg xmm5 SSA value: <undetermined>'
p1015
aS'Reg bx SSA definition: None'
p1016
aS'Reg bx SSA uses: []'
p1017
aS'Reg bx SSA value: <undetermined>'
p1018
aS'Reg ds SSA definition: None'
p1019
aS'Reg ds SSA uses: []'
p1020
aS'Reg ds SSA value: <undetermined>'
p1021
aS'Reg ecx SSA definition: None'
p1022
aS'Reg ecx SSA uses: []'
p1023
aS'Reg ecx SSA value: <undetermined>'
p1024
aS'Reg xmm3 SSA definition: None'
p1025
aS'Reg xmm3 SSA uses: []'
p1026
aS'Reg xmm3 SSA value: <undetermined>'
p1027
aS'Reg ss SSA definition: None'
p1028
aS'Reg ss SSA uses: []'
p1029
aS'Reg ss SSA value: <undetermined>'
p1030
aS'Reg sp SSA definition: None'
p1031
aS'Reg sp SSA uses: []'
p1032
aS'Reg sp SSA value: <undetermined>'
p1033
aS'Reg fs SSA definition: None'
p1034
aS'Reg fs SSA uses: []'
p1035
aS'Reg fs SSA value: <undetermined>'
p1036
aS'Reg si SSA definition: None'
p1037
aS'Reg si SSA uses: []'
p1038
aS'Reg si SSA value: <undetermined>'
p1039
aS'Reg x87_r1 SSA definition: None'
p1040
aS'Reg x87_r1 SSA uses: []'
p1041
aS'Reg x87_r1 SSA value: <undetermined>'
p1042
aS'Reg xmm6 SSA definition: None'
p1043
aS'Reg xmm6 SSA uses: []'
p1044
aS'Reg xmm6 SSA value: <undetermined>'
p1045
aS'Reg fsbase SSA definition: None'
p1046
aS'Reg fsbase SSA uses: []'
p1047
aS'Reg fsbase SSA value: <undetermined>'
p1048
aS'Flag c SSA uses: []'
p1049
aS'Flag c SSA value: <undetermined>'
p1050
aS'Flag p SSA uses: []'
p1051
aS'Flag p SSA value: <undetermined>'
p1052
aS'Flag a SSA uses: []'
p1053
aS'Flag a SSA value: <undetermined>'
p1054
aS'Flag z SSA uses: []'
p1055
aS'Flag z SSA value: <undetermined>'
p1056
aS'Flag s SSA uses: []'
p1057
aS'Flag s SSA value: <undetermined>'
p1058
aS'Flag d SSA uses: []'
p1059
aS'Flag d SSA value: <undetermined>'
p1060
aS'Flag o SSA uses: []'
p1061
aS'Flag o SSA value: <undetermined>'
p1062
aS'Flag c0 SSA uses: []'
p1063
aS'Flag c0 SSA value: <undetermined>'
p1064
aS'Flag c1 SSA uses: []'
p1065
aS'Flag c1 SSA value: <undetermined>'
p1066
aS'Flag c2 SSA uses: []'
p1067
aS'Flag c2 SSA value: <undetermined>'
p1068
aS'Flag c3 SSA uses: []'
p1069
aS'Flag c3 SSA value: <undetermined>'
p1070
aS'Non-SSA instruction index: 0'
p1071
aS'SSA instruction index: 0'
p1072
aS'MLIL instruction index: 0'
p1073
aS'Mapped MLIL instruction index: 0'
p1074
aS'Non-SSA instruction index: 1'
p1075
aS'SSA instruction index: 1'
p1076
aS'MLIL instruction index: 1'
p1077
aS'Mapped MLIL instruction index: 1'
p1078
aS'Reg ch SSA definition: None'
p1079
aS'Reg ch SSA uses: []'
p1080
aS'Reg ch SSA value: <undetermined>'
p1081
aS'Reg gs SSA definition: None'
p1082
aS'Reg gs SSA uses: []'
p1083
aS'Reg gs SSA value: <undetermined>'
p1084
aS'Reg xmm4 SSA definition: None'
p1085
aS'Reg xmm4 SSA uses: []'
p1086
aS'Reg xmm4 SSA value: <undetermined>'
p1087
aS'Reg x87_r3 SSA definition: None'
p1088
aS'Reg x87_r3 SSA uses: []'
p1089
aS'Reg x87_r3 SSA value: <undetermined>'
p1090
aS'Reg cl SSA definition: None'
p1091
aS'Reg cl SSA uses: []'
p1092
aS'Reg cl SSA value: <undetermined>'
p1093
aS'Reg mm5 SSA definition: None'
p1094
aS'Reg mm5 SSA uses: []'
p1095
aS'Reg mm5 SSA value: <undetermined>'
p1096
aS'Reg ah SSA definition: None'
p1097
aS'Reg ah SSA uses: []'
p1098
aS'Reg ah SSA value: <undetermined>'
p1099
aS'Reg mm7 SSA definition: None'
p1100
aS'Reg mm7 SSA uses: []'
p1101
aS'Reg mm7 SSA value: <undetermined>'
p1102
aS'Reg edi SSA definition: None'
p1103
aS'Reg edi SSA uses: []'
p1104
aS'Reg edi SSA value: <undetermined>'
p1105
aS'Reg mm1 SSA definition: None'
p1106
aS'Reg mm1 SSA uses: []'
p1107
aS'Reg mm1 SSA value: <undetermined>'
p1108
aS'Reg al SSA definition: None'
p1109
aS'Reg al SSA uses: []'
p1110
aS'Reg al SSA value: <undetermined>'
p1111
aS'Reg mm3 SSA definition: None'
p1112
aS'Reg mm3 SSA uses: []'
p1113
aS'Reg mm3 SSA value: <undetermined>'
p1114
aS'Reg mm2 SSA definition: None'
p1115
aS'Reg mm2 SSA uses: []'
p1116
aS'Reg mm2 SSA value: <undetermined>'
p1117
aS'Reg gsbase SSA definition: None'
p1118
aS'Reg gsbase SSA uses: []'
p1119
aS'Reg gsbase SSA value: <undetermined>'
p1120
aS'Reg cx SSA definition: None'
p1121
aS'Reg cx SSA uses: []'
p1122
aS'Reg cx SSA value: <undetermined>'
p1123
aS'Reg ebp SSA definition: None'
p1124
aS'Reg ebp SSA uses: []'
p1125
aS'Reg ebp SSA value: <undetermined>'
p1126
aS'Reg cs SSA definition: None'
p1127
aS'Reg cs SSA uses: []'
p1128
aS'Reg cs SSA value: <undetermined>'
p1129
aS'Reg ax SSA definition: None'
p1130
aS'Reg ax SSA uses: []'
p1131
aS'Reg ax SSA value: <undetermined>'
p1132
aS'Reg edx SSA definition: None'
p1133
aS'Reg edx SSA uses: []'
p1134
aS'Reg edx SSA value: <undetermined>'
p1135
aS'Reg ebx SSA definition: None'
p1136
aS'Reg ebx SSA uses: []'
p1137
aS'Reg ebx SSA value: <undetermined>'
p1138
aS'Reg es SSA definition: None'
p1139
aS'Reg es SSA uses: []'
p1140
aS'Reg es SSA value: <undetermined>'
p1141
aS'Reg x87_r2 SSA definition: None'
p1142
aS'Reg x87_r2 SSA uses: []'
p1143
aS'Reg x87_r2 SSA value: <undetermined>'
p1144
aS'Reg esp SSA definition: None'
p1145
aS'Reg esp SSA uses: []'
p1146
aS'Reg esp SSA value: <undetermined>'
p1147
aS'Reg mm4 SSA definition: None'
p1148
aS'Reg mm4 SSA uses: []'
p1149
aS'Reg mm4 SSA value: <undetermined>'
p1150
aS'Reg top SSA definition: None'
p1151
aS'Reg top SSA uses: []'
p1152
aS'Reg top SSA value: <undetermined>'
p1153
aS'Reg x87_r0 SSA definition: None'
p1154
aS'Reg x87_r0 SSA uses: []'
p1155
aS'Reg x87_r0 SSA value: <undetermined>'
p1156
aS'Reg st4 SSA definition: None'
p1157
aS'Reg st4 SSA uses: []'
p1158
aS'Reg st4 SSA value: <undetermined>'
p1159
aS'Reg st5 SSA definition: None'
p1160
aS'Reg st5 SSA uses: []'
p1161
aS'Reg st5 SSA value: <undetermined>'
p1162
aS'Reg st6 SSA definition: None'
p1163
aS'Reg st6 SSA uses: []'
p1164
aS'Reg st6 SSA value: <undetermined>'
p1165
aS'Reg st7 SSA definition: None'
p1166
aS'Reg st7 SSA uses: []'
p1167
aS'Reg st7 SSA value: <undetermined>'
p1168
aS'Reg st0 SSA definition: None'
p1169
aS'Reg st0 SSA uses: []'
p1170
aS'Reg st0 SSA value: <undetermined>'
p1171
aS'Reg st1 SSA definition: None'
p1172
aS'Reg st1 SSA uses: []'
p1173
aS'Reg st1 SSA value: <undetermined>'
p1174
aS'Reg st2 SSA definition: None'
p1175
aS'Reg st2 SSA uses: []'
p1176
aS'Reg st2 SSA value: <undetermined>'
p1177
aS'Reg st3 SSA definition: None'
p1178
aS'Reg st3 SSA uses: []'
p1179
aS'Reg st3 SSA value: <undetermined>'
p1180
aS'Reg x87_r6 SSA definition: None'
p1181
aS'Reg x87_r6 SSA uses: []'
p1182
aS'Reg x87_r6 SSA value: <undetermined>'
p1183
aS'Reg esi SSA definition: None'
p1184
aS'Reg esi SSA uses: []'
p1185
aS'Reg esi SSA value: <undetermined>'
p1186
aS'Reg x87_r7 SSA definition: None'
p1187
aS'Reg x87_r7 SSA uses: []'
p1188
aS'Reg x87_r7 SSA value: <undetermined>'
p1189
aS'Reg dl SSA definition: None'
p1190
aS'Reg dl SSA uses: []'
p1191
aS'Reg dl SSA value: <undetermined>'
p1192
aS'Reg mm6 SSA definition: None'
p1193
aS'Reg mm6 SSA uses: []'
p1194
aS'Reg mm6 SSA value: <undetermined>'
p1195
aS'Reg x87_r4 SSA definition: None'
p1196
aS'Reg x87_r4 SSA uses: []'
p1197
aS'Reg x87_r4 SSA value: <undetermined>'
p1198
aS'Reg dh SSA definition: None'
p1199
aS'Reg dh SSA uses: []'
p1200
aS'Reg dh SSA value: <undetermined>'
p1201
aS'Reg di SSA definition: None'
p1202
aS'Reg di SSA uses: []'
p1203
aS'Reg di SSA value: <undetermined>'
p1204
aS'Reg bl SSA definition: None'
p1205
aS'Reg bl SSA uses: []'
p1206
aS'Reg bl SSA value: <undetermined>'
p1207
aS'Reg x87_r5 SSA definition: None'
p1208
aS'Reg x87_r5 SSA uses: []'
p1209
aS'Reg x87_r5 SSA value: <undetermined>'
p1210
aS'Reg bh SSA definition: None'
p1211
aS'Reg bh SSA uses: []'
p1212
aS'Reg bh SSA value: <undetermined>'
p1213
aS'Reg mm0 SSA definition: None'
p1214
aS'Reg mm0 SSA uses: []'
p1215
aS'Reg mm0 SSA value: <undetermined>'
p1216
aS'Reg xmm2 SSA definition: None'
p1217
aS'Reg xmm2 SSA uses: []'
p1218
aS'Reg xmm2 SSA value: <undetermined>'
p1219
aS'Reg eax SSA definition: 0'
p1220
aS'Reg eax SSA uses: [1L]'
p1221
aS'Reg eax SSA value: <undetermined>'
p1222
aS'Reg xmm0 SSA definition: None'
p1223
aS'Reg xmm0 SSA uses: []'
p1224
aS'Reg xmm0 SSA value: <undetermined>'
p1225
aS'Reg xmm1 SSA definition: None'
p1226
aS'Reg xmm1 SSA uses: []'
p1227
aS'Reg xmm1 SSA value: <undetermined>'
p1228
aS'Reg bp SSA definition: None'
p1229
aS'Reg bp SSA uses: []'
p1230
aS'Reg bp SSA value: <undetermined>'
p1231
aS'Reg xmm7 SSA definition: None'
p1232
aS'Reg xmm7 SSA uses: []'
p1233
aS'Reg xmm7 SSA value: <undetermined>'
p1234
aS'Reg dx SSA definition: None'
p1235
aS'Reg dx SSA uses: []'
p1236
aS'Reg dx SSA value: <undetermined>'
p1237
aS'Reg xmm5 SSA definition: None'
p1238
aS'Reg xmm5 SSA uses: []'
p1239
aS'Reg xmm5 SSA value: <undetermined>'
p1240
aS'Reg bx SSA definition: None'
p1241
aS'Reg bx SSA uses: []'
p1242
aS'Reg bx SSA value: <undetermined>'
p1243
aS'Reg ds SSA definition: None'
p1244
aS'Reg ds SSA uses: []'
p1245
aS'Reg ds SSA value: <undetermined>'
p1246
aS'Reg ecx SSA definition: None'
p1247
aS'Reg ecx SSA uses: []'
p1248
aS'Reg ecx SSA value: <undetermined>'
p1249
aS'Reg xmm3 SSA definition: None'
p1250
aS'Reg xmm3 SSA uses: []'
p1251
aS'Reg xmm3 SSA value: <undetermined>'
p1252
aS'Reg ss SSA definition: None'
p1253
aS'Reg ss SSA uses: []'
p1254
aS'Reg ss SSA value: <undetermined>'
p1255
aS'Reg sp SSA definition: None'
p1256
aS'Reg sp SSA uses: []'
p1257
aS'Reg sp SSA value: <undetermined>'
p1258
aS'Reg fs SSA definition: None'
p1259
aS'Reg fs SSA uses: []'
p1260
aS'Reg fs SSA value: <undetermined>'
p1261
aS'Reg si SSA definition: None'
p1262
aS'Reg si SSA uses: []'
p1263
aS'Reg si SSA value: <undetermined>'
p1264
aS'Reg x87_r1 SSA definition: None'
p1265
aS'Reg x87_r1 SSA uses: []'
p1266
aS'Reg x87_r1 SSA value: <undetermined>'
p1267
aS'Reg xmm6 SSA definition: None'
p1268
aS'Reg xmm6 SSA uses: []'
p1269
aS'Reg xmm6 SSA value: <undetermined>'
p1270
aS'Reg fsbase SSA definition: None'
p1271
aS'Reg fsbase SSA uses: []'
p1272
aS'Reg fsbase SSA value: <undetermined>'
p1273
aS'Flag c SSA uses: []'
p1274
aS'Flag c SSA value: <undetermined>'
p1275
aS'Flag p SSA uses: []'
p1276
aS'Flag p SSA value: <undetermined>'
p1277
aS'Flag a SSA uses: []'
p1278
aS'Flag a SSA value: <undetermined>'
p1279
aS'Flag z SSA uses: []'
p1280
aS'Flag z SSA value: <undetermined>'
p1281
aS'Flag s SSA uses: []'
p1282
aS'Flag s SSA value: <undetermined>'
p1283
aS'Flag d SSA uses: []'
p1284
aS'Flag d SSA value: <undetermined>'
p1285
aS'Flag o SSA uses: []'
p1286
aS'Flag o SSA value: <undetermined>'
p1287
aS'Flag c0 SSA uses: []'
p1288
aS'Flag c0 SSA value: <undetermined>'
p1289
aS'Flag c1 SSA uses: []'
p1290
aS'Flag c1 SSA value: <undetermined>'
p1291
aS'Flag c2 SSA uses: []'
p1292
aS'Flag c2 SSA value: <undetermined>'
p1293
aS'Flag c3 SSA uses: []'
p1294
aS'Flag c3 SSA value: <undetermined>'
p1295
aS'Non-SSA instruction index: 0'
p1296
aS'SSA instruction index: 0'
p1297
aS'MLIL instruction index: 0'
p1298
aS'Mapped MLIL instruction index: 0'
p1299
aS'Non-SSA instruction index: 1'
p1300
aS'SSA instruction index: 1'
p1301
aS'MLIL instruction index: 1'
p1302
aS'Mapped MLIL instruction index: 1'
p1303
aS'Non-SSA instruction index: 2'
p1304
aS'SSA instruction index: 2'
p1305
aS'MLIL instruction index: 2'
p1306
aS'Mapped MLIL instruction index: 2'
p1307
asS'test_med_il_instructions'
p1308
(lp1309
S'Expression type: None'
p1310
aS'LLIL: eax#1, mem#1 = call(0x1fca, stack = esp#0 @ mem#0)'
p1311
aS'Value: <undetermined>'
p1312
aS'Possible values: <undetermined>'
p1313
aS'Branch dependence: {}'
p1314
aS"Prefix operands: ['8138', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<var int32_t eax_3>]', '[]']"
p1315
aS"Postfix operands: ['8138', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<var int32_t eax_3>]', '[]']"
p1316
aS'SSA form: eax_3#1, mem#1 = 0x1fca() @ mem#0'
p1317
aS'Non-SSA formeax_3 = 0x1fca()'
p1318
aS'Expression type: None'
p1319
aS'LLIL: eax#2 = eax#1 - 0x2a'
p1320
aS'Value: <undetermined>'
p1321
aS'Possible values: <undetermined>'
p1322
aS'Branch dependence: {}'
p1323
aS"Prefix operands: ['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_SUB 4>', '<MLIL_VAR 4>', 'eax', 'eax_3']"
p1324
aS"Postfix operands: ['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_SUB 4>', '<MLIL_VAR 4>', 'eax', 'eax_3']"
p1325
aS'SSA form: eax#2 = eax_3#1 - 0x2a'
p1326
aS'Non-SSA formeax = eax_3 - 0x2a'
p1327
aS'Expression type: None'
p1328
aS'LLIL: ebx#1 = 0'
p1329
aS'Value: <undetermined>'
p1330
aS'Possible values: <undetermined>'
p1331
aS'Branch dependence: {}'
p1332
aS"Prefix operands: ['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p1333
aS"Postfix operands: ['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p1334
aS'SSA form: ebx#1 = 0'
p1335
aS'Non-SSA formebx = 0'
p1336
aS'Expression type: None'
p1337
aS'LLIL: if (eax#2 u>= 2) then 4 @ 0x1f91 else 9 @ 0x1f73'
p1338
aS'Value: <undetermined>'
p1339
aS'Possible values: <undetermined>'
p1340
aS'Branch dependence: {}'
p1341
aS"Prefix operands: ['2', '4', '7', '<MLIL_CMP_UGE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax']"
p1342
aS"Postfix operands: ['2', '4', '7', '<MLIL_CMP_UGE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax']"
p1343
aS'SSA form: if (eax#2 u>= 2) then 4 @ 0x0 else 5 @ 0x1f73'
p1344
aS'Non-SSA formif (eax u>= 2) then 4 @ 0x1f91 else 7 @ 0x1f73'
p1345
aS'Expression type: None'
p1346
aS'LLIL: eax#3, mem#2 = call(0x1fef, stack = esp#0 @ mem#1)'
p1347
aS'Value: <undetermined>'
p1348
aS'Possible values: <undetermined>'
p1349
aS'Branch dependence: {}'
p1350
aS"Prefix operands: ['8175', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[]', '[]']"
p1351
aS"Postfix operands: ['8175', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[]', '[]']"
p1352
aS'SSA form: mem#2 = 0x1fef() @ mem#1'
p1353
aS'Non-SSA form0x1fef()'
p1354
aS'Expression type: None'
p1355
aS'LLIL: esi#1 = 0'
p1356
aS'Value: <undetermined>'
p1357
aS'Possible values: <undetermined>'
p1358
aS'Branch dependence: {}'
p1359
aS"Prefix operands: ['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'esi']"
p1360
aS"Postfix operands: ['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'esi']"
p1361
aS'SSA form: esi#1 = 0'
p1362
aS'Non-SSA formesi = 0'
p1363
aS'Expression type: None'
p1364
aS'LLIL: if (eax#4 u>= 2) then 10 @ 0x1fc5 else 14 @ 0x1fa7'
p1365
aS'Value: <undetermined>'
p1366
aS'Possible values: <undetermined>'
p1367
aS'Branch dependence: {}'
p1368
aS"Prefix operands: ['0', '11', '8', '<MLIL_CONST>', '<MLIL_IF>']"
p1369
aS"Postfix operands: ['0', '11', '8', '<MLIL_CONST>', '<MLIL_IF>']"
p1370
aS'SSA form: if (false) then 14 @ 0x0 else 15 @ 0x1fa7'
p1371
aS'Non-SSA formif (false) then 8 @ 0x1fc5 else 11 @ 0x1fa7'
p1372
aS'Expression type: None'
p1373
aS'LLIL: jump([(eax#2 << 2) + 0x1f7a].d @ mem#1 => 15 @ 0x1f82, 17 @ 0x1f8c)'
p1374
aS'Value: <undetermined>'
p1375
aS'Possible values: <undetermined>'
p1376
aS'Branch dependence: {3L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1377
aS"Prefix operands: ['2', '8058', '<MLIL_ADD 4>', '<MLIL_CONST 1>', '<MLIL_CONST 4>', '<MLIL_JUMP_TO>', '<MLIL_LOAD 4>', '<MLIL_LSL 4>', '<MLIL_VAR 4>', '[12L, 14L]', 'eax']"
p1378
aS"Postfix operands: ['2', '8058', '<MLIL_ADD 4>', '<MLIL_CONST 1>', '<MLIL_CONST 4>', '<MLIL_JUMP_TO>', '<MLIL_LOAD 4>', '<MLIL_LSL 4>', '<MLIL_VAR 4>', '[12L, 14L]', 'eax']"
p1379
aS'SSA form: jump([(eax#2 << 2) + 0x1f7a].d @ mem#1 => 10 @ 0x1f82, 12 @ 0x1f8c)'
p1380
aS'Non-SSA formjump([(eax << 2) + 0x1f7a].d => 12 @ 0x1f82, 14 @ 0x1f8c)'
p1381
aS'Expression type: None'
p1382
aS'LLIL: eax#5 = ebx#2'
p1383
aS'Value: <undetermined>'
p1384
aS'Possible values: <undetermined>'
p1385
aS'Branch dependence: {}'
p1386
aS"Prefix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'ebx']"
p1387
aS"Postfix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'ebx']"
p1388
aS'SSA form: eax_1#3 = ebx#4'
p1389
aS'Non-SSA formeax_1 = ebx'
p1390
aS'Expression type: None'
p1391
aS'LLIL: eax#6 = eax#5 + esi#2'
p1392
aS'Value: <undetermined>'
p1393
aS'Possible values: <undetermined>'
p1394
aS'Branch dependence: {}'
p1395
aS"Prefix operands: ['<MLIL_ADD 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'eax_2', 'esi']"
p1396
aS"Postfix operands: ['<MLIL_ADD 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'eax_2', 'esi']"
p1397
aS'SSA form: eax_2#4 = eax_1#3 + esi#3'
p1398
aS'Non-SSA formeax_2 = eax_1 + esi'
p1399
aS'Expression type: None'
p1400
aS'LLIL: <return> jump([esp#0].d @ mem#2)'
p1401
aS'Value: <undetermined>'
p1402
aS'Possible values: <undetermined>'
p1403
aS'Branch dependence: {}'
p1404
aS"Prefix operands: ['<MLIL_RET>', '[<il: eax_2>]']"
p1405
aS"Postfix operands: ['<MLIL_RET>', '[<il: eax_2>]']"
p1406
aS'SSA form: return eax_2#4'
p1407
aS'Non-SSA formreturn eax_2'
p1408
aS'Expression type: None'
p1409
aS'LLIL: jump([(eax#4 << 2) + 0x1fae].d @ mem#2 => 19 @ 0x1fb6)'
p1410
aS'Value: <undetermined>'
p1411
aS'Possible values: <undetermined>'
p1412
aS'Branch dependence: {6L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1413
aS"Prefix operands: ['8118', '<MLIL_CONST 4>', '<MLIL_JUMP_TO>', '[16L]']"
p1414
aS"Postfix operands: ['8118', '<MLIL_CONST 4>', '<MLIL_JUMP_TO>', '[16L]']"
p1415
aS'SSA form: jump(0x1fb6 => 20 @ 0x1fb6)'
p1416
aS'Non-SSA formjump(0x1fb6 => 16 @ 0x1fb6)'
p1417
aS'Expression type: None'
p1418
aS'LLIL: ebx#3 = 1'
p1419
aS'Value: <undetermined>'
p1420
aS'Possible values: <undetermined>'
p1421
aS'Branch dependence: {3L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1422
aS"Prefix operands: ['1', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p1423
aS"Postfix operands: ['1', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p1424
aS'SSA form: ebx#2 = 1'
p1425
aS'Non-SSA formebx = 1'
p1426
aS'Expression type: None'
p1427
aS'LLIL: goto 4'
p1428
aS'Value: <undetermined>'
p1429
aS'Possible values: <undetermined>'
p1430
aS'Branch dependence: {3L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1431
aS"Prefix operands: ['4', '<MLIL_GOTO>']"
p1432
aS"Postfix operands: ['4', '<MLIL_GOTO>']"
p1433
aS'SSA form: goto 6 @ 0x1f91'
p1434
aS'Non-SSA formgoto 4 @ 0x1f91'
p1435
aS'Expression type: None'
p1436
aS'LLIL: ebx#4 = 2'
p1437
aS'Value: <undetermined>'
p1438
aS'Possible values: <undetermined>'
p1439
aS'Branch dependence: {3L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1440
aS"Prefix operands: ['2', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p1441
aS"Postfix operands: ['2', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p1442
aS'SSA form: ebx#3 = 2'
p1443
aS'Non-SSA formebx = 2'
p1444
aS'Expression type: None'
p1445
aS'LLIL: goto 4'
p1446
aS'Value: <undetermined>'
p1447
aS'Possible values: <undetermined>'
p1448
aS'Branch dependence: {3L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1449
aS"Prefix operands: ['4', '<MLIL_GOTO>']"
p1450
aS"Postfix operands: ['4', '<MLIL_GOTO>']"
p1451
aS'SSA form: goto 6 @ 0x1f91'
p1452
aS'Non-SSA formgoto 4 @ 0x1f91'
p1453
aS'Expression type: None'
p1454
aS'LLIL: esi#3 = 1'
p1455
aS'Value: <undetermined>'
p1456
aS'Possible values: <undetermined>'
p1457
aS'Branch dependence: {6L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1458
aS"Prefix operands: ['1', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'esi']"
p1459
aS"Postfix operands: ['1', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'esi']"
p1460
aS'SSA form: esi#2 = 1'
p1461
aS'Non-SSA formesi = 1'
p1462
aS'Expression type: None'
p1463
aS'LLIL: goto 10 @ 0x1fc5'
p1464
aS'Value: <undetermined>'
p1465
aS'Possible values: <undetermined>'
p1466
aS'Branch dependence: {6L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1467
aS"Prefix operands: ['8', '<MLIL_GOTO>']"
p1468
aS"Postfix operands: ['8', '<MLIL_GOTO>']"
p1469
aS'SSA form: goto 16 @ 0x1fc5'
p1470
aS'Non-SSA formgoto 8 @ 0x1fc5'
p1471
aS'Expression type: None'
p1472
aS'LLIL: [esp#1].d = 0x2a @ mem#0 -> mem#1'
p1473
aS'Value: <undetermined>'
p1474
aS'Possible values: <undetermined>'
p1475
aS'Branch dependence: {}'
p1476
aS"Prefix operands: ['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'var_4']"
p1477
aS"Postfix operands: ['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'var_4']"
p1478
aS'SSA form: var_4 @ mem#0 -> mem#1 = 0x2a'
p1479
aS'Non-SSA formvar_4 = 0x2a'
p1480
aS'Expression type: None'
p1481
aS'LLIL: [esp#1 - 4].d = eax#1 @ mem#1 -> mem#2'
p1482
aS'Value: <undetermined>'
p1483
aS'Possible values: <undetermined>'
p1484
aS'Branch dependence: {}'
p1485
aS"Prefix operands: ['<MLIL_ADDRESS_OF>', '<MLIL_SET_VAR 4>', 'var_4', 'var_8']"
p1486
aS"Postfix operands: ['<MLIL_ADDRESS_OF>', '<MLIL_SET_VAR 4>', 'var_4', 'var_8']"
p1487
aS'SSA form: var_8#1 = &var_4'
p1488
aS'Non-SSA formvar_8 = &var_4'
p1489
aS'Expression type: None'
p1490
aS'LLIL: eax#2, mem#3 = call(0x1ff5, stack = esp#2 @ mem#2)'
p1491
aS'Value: <undetermined>'
p1492
aS'Possible values: <undetermined>'
p1493
aS'Branch dependence: {}'
p1494
aS"Prefix operands: ['8181', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_8>]', '[]']"
p1495
aS"Postfix operands: ['8181', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_8>]', '[]']"
p1496
aS'SSA form: mem#2 = 0x1ff5(var_8#1) @ mem#1'
p1497
aS'Non-SSA form0x1ff5(var_8)'
p1498
aS'Expression type: None'
p1499
aS'LLIL: eax#3 = [esp#3].d @ mem#3'
p1500
aS'Value: <undetermined>'
p1501
aS'Possible values: <undetermined>'
p1502
aS'Branch dependence: {}'
p1503
aS"Prefix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p1504
aS"Postfix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p1505
aS'SSA form: eax#1 = var_4 @ mem#2'
p1506
aS'Non-SSA formeax = var_4'
p1507
aS'Expression type: None'
p1508
aS'LLIL: <return> jump([esp#4].d @ mem#3)'
p1509
aS'Value: <undetermined>'
p1510
aS'Possible values: <undetermined>'
p1511
aS'Branch dependence: {}'
p1512
aS"Prefix operands: ['<MLIL_RET>', '[<il: eax>]']"
p1513
aS"Postfix operands: ['<MLIL_RET>', '[<il: eax>]']"
p1514
aS'SSA form: return eax#1'
p1515
aS'Non-SSA formreturn eax'
p1516
aS'Expression type: None'
p1517
aS'LLIL: eax#1 = 0x2a'
p1518
aS'Value: <undetermined>'
p1519
aS'Possible values: <undetermined>'
p1520
aS'Branch dependence: {}'
p1521
aS"Prefix operands: ['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax']"
p1522
aS"Postfix operands: ['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax']"
p1523
aS'SSA form: eax#1 = 0x2a'
p1524
aS'Non-SSA formeax = 0x2a'
p1525
aS'Expression type: None'
p1526
aS'LLIL: <return> jump([esp#0].d @ mem#0)'
p1527
aS'Value: <undetermined>'
p1528
aS'Possible values: <undetermined>'
p1529
aS'Branch dependence: {}'
p1530
aS"Prefix operands: ['<MLIL_RET>', '[<il: 0x2a>]']"
p1531
aS"Postfix operands: ['<MLIL_RET>', '[<il: 0x2a>]']"
p1532
aS'SSA form: return 0x2a'
p1533
aS'Non-SSA formreturn 0x2a'
p1534
aS'Expression type: None'
p1535
aS'LLIL: eax#1 = [esp#0 + 4].d @ mem#0'
p1536
aS'Value: <undetermined>'
p1537
aS'Possible values: <undetermined>'
p1538
aS'Branch dependence: {}'
p1539
aS"Prefix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'testautovar']"
p1540
aS"Postfix operands: ['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'testautovar']"
p1541
aS'SSA form: eax#1 = testautovar#0'
p1542
aS'Non-SSA formeax = testautovar'
p1543
aS'Expression type: None'
p1544
aS'LLIL: [eax#1].d = 2 @ mem#0 -> mem#1'
p1545
aS'Value: <undetermined>'
p1546
aS'Possible values: <undetermined>'
p1547
aS'Branch dependence: {}'
p1548
aS"Prefix operands: ['2', '<MLIL_CONST 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax']"
p1549
aS"Postfix operands: ['2', '<MLIL_CONST 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax']"
p1550
aS'SSA form: [eax#1].d = 2 @ mem#0 -> mem#1'
p1551
aS'Non-SSA form[eax].d = 2'
p1552
aS'Expression type: None'
p1553
aS'LLIL: <return> jump([esp#0].d @ mem#1)'
p1554
aS'Value: <undetermined>'
p1555
aS'Possible values: <undetermined>'
p1556
aS'Branch dependence: {}'
p1557
aS"Prefix operands: ['<MLIL_RET>', '[<il: eax>]']"
p1558
aS"Postfix operands: ['<MLIL_RET>', '[<il: eax>]']"
p1559
aS'SSA form: return eax#1'
p1560
aS'Non-SSA formreturn eax'
p1561
asS'test_function_symbol_names'
p1562
(lp1563
S'Symbol: _main SymbolType.DataSymbol 0x1f5dL'
p1564
aS'Symbol: aliased SymbolType.DataSymbol 0x1fcaL'
p1565
aS'Symbol: not_aliased SymbolType.DataSymbol 0x1fefL'
p1566
aS'Symbol: write_to_arg SymbolType.DataSymbol 0x1ff5L'
p1567
asS'test_BinaryView'
p1568
(lp1569
S"BV Type: ('va_list', <type: void*>)"
p1570
aS'BV segment: <segment: 0x1000-0x2000, r-x>'
p1571
aS'BV segment: <segment: 0x2000-0x3000, r-->'
p1572
aS'BV section: __text'
p1573
aS'BV allocated range: <0x1000-0x3000>'
p1574
aS'Session Data: {}'
p1575
aS'BV data var: 8128'
p1576
aS'BV data var: 8066'
p1577
aS'BV data var: 8133'
p1578
aS'BV data var: 8138'
p1579
aS'BV data var: 8076'
p1580
aS'BV data var: 8110'
p1581
aS'BV data var: 8175'
p1582
aS'BV data var: 8081'
p1583
aS'BV data var: 8181'
p1584
aS'BV data var: 8118'
p1585
aS'BV data var: 8058'
p1586
aS'BV data var: 8029'
p1587
aS'BV Entry function: <func: x86@0x1f5d>'
p1588
aS'BV function: <func: x86@0x1f5d>'
p1589
aS'BV function: <func: x86@0x1fca>'
p1590
aS'BV function: <func: x86@0x1fef>'
p1591
aS'BV function: <func: x86@0x1ff5>'
p1592
aS'BV entry point: 0x1f5dL'
p1593
aS'BV start: 0x1000L'
p1594
aS'BV length: 0x2000'
p1595
asS'test_available_types'
p1596
(lp1597
S'Available Type: Raw'
p1598
aS'Available Type: Mach-O'
p1599
asS'test_function_basic_blocks'
p1600
(lp1601
S'basic block <block: x86@0x1f5d-0x1f73> start: 0x1f5dL end: 0x1f73L undetermined outgoing edges: False'
p1602
aS'basic block <block: x86@0x1f5d-0x1f73> test get self: <block: x86@0x1f5d-0x1f73>'
p1603
aS'basic block <block: x86@0x1f91-0x1fa7> start: 0x1f91L end: 0x1fa7L undetermined outgoing edges: False'
p1604
aS'basic block <block: x86@0x1f91-0x1fa7> test get self: <block: x86@0x1f91-0x1fa7>'
p1605
aS'basic block <block: x86@0x1f73-0x1f7a> start: 0x1f73L end: 0x1f7aL undetermined outgoing edges: False'
p1606
aS'basic block <block: x86@0x1f73-0x1f7a> test get self: <block: x86@0x1f73-0x1f7a>'
p1607
aS'basic block <block: x86@0x1fc5-0x1fca> start: 0x1fc5L end: 0x1fcaL undetermined outgoing edges: True'
p1608
aS'basic block <block: x86@0x1fc5-0x1fca> test get self: <block: x86@0x1fc5-0x1fca>'
p1609
aS'basic block <block: x86@0x1fa7-0x1fae> start: 0x1fa7L end: 0x1faeL undetermined outgoing edges: False'
p1610
aS'basic block <block: x86@0x1fa7-0x1fae> test get self: <block: x86@0x1fa7-0x1fae>'
p1611
aS'basic block <block: x86@0x1f82-0x1f8c> start: 0x1f82L end: 0x1f8cL undetermined outgoing edges: False'
p1612
aS"basic block <block: x86@0x1f82-0x1f8c> function annotation: ['{Case ', '0x0', '}']"
p1613
aS'basic block <block: x86@0x1f82-0x1f8c> test get self: <block: x86@0x1f82-0x1f8c>'
p1614
aS'basic block <block: x86@0x1f8c-0x1f91> start: 0x1f8cL end: 0x1f91L undetermined outgoing edges: False'
p1615
aS"basic block <block: x86@0x1f8c-0x1f91> function annotation: ['{Case ', '0x1', '}']"
p1616
aS'basic block <block: x86@0x1f8c-0x1f91> test get self: <block: x86@0x1f8c-0x1f91>'
p1617
aS'basic block <block: x86@0x1fb6-0x1fc0> start: 0x1fb6L end: 0x1fc0L undetermined outgoing edges: False'
p1618
aS'basic block <block: x86@0x1fb6-0x1fc0> test get self: <block: x86@0x1fb6-0x1fc0>'
p1619
aS'basic block <block: x86@0x1fca-0x1fef> start: 0x1fcaL end: 0x1fefL undetermined outgoing edges: True'
p1620
aS'basic block <block: x86@0x1fca-0x1fef> test get self: <block: x86@0x1fca-0x1fef>'
p1621
aS'basic block <block: x86@0x1fef-0x1ff5> start: 0x1fefL end: 0x1ff5L undetermined outgoing edges: True'
p1622
aS'basic block <block: x86@0x1fef-0x1ff5> test get self: <block: x86@0x1fef-0x1ff5>'
p1623
aS'basic block <block: x86@0x1ff5-0x2000> start: 0x1ff5L end: 0x2000L undetermined outgoing edges: True'
p1624
aS'basic block <block: x86@0x1ff5-0x2000> test get self: <block: x86@0x1ff5-0x2000>'
p1625
asS'test_function_med_il_basic_blocks'
p1626
(lp1627
S'MLIL basic block <block: x86@0x0-0x4> start: 0x0L end: 0x4L outgoing_edges: 2'
p1628
aS'MLIL basic block <block: x86@0x4-0x7> start: 0x4L end: 0x7L outgoing_edges: 2'
p1629
aS'MLIL basic block <block: x86@0x7-0x8> start: 0x7L end: 0x8L outgoing_edges: 2'
p1630
aS'MLIL basic block <block: x86@0x8-0xb> start: 0x8L end: 0xbL outgoing_edges: 0'
p1631
aS'MLIL basic block <block: x86@0xb-0xc> start: 0xbL end: 0xcL outgoing_edges: 1'
p1632
aS'MLIL basic block <block: x86@0xc-0xe> start: 0xcL end: 0xeL outgoing_edges: 1'
p1633
aS'MLIL basic block <block: x86@0xe-0x10> start: 0xeL end: 0x10L outgoing_edges: 1'
p1634
aS'MLIL basic block <block: x86@0x10-0x12> start: 0x10L end: 0x12L outgoing_edges: 1'
p1635
aS'MLIL basic block <block: x86@0x0-0x5> start: 0x0L end: 0x5L outgoing_edges: 0'
p1636
aS'MLIL basic block <block: x86@0x0-0x2> start: 0x0L end: 0x2L outgoing_edges: 0'
p1637
aS'MLIL basic block <block: x86@0x0-0x3> start: 0x0L end: 0x3L outgoing_edges: 0'
p1638
asS'test_symbols'
p1639
(lp1640
S'Symbol: _main'
p1641
aS'Symbol: aliased'
p1642
aS'Symbol: aliased_done'
p1643
aS'Symbol: aliased_one'
p1644
aS'Symbol: aliased_table'
p1645
aS'Symbol: aliased_two'
p1646
aS'Symbol: not_aliased'
p1647
aS'Symbol: not_aliased_done'
p1648
aS'Symbol: not_aliased_one'
p1649
aS'Symbol: not_aliased_table'
p1650
aS'Symbol: not_aliased_two'
p1651
aS'Symbol: write_to_arg'
p1652
asS'test_low_il_instructions'
p1653
(lp1654
S'MLIL: eax_3 = 0x1fca()'
p1655
aS'Mapped MLIL: eax = call(0x1fca, stack = &arg_0)'
p1656
aS'Value: <undetermined>'
p1657
aS'Possible Values: <undetermined>'
p1658
aS'Prefix operands: [<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8138L, 0L, {}]'
p1659
aS'Postfix operands: [8138L, <LLIL_CONST_PTR 4>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1660
aS'SSA form: eax#1, mem#1 = call(0x1fca, stack = esp#0 @ mem#0)'
p1661
aS'Non-SSA form: call(0x1fca)'
p1662
aS'MLIL: eax = eax_3 - 0x2a'
p1663
aS'Mapped MLIL: eax = eax - 0x2a'
p1664
aS'Value: <undetermined>'
p1665
aS'Possible Values: <undetermined>'
p1666
aS'Prefix operands: [<LLIL_SET_REG 4>, eax, <LLIL_SUB 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 42L]'
p1667
aS'Postfix operands: [eax, eax, <LLIL_REG 4>, 42L, <LLIL_CONST 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p1668
aS'SSA form: eax#2 = eax#1 - 0x2a'
p1669
aS'Non-SSA form: eax = eax - 0x2a'
p1670
aS'MLIL: ebx = 0'
p1671
aS'Mapped MLIL: ebx = 0'
p1672
aS'Value: <undetermined>'
p1673
aS'Possible Values: <undetermined>'
p1674
aS'Prefix operands: [<LLIL_SET_REG 4>, ebx, <LLIL_CONST 4>, 0L]'
p1675
aS'Postfix operands: [ebx, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1676
aS'SSA form: ebx#1 = 0'
p1677
aS'Non-SSA form: ebx = 0'
p1678
aS'MLIL: None'
p1679
aS'Mapped MLIL: if (eax u>= 2) then 4 @ 0x1f91 else 8 @ 0x1f73'
p1680
aS'Value: <undetermined>'
p1681
aS'Possible Values: <undetermined>'
p1682
aS'Prefix operands: [<LLIL_IF>, <LLIL_CMP_UGE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 2L, 4L, 8L]'
p1683
aS'Postfix operands: [eax, <LLIL_REG 4>, 2L, <LLIL_CONST 4>, <LLIL_CMP_UGE 4>, 4L, 8L, <LLIL_IF>]'
p1684
aS'SSA form: if (eax#2 u>= 2) then 4 @ 0x1f91 else 9 @ 0x1f73'
p1685
aS'Non-SSA form: if (eax u>= 2) then 4 @ 0x1f91 else 8 @ 0x1f73'
p1686
aS'MLIL: 0x1fef()'
p1687
aS'Mapped MLIL: eax = call(0x1fef, stack = &arg_0)'
p1688
aS'Value: <undetermined>'
p1689
aS'Possible Values: <undetermined>'
p1690
aS'Prefix operands: [<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8175L, 0L, {}]'
p1691
aS'Postfix operands: [8175L, <LLIL_CONST_PTR 4>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1692
aS'SSA form: eax#3, mem#2 = call(0x1fef, stack = esp#0 @ mem#1)'
p1693
aS'Non-SSA form: call(0x1fef)'
p1694
aS'MLIL: None'
p1695
aS'Mapped MLIL: eax = eax - 0x2a'
p1696
aS'Value: <undetermined>'
p1697
aS'Possible Values: <undetermined>'
p1698
aS'Prefix operands: [<LLIL_SET_REG 4>, eax, <LLIL_SUB 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 42L]'
p1699
aS'Postfix operands: [eax, eax, <LLIL_REG 4>, 42L, <LLIL_CONST 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p1700
aS'SSA form: eax#4 = eax#3 - 0x2a'
p1701
aS'Non-SSA form: eax = eax - 0x2a'
p1702
aS'MLIL: esi = 0'
p1703
aS'Mapped MLIL: esi = 0'
p1704
aS'Value: <undetermined>'
p1705
aS'Possible Values: <undetermined>'
p1706
aS'Prefix operands: [<LLIL_SET_REG 4>, esi, <LLIL_CONST 4>, 0L]'
p1707
aS'Postfix operands: [esi, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1708
aS'SSA form: esi#1 = 0'
p1709
aS'Non-SSA form: esi = 0'
p1710
aS'MLIL: None'
p1711
aS'Mapped MLIL: if (eax u>= 2) then 9 @ 0x1fc5 else 12 @ 0x1fa7'
p1712
aS'Value: <undetermined>'
p1713
aS'Possible Values: <undetermined>'
p1714
aS'Prefix operands: [<LLIL_IF>, <LLIL_CMP_UGE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 2L, 9L, 12L]'
p1715
aS'Postfix operands: [eax, <LLIL_REG 4>, 2L, <LLIL_CONST 4>, <LLIL_CMP_UGE 4>, 9L, 12L, <LLIL_IF>]'
p1716
aS'SSA form: if (eax#4 u>= 2) then 10 @ 0x1fc5 else 14 @ 0x1fa7'
p1717
aS'Non-SSA form: if (eax u>= 2) then 9 @ 0x1fc5 else 12 @ 0x1fa7'
p1718
aS'MLIL: None'
p1719
aS'Mapped MLIL: jump([(eax << 2) + 0x1f7a].d => 13 @ 0x1f82, 15 @ 0x1f8c)'
p1720
aS'Value: <undetermined>'
p1721
aS'Possible Values: <undetermined>'
p1722
aS'Prefix operands: [<LLIL_JUMP_TO>, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_LSL 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 2L, <LLIL_CONST 4>, 8058L, [13L, 15L]]'
p1723
aS'Postfix operands: [eax, <LLIL_REG 4>, 2L, <LLIL_CONST 1>, <LLIL_LSL 4>, 8058L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, [13L, 15L], <LLIL_JUMP_TO>]'
p1724
aS'SSA form: jump([(eax#2 << 2) + 0x1f7a].d @ mem#1 => 15 @ 0x1f82, 17 @ 0x1f8c)'
p1725
aS'Non-SSA form: jump([(eax << 2) + 0x1f7a].d => 13 @ 0x1f82, 15 @ 0x1f8c)'
p1726
aS'MLIL: eax_1 = ebx'
p1727
aS'Mapped MLIL: eax = ebx'
p1728
aS'Value: <undetermined>'
p1729
aS'Possible Values: <undetermined>'
p1730
aS'Prefix operands: [<LLIL_SET_REG 4>, eax, <LLIL_REG 4>, ebx]'
p1731
aS'Postfix operands: [eax, ebx, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p1732
aS'SSA form: eax#5 = ebx#2'
p1733
aS'Non-SSA form: eax = ebx'
p1734
aS'MLIL: eax_2 = eax_1 + esi'
p1735
aS'Mapped MLIL: eax = eax + esi'
p1736
aS'Value: <undetermined>'
p1737
aS'Possible Values: <undetermined>'
p1738
aS'Prefix operands: [<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, eax, <LLIL_REG 4>, esi]'
p1739
aS'Postfix operands: [eax, eax, <LLIL_REG 4>, esi, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1740
aS'SSA form: eax#6 = eax#5 + esi#2'
p1741
aS'Non-SSA form: eax = eax + esi'
p1742
aS'MLIL: None'
p1743
aS'Mapped MLIL: return '
p1744
aS'Value: <undetermined>'
p1745
aS'Possible Values: <undetermined>'
p1746
aS'Prefix operands: [<LLIL_RET>, <LLIL_POP 4>]'
p1747
aS'Postfix operands: [<LLIL_POP 4>, <LLIL_RET>]'
p1748
aS'SSA form: <return> jump([esp#0].d @ mem#2)'
p1749
aS'Non-SSA form: <return> jump(pop)'
p1750
aS'MLIL: None'
p1751
aS'Mapped MLIL: jump([(eax << 2) + 0x1fae].d => 17 @ 0x1fb6)'
p1752
aS'Value: <undetermined>'
p1753
aS'Possible Values: <undetermined>'
p1754
aS'Prefix operands: [<LLIL_JUMP_TO>, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_LSL 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 2L, <LLIL_CONST 4>, 8110L, [17L]]'
p1755
aS'Postfix operands: [eax, <LLIL_REG 4>, 2L, <LLIL_CONST 1>, <LLIL_LSL 4>, 8110L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, [17L], <LLIL_JUMP_TO>]'
p1756
aS'SSA form: jump([(eax#4 << 2) + 0x1fae].d @ mem#2 => 19 @ 0x1fb6)'
p1757
aS'Non-SSA form: jump([(eax << 2) + 0x1fae].d => 17 @ 0x1fb6)'
p1758
aS'MLIL: ebx = 1'
p1759
aS'Mapped MLIL: ebx = 1'
p1760
aS'Value: <undetermined>'
p1761
aS'Possible Values: <undetermined>'
p1762
aS'Prefix operands: [<LLIL_SET_REG 4>, ebx, <LLIL_CONST 4>, 1L]'
p1763
aS'Postfix operands: [ebx, 1L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1764
aS'SSA form: ebx#3 = 1'
p1765
aS'Non-SSA form: ebx = 1'
p1766
aS'MLIL: None'
p1767
aS'Mapped MLIL: goto 4 @ 0x1f91'
p1768
aS'Value: <undetermined>'
p1769
aS'Possible Values: <undetermined>'
p1770
aS'Prefix operands: [<LLIL_GOTO>, 4L]'
p1771
aS'Postfix operands: [4L, <LLIL_GOTO>]'
p1772
aS'SSA form: goto 4'
p1773
aS'Non-SSA form: goto 4'
p1774
aS'MLIL: ebx = 2'
p1775
aS'Mapped MLIL: ebx = 2'
p1776
aS'Value: <undetermined>'
p1777
aS'Possible Values: <undetermined>'
p1778
aS'Prefix operands: [<LLIL_SET_REG 4>, ebx, <LLIL_CONST 4>, 2L]'
p1779
aS'Postfix operands: [ebx, 2L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1780
aS'SSA form: ebx#4 = 2'
p1781
aS'Non-SSA form: ebx = 2'
p1782
aS'MLIL: None'
p1783
aS'Mapped MLIL: goto 4 @ 0x1f91'
p1784
aS'Value: <undetermined>'
p1785
aS'Possible Values: <undetermined>'
p1786
aS'Prefix operands: [<LLIL_GOTO>, 4L]'
p1787
aS'Postfix operands: [4L, <LLIL_GOTO>]'
p1788
aS'SSA form: goto 4'
p1789
aS'Non-SSA form: goto 4 @ 0x1f91'
p1790
aS'MLIL: esi = 1'
p1791
aS'Mapped MLIL: esi = 1'
p1792
aS'Value: <undetermined>'
p1793
aS'Possible Values: <undetermined>'
p1794
aS'Prefix operands: [<LLIL_SET_REG 4>, esi, <LLIL_CONST 4>, 1L]'
p1795
aS'Postfix operands: [esi, 1L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1796
aS'SSA form: esi#3 = 1'
p1797
aS'Non-SSA form: esi = 1'
p1798
aS'MLIL: None'
p1799
aS'Mapped MLIL: goto 9 @ 0x1fc5'
p1800
aS'Value: <undetermined>'
p1801
aS'Possible Values: <undetermined>'
p1802
aS'Prefix operands: [<LLIL_GOTO>, 9L]'
p1803
aS'Postfix operands: [9L, <LLIL_GOTO>]'
p1804
aS'SSA form: goto 10 @ 0x1fc5'
p1805
aS'Non-SSA form: goto 9 @ 0x1fc5'
p1806
aS'MLIL: None'
p1807
aS'Mapped MLIL: esp = &var_4'
p1808
aS'Value: <undetermined>'
p1809
aS'Possible Values: <undetermined>'
p1810
aS'Prefix operands: [<LLIL_SET_REG 4>, esp, <LLIL_SUB 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p1811
aS'Postfix operands: [esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p1812
aS'SSA form: esp#1 = esp#0 - 4'
p1813
aS'Non-SSA form: esp = esp - 4'
p1814
aS'MLIL: var_4 = 0x2a'
p1815
aS'Mapped MLIL: var_4 = 0x2a'
p1816
aS'Value: <undetermined>'
p1817
aS'Possible Values: <undetermined>'
p1818
aS'Prefix operands: [<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 42L]'
p1819
aS'Postfix operands: [esp, <LLIL_REG 4>, 42L, <LLIL_CONST 4>, <LLIL_STORE 4>]'
p1820
aS'SSA form: [esp#1].d = 0x2a @ mem#0 -> mem#1'
p1821
aS'Non-SSA form: [esp].d = 0x2a'
p1822
aS'MLIL: None'
p1823
aS'Mapped MLIL: eax = &var_4'
p1824
aS'Value: <undetermined>'
p1825
aS'Possible Values: <undetermined>'
p1826
aS'Prefix operands: [<LLIL_SET_REG 4>, eax, <LLIL_REG 4>, esp]'
p1827
aS'Postfix operands: [eax, esp, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p1828
aS'SSA form: eax#1 = esp#1'
p1829
aS'Non-SSA form: eax = esp'
p1830
aS'MLIL: var_8 = &var_4'
p1831
aS'Mapped MLIL: var_8 = &var_4'
p1832
aS'Value: <undetermined>'
p1833
aS'Possible Values: <undetermined>'
p1834
aS'Prefix operands: [<LLIL_PUSH 4>, <LLIL_REG 4>, eax]'
p1835
aS'Postfix operands: [eax, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p1836
aS'SSA form: [esp#1 - 4].d = eax#1 @ mem#1 -> mem#2'
p1837
aS'Non-SSA form: push(eax)'
p1838
aS'MLIL: 0x1ff5(var_8)'
p1839
aS'Mapped MLIL: eax = call(0x1ff5, stack = &var_8)'
p1840
aS'Value: <undetermined>'
p1841
aS'Possible Values: <undetermined>'
p1842
aS'Prefix operands: [<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8181L, 0L, {}]'
p1843
aS'Postfix operands: [8181L, <LLIL_CONST_PTR 4>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1844
aS'SSA form: eax#2, mem#3 = call(0x1ff5, stack = esp#2 @ mem#2)'
p1845
aS'Non-SSA form: call(0x1ff5)'
p1846
aS'MLIL: None'
p1847
aS'Mapped MLIL: esp = &var_4'
p1848
aS'Value: <undetermined>'
p1849
aS'Possible Values: <undetermined>'
p1850
aS'Prefix operands: [<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p1851
aS'Postfix operands: [esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1852
aS'SSA form: esp#3 = esp#2 + 4'
p1853
aS'Non-SSA form: esp = esp + 4'
p1854
aS'MLIL: eax = var_4'
p1855
aS'Mapped MLIL: eax = var_4'
p1856
aS'Value: <undetermined>'
p1857
aS'Possible Values: <undetermined>'
p1858
aS'Prefix operands: [<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_REG 4>, esp]'
p1859
aS'Postfix operands: [eax, esp, <LLIL_REG 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p1860
aS'SSA form: eax#3 = [esp#3].d @ mem#3'
p1861
aS'Non-SSA form: eax = [esp].d'
p1862
aS'MLIL: None'
p1863
aS'Mapped MLIL: esp = &arg_0'
p1864
aS'Value: <undetermined>'
p1865
aS'Possible Values: <undetermined>'
p1866
aS'Prefix operands: [<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p1867
aS'Postfix operands: [esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1868
aS'SSA form: esp#4 = esp#3 + 4'
p1869
aS'Non-SSA form: esp = esp + 4'
p1870
aS'MLIL: None'
p1871
aS'Mapped MLIL: return '
p1872
aS'Value: <undetermined>'
p1873
aS'Possible Values: <undetermined>'
p1874
aS'Prefix operands: [<LLIL_RET>, <LLIL_POP 4>]'
p1875
aS'Postfix operands: [<LLIL_POP 4>, <LLIL_RET>]'
p1876
aS'SSA form: <return> jump([esp#4].d @ mem#3)'
p1877
aS'Non-SSA form: <return> jump(pop)'
p1878
aS'MLIL: eax = 0x2a'
p1879
aS'Mapped MLIL: eax = 0x2a'
p1880
aS'Value: <undetermined>'
p1881
aS'Possible Values: <undetermined>'
p1882
aS'Prefix operands: [<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 42L]'
p1883
aS'Postfix operands: [eax, 42L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1884
aS'SSA form: eax#1 = 0x2a'
p1885
aS'Non-SSA form: eax = 0x2a'
p1886
aS'MLIL: None'
p1887
aS'Mapped MLIL: return '
p1888
aS'Value: <undetermined>'
p1889
aS'Possible Values: <undetermined>'
p1890
aS'Prefix operands: [<LLIL_RET>, <LLIL_POP 4>]'
p1891
aS'Postfix operands: [<LLIL_POP 4>, <LLIL_RET>]'
p1892
aS'SSA form: <return> jump([esp#0].d @ mem#0)'
p1893
aS'Non-SSA form: <return> jump(pop)'
p1894
aS'MLIL: eax = testautovar'
p1895
aS'Mapped MLIL: eax = testautovar'
p1896
aS'Value: <undetermined>'
p1897
aS'Possible Values: <undetermined>'
p1898
aS'Prefix operands: [<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p1899
aS'Postfix operands: [eax, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p1900
aS'SSA form: eax#1 = [esp#0 + 4].d @ mem#0'
p1901
aS'Non-SSA form: eax = [esp + 4].d'
p1902
aS'MLIL: [eax].d = 2'
p1903
aS'Mapped MLIL: [eax].d = 2'
p1904
aS'Value: <undetermined>'
p1905
aS'Possible Values: <undetermined>'
p1906
aS'Prefix operands: [<LLIL_STORE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 2L]'
p1907
aS'Postfix operands: [eax, <LLIL_REG 4>, 2L, <LLIL_CONST 4>, <LLIL_STORE 4>]'
p1908
aS'SSA form: [eax#1].d = 2 @ mem#0 -> mem#1'
p1909
aS'Non-SSA form: [eax].d = 2'
p1910
aS'MLIL: None'
p1911
aS'Mapped MLIL: return '
p1912
aS'Value: <undetermined>'
p1913
aS'Possible Values: <undetermined>'
p1914
aS'Prefix operands: [<LLIL_RET>, <LLIL_POP 4>]'
p1915
aS'Postfix operands: [<LLIL_POP 4>, <LLIL_RET>]'
p1916
aS'SSA form: <return> jump([esp#0].d @ mem#1)'
p1917
aS'Non-SSA form: <return> jump(pop)'
p1918
asS'test_med_il_vars'
p1919
(lp1920
S'SSA var definition: 0'
p1921
aS'SSA var uses: [1L]'
p1922
aS'SSA var value: <undetermined>'
p1923
aS'SSA var possible values: <undetermined>'
p1924
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_3#1, mem#1 = 0x1fca() @ mem#0>>'
p1925
aS'SSA var definition: 0'
p1926
aS'SSA var uses: [1L]'
p1927
aS'SSA var value: <undetermined>'
p1928
aS'SSA var possible values: <undetermined>'
p1929
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#2 = eax_3#1 - 0x2a>>'
p1930
aS'SSA var definition: 1'
p1931
aS'SSA var uses: [3L, 7L]'
p1932
aS'SSA var value: <undetermined>'
p1933
aS'SSA var possible values: <undetermined>'
p1934
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#2 = eax_3#1 - 0x2a>>'
p1935
aS'SSA var definition: 2'
p1936
aS'SSA var uses: [4L]'
p1937
aS'SSA var value: <const 0x0>'
p1938
aS'SSA var possible values: <const 0x0>'
p1939
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ebx#1 = 0>>'
p1940
aS'SSA var definition: 1'
p1941
aS'SSA var uses: [3L, 7L]'
p1942
aS'SSA var value: <undetermined>'
p1943
aS'SSA var possible values: <undetermined>'
p1944
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax#2 u>= 2) then 4 @ 0x0 else 5 @ 0x1f73>>'
p1945
aS'SSA var definition: 5'
p1946
aS'SSA var uses: [8L]'
p1947
aS'SSA var value: <const 0x0>'
p1948
aS'SSA var possible values: <const 0x0>'
p1949
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: esi#1 = 0>>'
p1950
aS'SSA var definition: 1'
p1951
aS'SSA var uses: [3L, 7L]'
p1952
aS'SSA var value: <undetermined>'
p1953
aS'SSA var possible values: <unsigned ranges: [<range: 0x0 to 0x1>]>'
p1954
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: jump([(eax#2 << 2) + 0x1f7a].d @ mem#1 => 10 @ 0x1f82, 12 @ 0x1f8c)>>'
p1955
aS'SSA var definition: 4'
p1956
aS'SSA var uses: [8L]'
p1957
aS'SSA var value: <undetermined>'
p1958
aS'SSA var possible values: <in set([0x0, 0x1, 0x2])>'
p1959
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#3 = ebx#4>>'
p1960
aS'SSA var definition: 8'
p1961
aS'SSA var uses: [9L]'
p1962
aS'SSA var value: <undetermined>'
p1963
aS'SSA var possible values: <in set([0x0, 0x1, 0x2])>'
p1964
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#3 = ebx#4>>'
p1965
aS'SSA var definition: 8'
p1966
aS'SSA var uses: [9L]'
p1967
aS'SSA var value: <undetermined>'
p1968
aS'SSA var possible values: <in set([0x0, 0x1, 0x2])>'
p1969
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#4 = eax_1#3 + esi#3>>'
p1970
aS'SSA var definition: 8'
p1971
aS'SSA var uses: [9L]'
p1972
aS'SSA var value: <undetermined>'
p1973
aS'SSA var possible values: <in set([0x0, 0x1])>'
p1974
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#4 = eax_1#3 + esi#3>>'
p1975
aS'SSA var definition: 9'
p1976
aS'SSA var uses: [10L]'
p1977
aS'SSA var value: <undetermined>'
p1978
aS'SSA var possible values: <undetermined>'
p1979
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#4 = eax_1#3 + esi#3>>'
p1980
aS'SSA var definition: 12'
p1981
aS'SSA var uses: [4L]'
p1982
aS'SSA var value: <const 0x1>'
p1983
aS'SSA var possible values: <const 0x1>'
p1984
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ebx#2 = 1>>'
p1985
aS'SSA var definition: 14'
p1986
aS'SSA var uses: [4L]'
p1987
aS'SSA var value: <const 0x2>'
p1988
aS'SSA var possible values: <const 0x2>'
p1989
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ebx#3 = 2>>'
p1990
aS'SSA var definition: 16'
p1991
aS'SSA var uses: [8L]'
p1992
aS'SSA var value: <const 0x1>'
p1993
aS'SSA var possible values: <const 0x1>'
p1994
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: esi#2 = 1>>'
p1995
aS'SSA var definition: 0'
p1996
aS'SSA var uses: []'
p1997
aS'SSA var value: <const 0x2a>'
p1998
aS'SSA var possible values: <const 0x2a>'
p1999
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4 @ mem#0 -> mem#1 = 0x2a>>'
p2000
aS'SSA var definition: 1'
p2001
aS'SSA var uses: [2L]'
p2002
aS'SSA var value: <stack frame offset -0x4>'
p2003
aS'SSA var possible values: <stack frame offset -0x4>'
p2004
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_8#1 = &var_4>>'
p2005
aS'SSA var definition: 1'
p2006
aS'SSA var uses: [2L]'
p2007
aS'SSA var value: <stack frame offset -0x4>'
p2008
aS'SSA var possible values: <stack frame offset -0x4>'
p2009
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: mem#2 = 0x1ff5(var_8#1) @ mem#1>>'
p2010
aS'SSA var definition: None'
p2011
aS'SSA var uses: [3L]'
p2012
aS'SSA var value: <undetermined>'
p2013
aS'SSA var possible values: <undetermined>'
p2014
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4 @ mem#2>>'
p2015
aS'SSA var definition: 3'
p2016
aS'SSA var uses: [4L]'
p2017
aS'SSA var value: <undetermined>'
p2018
aS'SSA var possible values: <undetermined>'
p2019
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4 @ mem#2>>'
p2020
aS'SSA var definition: 0'
p2021
aS'SSA var uses: []'
p2022
aS'SSA var value: <const 0x2a>'
p2023
aS'SSA var possible values: <const 0x2a>'
p2024
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = 0x2a>>'
p2025
aS'SSA var definition: None'
p2026
aS'SSA var uses: [0L]'
p2027
aS'SSA var value: <undetermined>'
p2028
aS'SSA var possible values: <undetermined>'
p2029
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = testautovar#0>>'
p2030
aS'SSA var definition: 0'
p2031
aS'SSA var uses: [1L, 2L]'
p2032
aS'SSA var value: <undetermined>'
p2033
aS'SSA var possible values: <undetermined>'
p2034
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = testautovar#0>>'
p2035
aS'SSA var definition: 0'
p2036
aS'SSA var uses: [1L, 2L]'
p2037
aS'SSA var value: <undetermined>'
p2038
aS'SSA var possible values: <undetermined>'
p2039
aS'SSA var version: <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [eax#1].d = 2 @ mem#0 -> mem#1>>'
p2040
as.
(dp0
S'test_function_can_return'
p1
(lp2
S'_main SymbolType.DataSymbol 0x1f5dL True'
p3
aS'aliased SymbolType.DataSymbol 0x1fcaL True'
p4
aS'not_aliased SymbolType.DataSymbol 0x1fefL True'
p5
aS'write_to_arg SymbolType.DataSymbol 0x1ff5L True'
p6
asS'test_function_stack'
p7
(lp8
S"['__return_addr', 'testautovar']"
p9
aS'<undetermined>'
p10
ag10
aS'None'
p11
aS"['var_8', 'var_4', '__return_addr', 'testautovar']"
p12
aS'<return address>'
p13
ag13
aS'None'
p14
aS"['__return_addr', 'testautovar']"
p15
ag10
ag10
aS'None'
p16
aS"['__return_addr', 'testautovar']"
p17
ag10
ag10
aS'None'
p18
asS'test_strings'
p19
(lp20
S'__PAGEZERO StringType.AsciiString 0x1024L'
p21
aS'__TEXT StringType.AsciiString 0x105cL'
p22
aS'__text StringType.AsciiString 0x108cL'
p23
aS'__TEXT StringType.AsciiString 0x109cL'
p24
aS'__LINKEDIT StringType.AsciiString 0x10d8L'
p25
aS'/usr/lib/dyld StringType.AsciiString 0x11acL'
p26
aS'/usr/lib/libSystem.B.dylib StringType.AsciiString 0x1224L'
p27
aS"'aliased_table StringType.AsciiString 0x2004L"
p28
aS'Lnot_aliased_table StringType.AsciiString 0x2013L'
p29
aS'_mh_execute_header StringType.AsciiString 0x2029L'
p30
aS'Cmain StringType.AsciiString 0x203cL'
p31
aS'__mh_execute_header StringType.AsciiString 0x2106L'
p32
aS'_main StringType.AsciiString 0x211aL'
p33
aS'aliased_table StringType.AsciiString 0x2120L'
p34
aS'not_aliased_table StringType.AsciiString 0x212eL'
p35
aS'dyld_stub_binder StringType.AsciiString 0x2140L'
p36
aS'aliased_one StringType.AsciiString 0x2151L'
p37
aS'aliased_two StringType.AsciiString 0x215dL'
p38
aS'aliased_done StringType.AsciiString 0x2169L'
p39
aS'not_aliased_one StringType.AsciiString 0x2176L'
p40
aS'not_aliased_two StringType.AsciiString 0x2186L'
p41
aS'not_aliased_done StringType.AsciiString 0x2196L'
p42
aS'aliased StringType.AsciiString 0x21a7L'
p43
aS'not_aliased StringType.AsciiString 0x21afL'
p44
aS'write_to_arg StringType.AsciiString 0x21bbL'
p45
asS'test_function_low_il_basic_blocks'
p46
(lp47
S'0x0L 0x4L 2'
p48
aS'0x4L 0x8L 2'
p49
aS'0x8L 0x9L 2'
p50
aS'0x9L 0xcL 0'
p51
aS'0xcL 0xdL 1'
p52
aS'0xdL 0xfL 1'
p53
aS'0xfL 0x11L 1'
p54
aS'0x11L 0x13L 1'
p55
aS'0x0L 0x9L 0'
p56
aS'0x0L 0x2L 0'
p57
aS'0x0L 0x3L 0'
p58
asS'test_functions_attributes'
p59
(lp60
S"['testautovar', 'eax', 'eax_1', 'eax_2', 'eax_3', 'ebx', 'esi']"
p61
aS'[<branch x86:0x1f73 -> x86:0x1f82>, <branch x86:0x1f73 -> x86:0x1f8c>, <branch x86:0x1fa7 -> x86:0x1fb6>]'
p62
aS'{}'
p63
aI1
aS"['eax', 'ebx', 'esi']"
p64
aS'False'
p65
aS'True'
p66
aI34
ag10
aS'testcomment _main'
p67
ag65
ag65
aS'call(0x1fca)'
p68
aS'[]'
p69
aS'[]'
p70
aS"['eax', 'ecx', 'edx']"
p71
aS'[]'
p72
aS'[<constant pointer 0x1fca>]'
p73
aS'call(0x1fca)'
p74
aS'[]'
p75
aS'[]'
p76
aS'<graph of <func: x86@0x1f5d>>'
p77
aS'[]'
p78
aS'[]'
p79
aS'<block: x86@0x1f5d-0x1f73>'
p80
aS'<color: #ff00ff>'
p81
aS'[<0x1f5d: int32_t _main()>]'
p82
aS"['var_8', 'var_4', 'testautovar', 'eax']"
p83
aS'[]'
p84
aS'{}'
p85
aI1
aS"['eax']"
p86
ag65
ag66
aI10
ag10
aS'testcomment aliased'
p87
ag65
ag65
aS'esp = esp - 4'
p88
aS'[]'
p89
aS"['esp']"
p90
aS"['esp']"
p91
aS'[]'
p92
aS'[<constant 0x4 size 4>]'
p93
aS'esp = sub.d{*}(esp, 4)'
p94
aS'[]'
p95
aS"['c', 'p', 'a', 'z', 's', 'o']"
p96
aS'<graph of <func: x86@0x1fca>>'
p97
aS'[]'
p98
aS'[]'
p99
aS'<block: x86@0x1fca-0x1fef>'
p100
aS'<color: #ff00ff>'
p101
aS'[<0x1fca: int32_t aliased()>]'
p102
aS"['testautovar', 'eax']"
p103
aS'[]'
p104
aS'{}'
p105
aI1
aS"['eax']"
p106
ag65
ag66
aI3
ag10
aS'testcomment not_aliased'
p107
ag65
ag65
aS'eax = 0x2a'
p108
aS'[]'
p109
aS'[]'
p110
aS"['eax']"
p111
aS'[]'
p112
aS'[<constant 0x2a size 4>]'
p113
aS'eax = 0x2a'
p114
aS'[]'
p115
aS'[]'
p116
aS'<graph of <func: x86@0x1fef>>'
p117
aS'[]'
p118
aS'[]'
p119
aS'<block: x86@0x1fef-0x1ff5>'
p120
aS'<color: #ff00ff>'
p121
aS'[<0x1fef: int32_t not_aliased()>]'
p122
aS"['testautovar', 'eax']"
p123
aS'[]'
p124
aS'{}'
p125
aI1
aS"['eax']"
p126
ag65
ag66
aI4
ag10
aS'testcomment write_to_arg'
p127
ag65
ag65
aS'eax = [esp + 4 {testautovar}].d'
p128
aS'[]'
p129
aS"['esp']"
p130
aS"['eax']"
p131
aS'[<operand 1 ref to testautovar>]'
p132
aS'[<constant 0x4 size 4>]'
p133
aS'eax = [esp + 4].d'
p134
aS'[]'
p135
aS'[]'
p136
aS'<graph of <func: x86@0x1ff5>>'
p137
aS'[]'
p138
aS'[]'
p139
aS'<block: x86@0x1ff5-0x2000>'
p140
aS'<color: #ff00ff>'
p141
aS'[<0x1ff5: int32_t* write_to_arg(int32_t testautovar)>]'
p142
asS'test_function_starts'
p143
(lp144
S'0x1f5dL'
p145
aS'0x1fcaL'
p146
aS'0x1fefL'
p147
aS'0x1ff5L'
p148
asS'test_function_llil'
p149
(lp150
S'<block: x86@0x0-0x4>'
p151
aS'<block: x86@0x4-0x8>'
p152
aS'<block: x86@0x8-0x9>'
p153
aS'<block: x86@0x9-0xc>'
p154
aS'<block: x86@0xc-0xd>'
p155
aS'<block: x86@0xd-0xf>'
p156
aS'<block: x86@0xf-0x11>'
p157
aS'<block: x86@0x11-0x13>'
p158
aS'call(0x1fca)'
p159
aS'eax = eax - 0x2a'
p160
aS'ebx = 0'
p161
aS'if (eax u>= 2) then 4 @ 0x1f91 else 8 @ 0x1f73'
p162
aS'call(0x1fef)'
p163
aS'eax = eax - 0x2a'
p164
aS'esi = 0'
p165
aS'if (eax u>= 2) then 9 @ 0x1fc5 else 12 @ 0x1fa7'
p166
aS'jump([(eax << 2) + 0x1f7a].d => 13 @ 0x1f82, 15 @ 0x1f8c)'
p167
aS'eax = ebx'
p168
aS'eax = eax + esi'
p169
aS'<return> jump(pop)'
p170
aS'jump([(eax << 2) + 0x1fae {0x1fae}].d => 17 @ 0x1fb6)'
p171
aS'ebx = 1'
p172
aS'goto 4'
p173
aS'ebx = 2'
p174
aS'goto 4 @ 0x1f91'
p175
aS'esi = 1'
p176
aS'goto 9 @ 0x1fc5'
p177
aS'<block: x86@0x0-0x4>'
p178
aS'<block: x86@0x4-0x7>'
p179
aS'<block: x86@0x7-0x8>'
p180
aS'<block: x86@0x8-0xb>'
p181
aS'<block: x86@0xb-0xc>'
p182
aS'<block: x86@0xc-0xe>'
p183
aS'<block: x86@0xe-0x10>'
p184
aS'<block: x86@0x10-0x12>'
p185
aS'eax_3 = 0x1fca()'
p186
aS'eax = eax_3 - 0x2a'
p187
aS'ebx = 0'
p188
aS'if (eax u>= 2) then 4 @ 0x1f91 else 7 @ 0x1f73'
p189
aS'0x1fef()'
p190
aS'esi = 0'
p191
aS'if (false) then 8 @ 0x1fc5 else 11 @ 0x1fa7'
p192
aS'jump([(eax << 2) + 0x1f7a].d => 12 @ 0x1f82, 14 @ 0x1f8c)'
p193
aS'eax_1 = ebx'
p194
aS'eax_2 = eax_1 + esi'
p195
aS'return eax_2'
p196
aS'jump(0x1fb6 => 16 @ 0x1fb6)'
p197
aS'ebx = 1'
p198
aS'goto 4 @ 0x1f91'
p199
aS'ebx = 2'
p200
aS'goto 4 @ 0x1f91'
p201
aS'esi = 1'
p202
aS'goto 8 @ 0x1fc5'
p203
aS"(['call', '    ', '0x1fca'], 8029L)"
p204
aS"(['sub', '     ', 'eax', ', ', '0x2a'], 8034L)"
p205
aS"(['mov', '     ', 'ebx', ', ', '0x0'], 8039L)"
p206
aS"(['cmp', '     ', 'eax', ', ', '0x2'], 8044L)"
p207
aS"(['jae', '     ', '0x1f91'], 8049L)"
p208
aS"(['call', '    ', '0x1fef'], 8081L)"
p209
aS"(['sub', '     ', 'eax', ', ', '0x2a'], 8086L)"
p210
aS"(['mov', '     ', 'esi', ', ', '0x0'], 8091L)"
p211
aS"(['cmp', '     ', 'eax', ', ', '0x2'], 8096L)"
p212
aS"(['jae', '     ', '0x1fc5'], 8101L)"
p213
aS"(['jmp', '     ', 'dword ', '[', 'eax', '*4', '+', '0x1f7a', ']'], 8051L)"
p214
aS"(['mov', '     ', 'eax', ', ', 'ebx'], 8133L)"
p215
aS"(['add', '     ', 'eax', ', ', 'esi'], 8135L)"
p216
aS"(['retn', '    '], 8137L)"
p217
aS"(['jmp', '     ', 'dword ', '[', 'eax', '*4', '+', '0x1fae', ']'], 8103L)"
p218
aS"(['mov', '     ', 'ebx', ', ', '0x1'], 8066L)"
p219
aS"(['jmp', '     ', '0x1f91'], 8071L)"
p220
aS"(['mov', '     ', 'ebx', ', ', '0x2'], 8076L)"
p221
aS"(['mov', '     ', 'esi', ', ', '0x1'], 8118L)"
p222
aS"(['jmp', '     ', '0x1fc5'], 8123L)"
p223
aS'<block: x86@0x0-0x9>'
p224
aS'esp = esp - 4'
p225
aS'[esp {var_4}].d = 0x2a'
p226
aS'eax = esp {var_4}'
p227
aS'push(eax)'
p228
aS'call(0x1ff5)'
p229
aS'esp = esp + 4'
p230
aS'eax = [esp {var_4}].d'
p231
aS'esp = esp + 4'
p232
aS'<return> jump(pop)'
p233
aS'<block: x86@0x0-0x5>'
p234
aS'var_4 = 0x2a'
p235
aS'var_8 = &var_4'
p236
aS'0x1ff5(var_8)'
p237
aS'eax = var_4'
p238
aS'return eax'
p239
aS"(['sub', '     ', 'esp', ', ', '0x4'], 8138L)"
p240
aS"(['mov', '     ', 'dword ', '[', 'esp', ']', ', ', '0x2a'], 8144L)"
p241
aS"(['mov', '     ', 'eax', ', ', 'esp'], 8151L)"
p242
aS"(['push', '    ', 'eax'], 8153L)"
p243
aS"(['call', '    ', '0x1ff5'], 8154L)"
p244
aS"(['add', '     ', 'esp', ', ', '0x4'], 8159L)"
p245
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'esp', ']'], 8165L)"
p246
aS"(['add', '     ', 'esp', ', ', '0x4'], 8168L)"
p247
aS"(['retn', '    '], 8174L)"
p248
aS'<block: x86@0x0-0x2>'
p249
aS'eax = 0x2a'
p250
aS'<return> jump(pop)'
p251
aS'<block: x86@0x0-0x2>'
p252
aS'eax = 0x2a'
p253
aS'return 0x2a'
p254
aS"(['mov', '     ', 'eax', ', ', '0x2a'], 8175L)"
p255
aS"(['retn', '    '], 8180L)"
p256
aS'<block: x86@0x0-0x3>'
p257
aS'eax = [esp + 4 {arg1}].d'
p258
aS'[eax].d = 2'
p259
aS'<return> jump(pop)'
p260
aS'<block: x86@0x0-0x3>'
p261
aS'eax = arg1'
p262
aS'[eax].d = 2'
p263
aS'return eax'
p264
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'esp', '+', '0x4', ']'], 8181L)"
p265
aS"(['mov', '     ', 'dword ', '[', 'eax', ']', ', ', '0x2'], 8185L)"
p266
aS"(['retn', '    '], 8191L)"
p267
asS'test_low_il_ssa'
p268
(lp269
S'None'
p270
aS'[]'
p271
ag10
aS'None'
p272
aS'[]'
p273
ag10
aS'None'
p274
aS'[]'
p275
ag10
aS'None'
p276
aS'[]'
p277
ag10
aS'None'
p278
aS'[]'
p279
ag10
aS'None'
p280
aS'[]'
p281
ag10
aS'None'
p282
aS'[]'
p283
ag10
aS'None'
p284
aS'[]'
p285
ag10
aS'None'
p286
aS'[]'
p287
ag10
aS'None'
p288
aS'[]'
p289
ag10
aS'None'
p290
aS'[]'
p291
ag10
aS'None'
p292
aS'[]'
p293
ag10
aS'None'
p294
aS'[]'
p295
ag10
aS'None'
p296
aS'[]'
p297
ag10
aS'None'
p298
aS'[]'
p299
ag10
aS'None'
p300
aS'[]'
p301
ag10
aS'None'
p302
aS'[]'
p303
ag10
aS'None'
p304
aS'[]'
p305
ag10
aS'None'
p306
aS'[]'
p307
ag10
aS'2'
p308
aS'[4L]'
p309
aS'<const 0x0>'
p310
aS'None'
p311
aS'[]'
p312
ag10
aS'None'
p313
aS'[]'
p314
ag10
aS'None'
p315
aS'[]'
p316
ag10
aS'None'
p317
aS'[]'
p318
ag10
aS'None'
p319
aS'[]'
p320
ag10
aS'None'
p321
aS'[]'
p322
ag10
aS'None'
p323
aS'[]'
p324
ag10
aS'None'
p325
aS'[]'
p326
ag10
aS'None'
p327
aS'[]'
p328
ag10
aS'None'
p329
aS'[]'
p330
ag10
aS'None'
p331
aS'[]'
p332
ag10
aS'None'
p333
aS'[]'
p334
ag10
aS'None'
p335
aS'[]'
p336
ag10
aS'None'
p337
aS'[]'
p338
ag10
aS'None'
p339
aS'[]'
p340
ag10
aS'6'
p341
aS'[9L]'
p342
aS'<const 0x0>'
p343
aS'None'
p344
aS'[]'
p345
ag10
aS'None'
p346
aS'[]'
p347
ag10
aS'None'
p348
aS'[]'
p349
ag10
aS'None'
p350
aS'[]'
p351
ag10
aS'None'
p352
aS'[]'
p353
ag10
aS'None'
p354
aS'[]'
p355
ag10
aS'None'
p356
aS'[]'
p357
ag10
aS'None'
p358
aS'[]'
p359
ag10
aS'None'
p360
aS'[]'
p361
ag10
aS'None'
p362
aS'[]'
p363
ag10
aS'None'
p364
aS'[]'
p365
ag10
aS'0'
p366
aS'[1L]'
p367
ag10
aS'None'
p368
aS'[]'
p369
ag10
aS'None'
p370
aS'[]'
p371
ag10
aS'None'
p372
aS'[]'
p373
ag10
aS'None'
p374
aS'[]'
p375
ag10
aS'None'
p376
aS'[]'
p377
ag10
aS'None'
p378
aS'[]'
p379
ag10
aS'None'
p380
aS'[]'
p381
ag10
aS'None'
p382
aS'[]'
p383
ag10
aS'None'
p384
aS'[]'
p385
ag10
aS'None'
p386
aS'[]'
p387
ag10
aS'None'
p388
aS'[]'
p389
ag10
aS'None'
p390
aS'[]'
p391
ag10
aS'None'
p392
aS'[]'
p393
ag10
aS'None'
p394
aS'[]'
p395
ag10
aS'None'
p396
aS'[]'
p397
ag10
aS'None'
p398
aS'[]'
p399
ag10
aS'None'
p400
aS'[]'
p401
ag10
aS'[]'
p402
ag10
aS'[]'
p403
ag10
aS'[]'
p404
ag10
aS'[]'
p405
ag10
aS'[]'
p406
ag10
aS'[]'
p407
ag10
aS'[]'
p408
ag10
aS'[]'
p409
ag10
aS'[]'
p410
ag10
aS'[]'
p411
ag10
aS'[]'
p412
ag10
aS'0'
p413
aS'0'
p414
aS'0'
p415
aS'0'
p416
aS'1'
p417
aS'1'
p418
aS'1'
p419
aS'1'
p420
aS'2'
p421
aS'2'
p422
aS'2'
p423
aS'2'
p424
aS'3'
p425
aS'3'
p426
aS'3'
p427
aS'3'
p428
aS'4'
p429
aS'5'
p430
aS'4'
p431
aS'4'
p432
aS'5'
p433
aS'6'
p434
aS'5'
p435
aS'5'
p436
aS'6'
p437
aS'7'
p438
aS'5'
p439
aS'6'
p440
aS'7'
p441
aS'8'
p442
aS'6'
p443
aS'7'
p444
aS'8'
p445
aS'9'
p446
aS'7'
p447
aS'8'
p448
aS'9'
p449
aS'11'
p450
aS'8'
p451
aS'9'
p452
aS'10'
p453
aS'12'
p454
aS'9'
p455
aS'10'
p456
aS'11'
p457
aS'13'
p458
aS'10'
p459
aS'11'
p460
aS'12'
p461
aS'14'
p462
aS'11'
p463
aS'12'
p464
aS'13'
p465
aS'15'
p466
aS'12'
p467
aS'13'
p468
aS'14'
p469
aS'16'
p470
aS'13'
p471
aS'14'
p472
aS'15'
p473
aS'17'
p474
aS'14'
p475
aS'15'
p476
aS'16'
p477
aS'18'
p478
aS'15'
p479
aS'16'
p480
aS'17'
p481
aS'19'
p482
aS'16'
p483
aS'17'
p484
aS'18'
p485
aS'20'
p486
aS'17'
p487
aS'18'
p488
aS'None'
p489
aS'[]'
p490
ag10
aS'None'
p491
aS'[]'
p492
ag10
aS'None'
p493
aS'[]'
p494
ag10
aS'None'
p495
aS'[]'
p496
ag10
aS'None'
p497
aS'[]'
p498
ag10
aS'None'
p499
aS'[]'
p500
ag10
aS'None'
p501
aS'[]'
p502
ag10
aS'None'
p503
aS'[]'
p504
ag10
aS'None'
p505
aS'[]'
p506
ag10
aS'None'
p507
aS'[]'
p508
ag10
aS'None'
p509
aS'[]'
p510
ag10
aS'None'
p511
aS'[]'
p512
ag10
aS'None'
p513
aS'[]'
p514
ag10
aS'None'
p515
aS'[]'
p516
ag10
aS'None'
p517
aS'[]'
p518
ag10
aS'None'
p519
aS'[]'
p520
ag10
aS'None'
p521
aS'[]'
p522
ag10
aS'None'
p523
aS'[]'
p524
ag10
aS'None'
p525
aS'[]'
p526
ag10
aS'None'
p527
aS'[]'
p528
ag10
aS'None'
p529
aS'[]'
p530
ag10
aS'None'
p531
aS'[]'
p532
ag10
aS'0'
p533
aS'[1L, 2L, 3L]'
p534
aS'<stack frame offset -0x4>'
p535
aS'None'
p536
aS'[]'
p537
ag10
aS'None'
p538
aS'[]'
p539
ag10
aS'None'
p540
aS'[]'
p541
ag10
aS'None'
p542
aS'[]'
p543
ag10
aS'None'
p544
aS'[]'
p545
ag10
aS'None'
p546
aS'[]'
p547
ag10
aS'None'
p548
aS'[]'
p549
ag10
aS'None'
p550
aS'[]'
p551
ag10
aS'None'
p552
aS'[]'
p553
ag10
aS'None'
p554
aS'[]'
p555
ag10
aS'None'
p556
aS'[]'
p557
ag10
aS'None'
p558
aS'[]'
p559
ag10
aS'None'
p560
aS'[]'
p561
ag10
aS'None'
p562
aS'[]'
p563
ag10
aS'None'
p564
aS'[]'
p565
ag10
aS'None'
p566
aS'[]'
p567
ag10
aS'None'
p568
aS'[]'
p569
ag10
aS'None'
p570
aS'[]'
p571
ag10
aS'None'
p572
aS'[]'
p573
ag10
aS'None'
p574
aS'[]'
p575
ag10
aS'None'
p576
aS'[]'
p577
ag10
aS'None'
p578
aS'[]'
p579
ag10
aS'None'
p580
aS'[]'
p581
ag10
aS'None'
p582
aS'[]'
p583
ag10
aS'2'
p584
aS'[3L]'
p585
aS'<stack frame offset -0x4>'
p586
aS'None'
p587
aS'[]'
p588
ag10
aS'None'
p589
aS'[]'
p590
ag10
aS'None'
p591
aS'[]'
p592
ag10
aS'None'
p593
aS'[]'
p594
ag10
aS'None'
p595
aS'[]'
p596
ag10
aS'None'
p597
aS'[]'
p598
ag10
aS'None'
p599
aS'[]'
p600
ag10
aS'None'
p601
aS'[]'
p602
ag10
aS'None'
p603
aS'[]'
p604
ag10
aS'None'
p605
aS'[]'
p606
ag10
aS'None'
p607
aS'[]'
p608
ag10
aS'None'
p609
aS'[]'
p610
ag10
aS'None'
p611
aS'[]'
p612
ag10
aS'None'
p613
aS'[]'
p614
ag10
aS'None'
p615
aS'[]'
p616
ag10
aS'None'
p617
aS'[]'
p618
ag10
aS'None'
p619
aS'[]'
p620
ag10
aS'[]'
p621
ag10
aS'[]'
p622
ag10
aS'[]'
p623
ag10
aS'[]'
p624
ag10
aS'[]'
p625
ag10
aS'[]'
p626
ag10
aS'[]'
p627
ag10
aS'[]'
p628
ag10
aS'[]'
p629
ag10
aS'[]'
p630
ag10
aS'[]'
p631
ag10
aS'0'
p632
aS'0'
p633
aS'None'
p634
aS'0'
p635
aS'1'
p636
aS'1'
p637
aS'0'
p638
aS'1'
p639
aS'2'
p640
aS'2'
p641
aS'None'
p642
aS'2'
p643
aS'3'
p644
aS'3'
p645
aS'1'
p646
aS'3'
p647
aS'4'
p648
aS'5'
p649
aS'2'
p650
aS'5'
p651
aS'5'
p652
aS'6'
p653
aS'None'
p654
aS'6'
p655
aS'6'
p656
aS'7'
p657
aS'3'
p658
aS'7'
p659
aS'7'
p660
aS'8'
p661
aS'None'
p662
aS'8'
p663
aS'8'
p664
aS'9'
p665
aS'4'
p666
aS'9'
p667
aS'None'
p668
aS'[]'
p669
ag10
aS'None'
p670
aS'[]'
p671
ag10
aS'None'
p672
aS'[]'
p673
ag10
aS'None'
p674
aS'[]'
p675
ag10
aS'None'
p676
aS'[]'
p677
ag10
aS'None'
p678
aS'[]'
p679
ag10
aS'None'
p680
aS'[]'
p681
ag10
aS'None'
p682
aS'[]'
p683
ag10
aS'None'
p684
aS'[]'
p685
ag10
aS'None'
p686
aS'[]'
p687
ag10
aS'None'
p688
aS'[]'
p689
ag10
aS'None'
p690
aS'[]'
p691
ag10
aS'None'
p692
aS'[]'
p693
ag10
aS'None'
p694
aS'[]'
p695
ag10
aS'None'
p696
aS'[]'
p697
ag10
aS'None'
p698
aS'[]'
p699
ag10
aS'None'
p700
aS'[]'
p701
ag10
aS'None'
p702
aS'[]'
p703
ag10
aS'None'
p704
aS'[]'
p705
ag10
aS'None'
p706
aS'[]'
p707
ag10
aS'None'
p708
aS'[]'
p709
ag10
aS'None'
p710
aS'[]'
p711
ag10
aS'None'
p712
aS'[]'
p713
ag10
aS'None'
p714
aS'[]'
p715
ag10
aS'None'
p716
aS'[]'
p717
ag10
aS'None'
p718
aS'[]'
p719
ag10
aS'None'
p720
aS'[]'
p721
ag10
aS'None'
p722
aS'[]'
p723
ag10
aS'None'
p724
aS'[]'
p725
ag10
aS'None'
p726
aS'[]'
p727
ag10
aS'None'
p728
aS'[]'
p729
ag10
aS'None'
p730
aS'[]'
p731
ag10
aS'None'
p732
aS'[]'
p733
ag10
aS'None'
p734
aS'[]'
p735
ag10
aS'None'
p736
aS'[]'
p737
ag10
aS'None'
p738
aS'[]'
p739
ag10
aS'None'
p740
aS'[]'
p741
ag10
aS'None'
p742
aS'[]'
p743
ag10
aS'None'
p744
aS'[]'
p745
ag10
aS'None'
p746
aS'[]'
p747
ag10
aS'None'
p748
aS'[]'
p749
ag10
aS'None'
p750
aS'[]'
p751
ag10
aS'None'
p752
aS'[]'
p753
ag10
aS'None'
p754
aS'[]'
p755
ag10
aS'None'
p756
aS'[]'
p757
ag10
aS'None'
p758
aS'[]'
p759
ag10
aS'None'
p760
aS'[]'
p761
ag10
aS'0'
p762
aS'[]'
p763
aS'<const 0x2a>'
p764
aS'None'
p765
aS'[]'
p766
ag10
aS'None'
p767
aS'[]'
p768
ag10
aS'None'
p769
aS'[]'
p770
ag10
aS'None'
p771
aS'[]'
p772
ag10
aS'None'
p773
aS'[]'
p774
ag10
aS'None'
p775
aS'[]'
p776
ag10
aS'None'
p777
aS'[]'
p778
ag10
aS'None'
p779
aS'[]'
p780
ag10
aS'None'
p781
aS'[]'
p782
ag10
aS'None'
p783
aS'[]'
p784
ag10
aS'None'
p785
aS'[]'
p786
ag10
aS'None'
p787
aS'[]'
p788
ag10
aS'None'
p789
aS'[]'
p790
ag10
aS'None'
p791
aS'[]'
p792
ag10
aS'None'
p793
aS'[]'
p794
ag10
aS'None'
p795
aS'[]'
p796
ag10
aS'None'
p797
aS'[]'
p798
ag10
aS'[]'
p799
ag10
aS'[]'
p800
ag10
aS'[]'
p801
ag10
aS'[]'
p802
ag10
aS'[]'
p803
ag10
aS'[]'
p804
ag10
aS'[]'
p805
ag10
aS'[]'
p806
ag10
aS'[]'
p807
ag10
aS'[]'
p808
ag10
aS'[]'
p809
ag10
aS'0'
p810
aS'0'
p811
aS'0'
p812
aS'0'
p813
aS'1'
p814
aS'1'
p815
aS'1'
p816
aS'1'
p817
aS'None'
p818
aS'[]'
p819
ag10
aS'None'
p820
aS'[]'
p821
ag10
aS'None'
p822
aS'[]'
p823
ag10
aS'None'
p824
aS'[]'
p825
ag10
aS'None'
p826
aS'[]'
p827
ag10
aS'None'
p828
aS'[]'
p829
ag10
aS'None'
p830
aS'[]'
p831
ag10
aS'None'
p832
aS'[]'
p833
ag10
aS'None'
p834
aS'[]'
p835
ag10
aS'None'
p836
aS'[]'
p837
ag10
aS'None'
p838
aS'[]'
p839
ag10
aS'None'
p840
aS'[]'
p841
ag10
aS'None'
p842
aS'[]'
p843
ag10
aS'None'
p844
aS'[]'
p845
ag10
aS'None'
p846
aS'[]'
p847
ag10
aS'None'
p848
aS'[]'
p849
ag10
aS'None'
p850
aS'[]'
p851
ag10
aS'None'
p852
aS'[]'
p853
ag10
aS'None'
p854
aS'[]'
p855
ag10
aS'None'
p856
aS'[]'
p857
ag10
aS'None'
p858
aS'[]'
p859
ag10
aS'None'
p860
aS'[]'
p861
ag10
aS'None'
p862
aS'[]'
p863
ag10
aS'None'
p864
aS'[]'
p865
ag10
aS'None'
p866
aS'[]'
p867
ag10
aS'None'
p868
aS'[]'
p869
ag10
aS'None'
p870
aS'[]'
p871
ag10
aS'None'
p872
aS'[]'
p873
ag10
aS'None'
p874
aS'[]'
p875
ag10
aS'None'
p876
aS'[]'
p877
ag10
aS'None'
p878
aS'[]'
p879
ag10
aS'None'
p880
aS'[]'
p881
ag10
aS'None'
p882
aS'[]'
p883
ag10
aS'None'
p884
aS'[]'
p885
ag10
aS'None'
p886
aS'[]'
p887
ag10
aS'None'
p888
aS'[]'
p889
ag10
aS'None'
p890
aS'[]'
p891
ag10
aS'None'
p892
aS'[]'
p893
ag10
aS'None'
p894
aS'[]'
p895
ag10
aS'None'
p896
aS'[]'
p897
ag10
aS'None'
p898
aS'[]'
p899
ag10
aS'None'
p900
aS'[]'
p901
ag10
aS'None'
p902
aS'[]'
p903
ag10
aS'None'
p904
aS'[]'
p905
ag10
aS'None'
p906
aS'[]'
p907
ag10
aS'None'
p908
aS'[]'
p909
ag10
aS'None'
p910
aS'[]'
p911
ag10
aS'0'
p912
aS'[1L]'
p913
ag10
aS'None'
p914
aS'[]'
p915
ag10
aS'None'
p916
aS'[]'
p917
ag10
aS'None'
p918
aS'[]'
p919
ag10
aS'None'
p920
aS'[]'
p921
ag10
aS'None'
p922
aS'[]'
p923
ag10
aS'None'
p924
aS'[]'
p925
ag10
aS'None'
p926
aS'[]'
p927
ag10
aS'None'
p928
aS'[]'
p929
ag10
aS'None'
p930
aS'[]'
p931
ag10
aS'None'
p932
aS'[]'
p933
ag10
aS'None'
p934
aS'[]'
p935
ag10
aS'None'
p936
aS'[]'
p937
ag10
aS'None'
p938
aS'[]'
p939
ag10
aS'None'
p940
aS'[]'
p941
ag10
aS'None'
p942
aS'[]'
p943
ag10
aS'None'
p944
aS'[]'
p945
ag10
aS'None'
p946
aS'[]'
p947
ag10
aS'[]'
p948
ag10
aS'[]'
p949
ag10
aS'[]'
p950
ag10
aS'[]'
p951
ag10
aS'[]'
p952
ag10
aS'[]'
p953
ag10
aS'[]'
p954
ag10
aS'[]'
p955
ag10
aS'[]'
p956
ag10
aS'[]'
p957
ag10
aS'[]'
p958
ag10
aS'0'
p959
aS'0'
p960
aS'0'
p961
aS'0'
p962
aS'1'
p963
aS'1'
p964
aS'1'
p965
aS'1'
p966
aS'2'
p967
aS'2'
p968
aS'2'
p969
aS'2'
p970
asS'test_med_il_instructions'
p971
(lp972
S'None'
p973
aS'eax#1, mem#1 = call(0x1fca, stack = esp#0 @ mem#0)'
p974
ag10
aS'<undetermined>'
p975
aS'{}'
p976
aS"['8138', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<var int32_t eax_3>]', '[]']"
p977
aS"['8138', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<var int32_t eax_3>]', '[]']"
p978
aS'eax_3#1, mem#1 = 0x1fca() @ mem#0'
p979
aS'eax_3 = 0x1fca()'
p980
aS'None'
p981
aS'eax#2 = eax#1 - 0x2a'
p982
ag10
ag975
aS'{}'
p983
aS"['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_SUB 4>', '<MLIL_VAR 4>', 'eax', 'eax_3']"
p984
aS"['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', '<MLIL_SUB 4>', '<MLIL_VAR 4>', 'eax', 'eax_3']"
p985
aS'eax#2 = eax_3#1 - 0x2a'
p986
aS'eax = eax_3 - 0x2a'
p987
aS'None'
p988
aS'ebx#1 = 0'
p989
ag10
ag975
aS'{}'
p990
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p991
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p992
aS'ebx#1 = 0'
p993
aS'ebx = 0'
p994
aS'None'
p995
aS'if (eax#2 u>= 2) then 4 @ 0x1f91 else 9 @ 0x1f73'
p996
ag10
ag975
aS'{}'
p997
aS"['2', '4', '7', '<MLIL_CMP_UGE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax']"
p998
aS"['2', '4', '7', '<MLIL_CMP_UGE 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax']"
p999
aS'if (eax#2 u>= 2) then 4 @ 0x0 else 5 @ 0x1f73'
p1000
aS'if (eax u>= 2) then 4 @ 0x1f91 else 7 @ 0x1f73'
p1001
aS'None'
p1002
aS'eax#3, mem#2 = call(0x1fef, stack = esp#0 @ mem#1)'
p1003
ag10
ag975
aS'{}'
p1004
aS"['8175', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[]', '[]']"
p1005
aS"['8175', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[]', '[]']"
p1006
aS'mem#2 = 0x1fef() @ mem#1'
p1007
aS'0x1fef()'
p1008
aS'None'
p1009
aS'esi#1 = 0'
p1010
ag10
ag975
aS'{}'
p1011
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'esi']"
p1012
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'esi']"
p1013
aS'esi#1 = 0'
p1014
aS'esi = 0'
p1015
aS'None'
p1016
aS'if (eax#4 u>= 2) then 10 @ 0x1fc5 else 14 @ 0x1fa7'
p1017
ag10
ag975
aS'{}'
p1018
aS"['0', '11', '8', '<MLIL_CONST>', '<MLIL_IF>']"
p1019
aS"['0', '11', '8', '<MLIL_CONST>', '<MLIL_IF>']"
p1020
aS'if (false) then 14 @ 0x0 else 15 @ 0x1fa7'
p1021
aS'if (false) then 8 @ 0x1fc5 else 11 @ 0x1fa7'
p1022
aS'None'
p1023
aS'jump([(eax#2 << 2) + 0x1f7a].d @ mem#1 => 15 @ 0x1f82, 17 @ 0x1f8c)'
p1024
ag10
ag975
aS'{3L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1025
aS"['2', '8058', '<MLIL_ADD 4>', '<MLIL_CONST 1>', '<MLIL_CONST 4>', '<MLIL_JUMP_TO>', '<MLIL_LOAD 4>', '<MLIL_LSL 4>', '<MLIL_VAR 4>', '[12L, 14L]', 'eax']"
p1026
aS"['2', '8058', '<MLIL_ADD 4>', '<MLIL_CONST 1>', '<MLIL_CONST 4>', '<MLIL_JUMP_TO>', '<MLIL_LOAD 4>', '<MLIL_LSL 4>', '<MLIL_VAR 4>', '[12L, 14L]', 'eax']"
p1027
aS'jump([(eax#2 << 2) + 0x1f7a].d @ mem#1 => 10 @ 0x1f82, 12 @ 0x1f8c)'
p1028
aS'jump([(eax << 2) + 0x1f7a].d => 12 @ 0x1f82, 14 @ 0x1f8c)'
p1029
aS'None'
p1030
aS'eax#5 = ebx#2'
p1031
ag10
ag975
aS'{}'
p1032
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'ebx']"
p1033
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'ebx']"
p1034
aS'eax_1#3 = ebx#4'
p1035
aS'eax_1 = ebx'
p1036
aS'None'
p1037
aS'eax#6 = eax#5 + esi#2'
p1038
ag10
ag975
aS'{}'
p1039
aS"['<MLIL_ADD 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'eax_2', 'esi']"
p1040
aS"['<MLIL_ADD 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'eax_2', 'esi']"
p1041
aS'eax_2#4 = eax_1#3 + esi#3'
p1042
aS'eax_2 = eax_1 + esi'
p1043
aS'None'
p1044
aS'<return> jump([esp#0].d @ mem#2)'
p1045
ag10
ag975
aS'{}'
p1046
aS"['<MLIL_RET>', '[<il: eax_2>]']"
p1047
aS"['<MLIL_RET>', '[<il: eax_2>]']"
p1048
aS'return eax_2#4'
p1049
aS'return eax_2'
p1050
aS'None'
p1051
aS'jump([(eax#4 << 2) + 0x1fae].d @ mem#2 => 19 @ 0x1fb6)'
p1052
ag10
ag975
aS'{6L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1053
aS"['8118', '<MLIL_CONST 4>', '<MLIL_JUMP_TO>', '[16L]']"
p1054
aS"['8118', '<MLIL_CONST 4>', '<MLIL_JUMP_TO>', '[16L]']"
p1055
aS'jump(0x1fb6 => 20 @ 0x1fb6)'
p1056
aS'jump(0x1fb6 => 16 @ 0x1fb6)'
p1057
aS'None'
p1058
aS'ebx#3 = 1'
p1059
ag10
ag975
aS'{3L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1060
aS"['1', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p1061
aS"['1', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p1062
aS'ebx#2 = 1'
p1063
aS'ebx = 1'
p1064
aS'None'
p1065
aS'goto 4'
p1066
ag10
ag975
aS'{3L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1067
aS"['4', '<MLIL_GOTO>']"
p1068
aS"['4', '<MLIL_GOTO>']"
p1069
aS'goto 6 @ 0x1f91'
p1070
aS'goto 4 @ 0x1f91'
p1071
aS'None'
p1072
aS'ebx#4 = 2'
p1073
ag10
ag975
aS'{3L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1074
aS"['2', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p1075
aS"['2', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'ebx']"
p1076
aS'ebx#3 = 2'
p1077
aS'ebx = 2'
p1078
aS'None'
p1079
aS'goto 4'
p1080
ag10
ag975
aS'{3L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1081
aS"['4', '<MLIL_GOTO>']"
p1082
aS"['4', '<MLIL_GOTO>']"
p1083
aS'goto 6 @ 0x1f91'
p1084
aS'goto 4 @ 0x1f91'
p1085
aS'None'
p1086
aS'esi#3 = 1'
p1087
ag10
ag975
aS'{6L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1088
aS"['1', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'esi']"
p1089
aS"['1', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'esi']"
p1090
aS'esi#2 = 1'
p1091
aS'esi = 1'
p1092
aS'None'
p1093
aS'goto 10 @ 0x1fc5'
p1094
ag10
ag975
aS'{6L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1095
aS"['8', '<MLIL_GOTO>']"
p1096
aS"['8', '<MLIL_GOTO>']"
p1097
aS'goto 16 @ 0x1fc5'
p1098
aS'goto 8 @ 0x1fc5'
p1099
aS'None'
p1100
aS'[esp#1].d = 0x2a @ mem#0 -> mem#1'
p1101
ag10
ag975
aS'{}'
p1102
aS"['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'var_4']"
p1103
aS"['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'var_4']"
p1104
aS'var_4 @ mem#0 -> mem#1 = 0x2a'
p1105
aS'var_4 = 0x2a'
p1106
aS'None'
p1107
aS'[esp#1 - 4].d = eax#1 @ mem#1 -> mem#2'
p1108
ag10
ag975
aS'{}'
p1109
aS"['<MLIL_ADDRESS_OF>', '<MLIL_SET_VAR 4>', 'var_4', 'var_8']"
p1110
aS"['<MLIL_ADDRESS_OF>', '<MLIL_SET_VAR 4>', 'var_4', 'var_8']"
p1111
aS'var_8#1 = &var_4'
p1112
aS'var_8 = &var_4'
p1113
aS'None'
p1114
aS'eax#2, mem#3 = call(0x1ff5, stack = esp#2 @ mem#2)'
p1115
ag10
ag975
aS'{}'
p1116
aS"['8181', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_8>]', '[]']"
p1117
aS"['8181', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_8>]', '[]']"
p1118
aS'mem#2 = 0x1ff5(var_8#1) @ mem#1'
p1119
aS'0x1ff5(var_8)'
p1120
aS'None'
p1121
aS'eax#3 = [esp#3].d @ mem#3'
p1122
ag10
ag975
aS'{}'
p1123
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p1124
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_4']"
p1125
aS'eax#1 = var_4 @ mem#2'
p1126
aS'eax = var_4'
p1127
aS'None'
p1128
aS'<return> jump([esp#4].d @ mem#3)'
p1129
ag10
ag975
aS'{}'
p1130
aS"['<MLIL_RET>', '[<il: eax>]']"
p1131
aS"['<MLIL_RET>', '[<il: eax>]']"
p1132
aS'return eax#1'
p1133
aS'return eax'
p1134
aS'None'
p1135
aS'eax#1 = 0x2a'
p1136
ag10
ag975
aS'{}'
p1137
aS"['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax']"
p1138
aS"['42', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax']"
p1139
aS'eax#1 = 0x2a'
p1140
aS'eax = 0x2a'
p1141
aS'None'
p1142
aS'<return> jump([esp#0].d @ mem#0)'
p1143
ag10
ag975
aS'{}'
p1144
aS"['<MLIL_RET>', '[<il: 0x2a>]']"
p1145
aS"['<MLIL_RET>', '[<il: 0x2a>]']"
p1146
aS'return 0x2a'
p1147
aS'return 0x2a'
p1148
aS'None'
p1149
aS'eax#1 = [esp#0 + 4].d @ mem#0'
p1150
ag10
ag975
aS'{}'
p1151
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'testautovar']"
p1152
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'testautovar']"
p1153
aS'eax#1 = testautovar#0'
p1154
aS'eax = testautovar'
p1155
aS'None'
p1156
aS'[eax#1].d = 2 @ mem#0 -> mem#1'
p1157
ag10
ag975
aS'{}'
p1158
aS"['2', '<MLIL_CONST 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax']"
p1159
aS"['2', '<MLIL_CONST 4>', '<MLIL_STORE 4>', '<MLIL_VAR 4>', 'eax']"
p1160
aS'[eax#1].d = 2 @ mem#0 -> mem#1'
p1161
aS'[eax].d = 2'
p1162
aS'None'
p1163
aS'<return> jump([esp#0].d @ mem#1)'
p1164
ag10
ag975
aS'{}'
p1165
aS"['<MLIL_RET>', '[<il: eax>]']"
p1166
aS"['<MLIL_RET>', '[<il: eax>]']"
p1167
aS'return eax#1'
p1168
aS'return eax'
p1169
asS'test_function_symbol_names'
p1170
(lp1171
S'_main SymbolType.DataSymbol 0x1f5dL'
p1172
aS'aliased SymbolType.DataSymbol 0x1fcaL'
p1173
aS'not_aliased SymbolType.DataSymbol 0x1fefL'
p1174
aS'write_to_arg SymbolType.DataSymbol 0x1ff5L'
p1175
asS'test_BinaryView'
p1176
(lp1177
S'void*'
p1178
aS'[<segment: 0x1000-0x2000, r-x>, <segment: 0x2000-0x3000, r-->]'
p1179
aS"{'__text': <section __text: 0x1f5d-0x2000>}"
p1180
aS'[<0x1000-0x3000>]'
p1181
aS'{}'
p1182
aS'8128'
p1183
aS'8066'
p1184
aS'8133'
p1185
aS'8138'
p1186
aS'8076'
p1187
aS'8110'
p1188
aS'8175'
p1189
aS'8081'
p1190
aS'8181'
p1191
aS'8118'
p1192
aS'8058'
p1193
aS'8029'
p1194
aS'<func: x86@0x1f5d>'
p1195
aS'<func: x86@0x1f5d>'
p1196
aS'<func: x86@0x1fca>'
p1197
aS'<func: x86@0x1fef>'
p1198
aS'<func: x86@0x1ff5>'
p1199
aS'0x1f5dL'
p1200
aS'0x1000L'
p1201
aS'length: 0x2000'
p1202
asS'test_available_types'
p1203
(lp1204
S'Raw'
p1205
aS'Mach-O'
p1206
asS'test_function_basic_blocks'
p1207
(lp1208
S'0x1f5dL 0x1f73L False'
p1209
aS'0x1f91L 0x1fa7L False'
p1210
aS'0x1f73L 0x1f7aL False'
p1211
aS'0x1fc5L 0x1fcaL True'
p1212
aS'0x1fa7L 0x1faeL False'
p1213
aS'0x1f82L 0x1f8cL False'
p1214
aS'0x1f8cL 0x1f91L False'
p1215
aS'0x1fb6L 0x1fc0L False'
p1216
aS'0x1fcaL 0x1fefL True'
p1217
aS'0x1fefL 0x1ff5L True'
p1218
aS'0x1ff5L 0x2000L True'
p1219
asS'test_function_med_il_basic_blocks'
p1220
(lp1221
S'0x0L 0x4L 2'
p1222
aS'0x4L 0x7L 2'
p1223
aS'0x7L 0x8L 2'
p1224
aS'0x8L 0xbL 0'
p1225
aS'0xbL 0xcL 1'
p1226
aS'0xcL 0xeL 1'
p1227
aS'0xeL 0x10L 1'
p1228
aS'0x10L 0x12L 1'
p1229
aS'0x0L 0x5L 0'
p1230
aS'0x0L 0x2L 0'
p1231
aS'0x0L 0x3L 0'
p1232
asS'test_symbols'
p1233
(lp1234
S'_main'
p1235
aS'aliased'
p1236
aS'aliased_done'
p1237
aS'aliased_one'
p1238
aS'aliased_table'
p1239
aS'aliased_two'
p1240
aS'not_aliased'
p1241
aS'not_aliased_done'
p1242
aS'not_aliased_one'
p1243
aS'not_aliased_table'
p1244
aS'not_aliased_two'
p1245
aS'write_to_arg'
p1246
asS'test_low_il_instructions'
p1247
(lp1248
S'eax_3 = 0x1fca()'
p1249
aS'eax = call(0x1fca, stack = &arg_0)'
p1250
ag10
ag975
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8138L, 0L, {}]'
p1251
aS'[8138L, <LLIL_CONST_PTR 4>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1252
aS'eax#1, mem#1 = call(0x1fca, stack = esp#0 @ mem#0)'
p1253
aS'call(0x1fca)'
p1254
aS'eax = eax_3 - 0x2a'
p1255
aS'eax = eax - 0x2a'
p1256
ag10
ag975
aS'[<LLIL_SET_REG 4>, eax, <LLIL_SUB 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 42L]'
p1257
aS'[eax, eax, <LLIL_REG 4>, 42L, <LLIL_CONST 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p1258
aS'eax#2 = eax#1 - 0x2a'
p1259
aS'eax = eax - 0x2a'
p1260
aS'ebx = 0'
p1261
aS'ebx = 0'
p1262
ag10
ag975
aS'[<LLIL_SET_REG 4>, ebx, <LLIL_CONST 4>, 0L]'
p1263
aS'[ebx, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1264
aS'ebx#1 = 0'
p1265
aS'ebx = 0'
p1266
aS'None'
p1267
aS'if (eax u>= 2) then 4 @ 0x1f91 else 8 @ 0x1f73'
p1268
ag10
ag975
aS'[<LLIL_IF>, <LLIL_CMP_UGE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 2L, 4L, 8L]'
p1269
aS'[eax, <LLIL_REG 4>, 2L, <LLIL_CONST 4>, <LLIL_CMP_UGE 4>, 4L, 8L, <LLIL_IF>]'
p1270
aS'if (eax#2 u>= 2) then 4 @ 0x1f91 else 9 @ 0x1f73'
p1271
aS'if (eax u>= 2) then 4 @ 0x1f91 else 8 @ 0x1f73'
p1272
aS'0x1fef()'
p1273
aS'eax = call(0x1fef, stack = &arg_0)'
p1274
ag10
ag975
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8175L, 0L, {}]'
p1275
aS'[8175L, <LLIL_CONST_PTR 4>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1276
aS'eax#3, mem#2 = call(0x1fef, stack = esp#0 @ mem#1)'
p1277
aS'call(0x1fef)'
p1278
aS'None'
p1279
aS'eax = eax - 0x2a'
p1280
ag10
ag975
aS'[<LLIL_SET_REG 4>, eax, <LLIL_SUB 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 42L]'
p1281
aS'[eax, eax, <LLIL_REG 4>, 42L, <LLIL_CONST 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p1282
aS'eax#4 = eax#3 - 0x2a'
p1283
aS'eax = eax - 0x2a'
p1284
aS'esi = 0'
p1285
aS'esi = 0'
p1286
ag10
ag975
aS'[<LLIL_SET_REG 4>, esi, <LLIL_CONST 4>, 0L]'
p1287
aS'[esi, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1288
aS'esi#1 = 0'
p1289
aS'esi = 0'
p1290
aS'None'
p1291
aS'if (eax u>= 2) then 9 @ 0x1fc5 else 12 @ 0x1fa7'
p1292
ag10
ag975
aS'[<LLIL_IF>, <LLIL_CMP_UGE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 2L, 9L, 12L]'
p1293
aS'[eax, <LLIL_REG 4>, 2L, <LLIL_CONST 4>, <LLIL_CMP_UGE 4>, 9L, 12L, <LLIL_IF>]'
p1294
aS'if (eax#4 u>= 2) then 10 @ 0x1fc5 else 14 @ 0x1fa7'
p1295
aS'if (eax u>= 2) then 9 @ 0x1fc5 else 12 @ 0x1fa7'
p1296
aS'None'
p1297
aS'jump([(eax << 2) + 0x1f7a].d => 13 @ 0x1f82, 15 @ 0x1f8c)'
p1298
ag10
ag975
aS'[<LLIL_JUMP_TO>, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_LSL 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 2L, <LLIL_CONST 4>, 8058L, [13L, 15L]]'
p1299
aS'[eax, <LLIL_REG 4>, 2L, <LLIL_CONST 1>, <LLIL_LSL 4>, 8058L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, [13L, 15L], <LLIL_JUMP_TO>]'
p1300
aS'jump([(eax#2 << 2) + 0x1f7a].d @ mem#1 => 15 @ 0x1f82, 17 @ 0x1f8c)'
p1301
aS'jump([(eax << 2) + 0x1f7a].d => 13 @ 0x1f82, 15 @ 0x1f8c)'
p1302
aS'eax_1 = ebx'
p1303
aS'eax = ebx'
p1304
ag10
ag975
aS'[<LLIL_SET_REG 4>, eax, <LLIL_REG 4>, ebx]'
p1305
aS'[eax, ebx, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p1306
aS'eax#5 = ebx#2'
p1307
aS'eax = ebx'
p1308
aS'eax_2 = eax_1 + esi'
p1309
aS'eax = eax + esi'
p1310
ag10
ag975
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, eax, <LLIL_REG 4>, esi]'
p1311
aS'[eax, eax, <LLIL_REG 4>, esi, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1312
aS'eax#6 = eax#5 + esi#2'
p1313
aS'eax = eax + esi'
p1314
aS'None'
p1315
aS'return '
p1316
ag10
ag975
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p1317
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p1318
aS'<return> jump([esp#0].d @ mem#2)'
p1319
aS'<return> jump(pop)'
p1320
aS'None'
p1321
aS'jump([(eax << 2) + 0x1fae].d => 17 @ 0x1fb6)'
p1322
ag10
ag975
aS'[<LLIL_JUMP_TO>, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_LSL 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 2L, <LLIL_CONST 4>, 8110L, [17L]]'
p1323
aS'[eax, <LLIL_REG 4>, 2L, <LLIL_CONST 1>, <LLIL_LSL 4>, 8110L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, [17L], <LLIL_JUMP_TO>]'
p1324
aS'jump([(eax#4 << 2) + 0x1fae].d @ mem#2 => 19 @ 0x1fb6)'
p1325
aS'jump([(eax << 2) + 0x1fae].d => 17 @ 0x1fb6)'
p1326
aS'ebx = 1'
p1327
aS'ebx = 1'
p1328
ag10
ag975
aS'[<LLIL_SET_REG 4>, ebx, <LLIL_CONST 4>, 1L]'
p1329
aS'[ebx, 1L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1330
aS'ebx#3 = 1'
p1331
aS'ebx = 1'
p1332
aS'None'
p1333
aS'goto 4 @ 0x1f91'
p1334
ag10
ag975
aS'[<LLIL_GOTO>, 4L]'
p1335
aS'[4L, <LLIL_GOTO>]'
p1336
aS'goto 4'
p1337
aS'goto 4'
p1338
aS'ebx = 2'
p1339
aS'ebx = 2'
p1340
ag10
ag975
aS'[<LLIL_SET_REG 4>, ebx, <LLIL_CONST 4>, 2L]'
p1341
aS'[ebx, 2L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1342
aS'ebx#4 = 2'
p1343
aS'ebx = 2'
p1344
aS'None'
p1345
aS'goto 4 @ 0x1f91'
p1346
ag10
ag975
aS'[<LLIL_GOTO>, 4L]'
p1347
aS'[4L, <LLIL_GOTO>]'
p1348
aS'goto 4'
p1349
aS'goto 4 @ 0x1f91'
p1350
aS'esi = 1'
p1351
aS'esi = 1'
p1352
ag10
ag975
aS'[<LLIL_SET_REG 4>, esi, <LLIL_CONST 4>, 1L]'
p1353
aS'[esi, 1L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1354
aS'esi#3 = 1'
p1355
aS'esi = 1'
p1356
aS'None'
p1357
aS'goto 9 @ 0x1fc5'
p1358
ag10
ag975
aS'[<LLIL_GOTO>, 9L]'
p1359
aS'[9L, <LLIL_GOTO>]'
p1360
aS'goto 10 @ 0x1fc5'
p1361
aS'goto 9 @ 0x1fc5'
p1362
aS'None'
p1363
aS'esp = &var_4'
p1364
ag10
ag975
aS'[<LLIL_SET_REG 4>, esp, <LLIL_SUB 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p1365
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_SUB 4>, <LLIL_SET_REG 4>]'
p1366
aS'esp#1 = esp#0 - 4'
p1367
aS'esp = esp - 4'
p1368
aS'var_4 = 0x2a'
p1369
aS'var_4 = 0x2a'
p1370
ag10
ag975
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 42L]'
p1371
aS'[esp, <LLIL_REG 4>, 42L, <LLIL_CONST 4>, <LLIL_STORE 4>]'
p1372
aS'[esp#1].d = 0x2a @ mem#0 -> mem#1'
p1373
aS'[esp].d = 0x2a'
p1374
aS'None'
p1375
aS'eax = &var_4'
p1376
ag10
ag975
aS'[<LLIL_SET_REG 4>, eax, <LLIL_REG 4>, esp]'
p1377
aS'[eax, esp, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p1378
aS'eax#1 = esp#1'
p1379
aS'eax = esp'
p1380
aS'var_8 = &var_4'
p1381
aS'var_8 = &var_4'
p1382
ag10
ag975
aS'[<LLIL_PUSH 4>, <LLIL_REG 4>, eax]'
p1383
aS'[eax, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p1384
aS'[esp#1 - 4].d = eax#1 @ mem#1 -> mem#2'
p1385
aS'push(eax)'
p1386
aS'0x1ff5(var_8)'
p1387
aS'eax = call(0x1ff5, stack = &var_8)'
p1388
ag10
ag975
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 8181L, 0L, {}]'
p1389
aS'[8181L, <LLIL_CONST_PTR 4>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1390
aS'eax#2, mem#3 = call(0x1ff5, stack = esp#2 @ mem#2)'
p1391
aS'call(0x1ff5)'
p1392
aS'None'
p1393
aS'esp = &var_4'
p1394
ag10
ag975
aS'[<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p1395
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1396
aS'esp#3 = esp#2 + 4'
p1397
aS'esp = esp + 4'
p1398
aS'eax = var_4'
p1399
aS'eax = var_4'
p1400
ag10
ag975
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_REG 4>, esp]'
p1401
aS'[eax, esp, <LLIL_REG 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p1402
aS'eax#3 = [esp#3].d @ mem#3'
p1403
aS'eax = [esp].d'
p1404
aS'None'
p1405
aS'esp = &arg_0'
p1406
ag10
ag975
aS'[<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p1407
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1408
aS'esp#4 = esp#3 + 4'
p1409
aS'esp = esp + 4'
p1410
aS'None'
p1411
aS'return '
p1412
ag10
ag975
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p1413
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p1414
aS'<return> jump([esp#4].d @ mem#3)'
p1415
aS'<return> jump(pop)'
p1416
aS'eax = 0x2a'
p1417
aS'eax = 0x2a'
p1418
ag10
ag975
aS'[<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 42L]'
p1419
aS'[eax, 42L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1420
aS'eax#1 = 0x2a'
p1421
aS'eax = 0x2a'
p1422
aS'None'
p1423
aS'return '
p1424
ag10
ag975
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p1425
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p1426
aS'<return> jump([esp#0].d @ mem#0)'
p1427
aS'<return> jump(pop)'
p1428
aS'eax = testautovar'
p1429
aS'eax = testautovar'
p1430
ag10
ag975
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p1431
aS'[eax, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p1432
aS'eax#1 = [esp#0 + 4].d @ mem#0'
p1433
aS'eax = [esp + 4].d'
p1434
aS'[eax].d = 2'
p1435
aS'[eax].d = 2'
p1436
ag10
ag975
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 2L]'
p1437
aS'[eax, <LLIL_REG 4>, 2L, <LLIL_CONST 4>, <LLIL_STORE 4>]'
p1438
aS'[eax#1].d = 2 @ mem#0 -> mem#1'
p1439
aS'[eax].d = 2'
p1440
aS'None'
p1441
aS'return '
p1442
ag10
ag975
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p1443
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p1444
aS'<return> jump([esp#0].d @ mem#1)'
p1445
aS'<return> jump(pop)'
p1446
asS'test_med_il_vars'
p1447
(lp1448
S'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_3#1, mem#1 = 0x1fca() @ mem#0>>'
p1449
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#2 = eax_3#1 - 0x2a>>'
p1450
aS'1 [3L, 7L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#2 = eax_3#1 - 0x2a>>'
p1451
aS'2 [4L] <const 0x0> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ebx#1 = 0>>'
p1452
aS'1 [3L, 7L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax#2 u>= 2) then 4 @ 0x0 else 5 @ 0x1f73>>'
p1453
aS'5 [8L] <const 0x0> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: esi#1 = 0>>'
p1454
aS'1 [3L, 7L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x1>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: jump([(eax#2 << 2) + 0x1f7a].d @ mem#1 => 10 @ 0x1f82, 12 @ 0x1f8c)>>'
p1455
aS'4 [8L] <undetermined> <in set([0x0, 0x1, 0x2])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#3 = ebx#4>>'
p1456
aS'8 [9L] <undetermined> <in set([0x0, 0x1, 0x2])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#3 = ebx#4>>'
p1457
aS'8 [9L] <undetermined> <in set([0x0, 0x1, 0x2])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#4 = eax_1#3 + esi#3>>'
p1458
aS'8 [9L] <undetermined> <in set([0x0, 0x1])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#4 = eax_1#3 + esi#3>>'
p1459
aS'9 [10L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#4 = eax_1#3 + esi#3>>'
p1460
aS'12 [4L] <const 0x1> <const 0x1> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ebx#2 = 1>>'
p1461
aS'14 [4L] <const 0x2> <const 0x2> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: ebx#3 = 2>>'
p1462
aS'16 [8L] <const 0x1> <const 0x1> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: esi#2 = 1>>'
p1463
aS'0 [] <const 0x2a> <const 0x2a> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_4 @ mem#0 -> mem#1 = 0x2a>>'
p1464
aS'1 [2L] <stack frame offset -0x4> <stack frame offset -0x4> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_8#1 = &var_4>>'
p1465
aS'1 [2L] <stack frame offset -0x4> <stack frame offset -0x4> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: mem#2 = 0x1ff5(var_8#1) @ mem#1>>'
p1466
aS'None [3L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4 @ mem#2>>'
p1467
aS'3 [4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = var_4 @ mem#2>>'
p1468
aS'0 [] <const 0x2a> <const 0x2a> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = 0x2a>>'
p1469
aS'None [0L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = testautovar#0>>'
p1470
aS'0 [1L, 2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax#1 = testautovar#0>>'
p1471
aS'0 [1L, 2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: [eax#1].d = 2 @ mem#0 -> mem#1>>'
p1472
as.
(dp0
S'test_function_can_return'
p1
(lp2
S'_main SymbolType.FunctionSymbol 0x100000ef0L True'
p3
aS'_atoi SymbolType.ImportedFunctionSymbol 0x100000f5cL True'
p4
aS'_puts SymbolType.ImportedFunctionSymbol 0x100000f62L True'
p5
asS'test_function_stack'
p6
(lp7
S"['__saved_rbp', 'testautovar']"
p8
aS'<return address>'
p9
ag9
aS'None'
p10
aS"['testautovar']"
p11
aS'<undetermined>'
p12
ag12
aS'None'
p13
aS"['testautovar']"
p14
ag12
ag12
aS'None'
p15
asS'test_strings'
p16
(lp17
S'__PAGEZERO StringType.AsciiString 0x100000028L'
p18
aS'__TEXT StringType.AsciiString 0x100000070L'
p19
aS'__text StringType.AsciiString 0x1000000b0L'
p20
aS'__TEXT StringType.AsciiString 0x1000000c0L'
p21
aS'__stubs StringType.AsciiString 0x100000100L'
p22
aS'__TEXT StringType.AsciiString 0x100000110L'
p23
aS'__stub_helper StringType.AsciiString 0x100000150L'
p24
aS'__TEXT StringType.AsciiString 0x100000160L'
p25
aS'__cstring StringType.AsciiString 0x1000001a0L'
p26
aS'__TEXT StringType.AsciiString 0x1000001b0L'
p27
aS'__unwind_info StringType.AsciiString 0x1000001f0L'
p28
aS'__TEXT StringType.AsciiString 0x100000200L'
p29
aS'__DATA StringType.AsciiString 0x100000248L'
p30
aS'__nl_symbol_ptr StringType.AsciiString 0x100000288L'
p31
aS'__DATA StringType.AsciiString 0x100000298L'
p32
aS'__la_symbol_ptr StringType.AsciiString 0x1000002d8L'
p33
aS'__DATA StringType.AsciiString 0x1000002e8L'
p34
aS'__LINKEDIT StringType.AsciiString 0x100000330L'
p35
aS'/usr/lib/dyld StringType.AsciiString 0x100000414L'
p36
aS'/usr/lib/libSystem.B.dylib StringType.AsciiString 0x100000490L'
p37
aS'Three StringType.AsciiString 0x100000f8cL'
p38
aS'Zero StringType.AsciiString 0x100000f9aL'
p39
aS'Something else StringType.AsciiString 0x100000f9fL'
p40
aS'@dyld_stub_binder StringType.AsciiString 0x100002009L'
p41
aS'@_atoi StringType.AsciiString 0x100002023L'
p42
aS'@_puts StringType.AsciiString 0x10000202fL'
p43
aS'_mh_execute_header StringType.AsciiString 0x10000203fL'
p44
aS'!main StringType.AsciiString 0x100002052L'
p45
aS'__mh_execute_header StringType.AsciiString 0x1000020e2L'
p46
aS'_main StringType.AsciiString 0x1000020f6L'
p47
aS'_atoi StringType.AsciiString 0x1000020fcL'
p48
aS'_puts StringType.AsciiString 0x100002102L'
p49
aS'dyld_stub_binder StringType.AsciiString 0x100002108L'
p50
asS'test_function_low_il_basic_blocks'
p51
(lp52
S'0x0L 0x7L 2'
p53
aS'0x7L 0x9L 1'
p54
aS'0x9L 0xdL 4'
p55
aS'0xdL 0x11L 0'
p56
aS'0x11L 0x13L 1'
p57
aS'0x13L 0x15L 1'
p58
aS'0x15L 0x17L 1'
p59
aS'0x17L 0x19L 1'
p60
aS'0x0L 0x1L 0'
p61
aS'0x0L 0x1L 0'
p62
asS'test_functions_attributes'
p63
(lp64
S"['__saved_rbp', 'testautovar', 'rax', 'rax_1', 'rax_2', 'rax_3', 'rax_4', 'rax_5', 'arg2', 'arg1', 'rdi', 'rdi_1']"
p65
aS'[<branch x86_64:0x100000f16 -> x86_64:0x100000f18>, <branch x86_64:0x100000f16 -> x86_64:0x100000f2a>, <branch x86_64:0x100000f16 -> x86_64:0x100000f33>, <branch x86_64:0x100000f16 -> x86_64:0x100000f3c>]'
p66
aS'{}'
p67
aI1
aS"['rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p68
aS'False'
p69
aS'True'
p70
aI39
ag12
aS'testcomment _main'
p71
ag69
ag69
aS'push(rbp)'
p72
aS'[]'
p73
aS"['rsp', 'rbp']"
p74
aS"['rsp']"
p75
aS'[<ref to __saved_rbp>]'
p76
aS'[]'
p77
aS'push(rbp)'
p78
aS'[]'
p79
aS'[]'
p80
aS'<graph of <func: x86_64@0x100000ef0>>'
p81
aS'[]'
p82
aS'[]'
p83
aS'<block: x86_64@0x100000ef0-0x100000f08>'
p84
aS'<color: #ff00ff>'
p85
aS'[<0x100000ef0: int64_t _main(int64_t arg1, int64_t arg2)>]'
p86
aS"['testautovar', 'rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p87
aS'[]'
p88
aS'{}'
p89
aI1
aS"['rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p90
ag69
ag70
aI3
ag12
aS'testcomment _atoi'
p91
ag69
ag69
aS'<return> tailcall([0x100001010].q)'
p92
aS'[]'
p93
aS'[]'
p94
aS'[]'
p95
aS'[]'
p96
aS'[<constant pointer 0x100001010>]'
p97
aS'jump([0x100001010].q)'
p98
aS'[]'
p99
aS'[]'
p100
aS'<graph of <func: x86_64@0x100000f5c>>'
p101
aS'[]'
p102
aS'[]'
p103
aS'<block: x86_64@0x100000f5c-0x100000f62>'
p104
aS'<color: #ff00ff>'
p105
aS'[<0x100000f5c: int64_t _atoi()>]'
p106
aS"['testautovar', 'rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p107
aS'[]'
p108
aS'{}'
p109
aI1
aS"['rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p110
ag69
ag70
aI3
ag12
aS'testcomment _puts'
p111
ag69
ag69
aS'<return> tailcall([0x100001018].q)'
p112
aS'[]'
p113
aS'[]'
p114
aS'[]'
p115
aS'[]'
p116
aS'[<constant pointer 0x100001018>]'
p117
aS'jump([0x100001018].q)'
p118
aS'[]'
p119
aS'[]'
p120
aS'<graph of <func: x86_64@0x100000f62>>'
p121
aS'[]'
p122
aS'[]'
p123
aS'<block: x86_64@0x100000f62-0x100000f68>'
p124
aS'<color: #ff00ff>'
p125
aS'[<0x100000f62: int64_t _puts()>]'
p126
asS'test_function_starts'
p127
(lp128
S'0x100000ef0L'
p129
aS'0x100000f5cL'
p130
aS'0x100000f62L'
p131
asS'test_function_llil'
p132
(lp133
S'<block: x86_64@0x0-0x7>'
p134
aS'<block: x86_64@0x7-0x9>'
p135
aS'<block: x86_64@0x9-0xd>'
p136
aS'<block: x86_64@0xd-0x11>'
p137
aS'<block: x86_64@0x11-0x13>'
p138
aS'<block: x86_64@0x13-0x15>'
p139
aS'<block: x86_64@0x15-0x17>'
p140
aS'<block: x86_64@0x17-0x19>'
p141
aS'push(rbp)'
p142
aS'rbp = rsp {__saved_rbp}'
p143
aS'rdi = [rsi + 8].q'
p144
aS'call(0x100000f5c)'
p145
aS'eax = (rax + (rax << 3)).d'
p146
aS'eax = (rax + (rax << 2)).d'
p147
aS'if (eax u> 3) then 7 @ 0x100000f21 else 9 @ 0x100000f08'
p148
aS'rdi = 0x100000f9f'
p149
aS'goto 13 @ 0x100000f43'
p150
aS'rcx = 0x100000f4c'
p151
aS'rax = sx.q([rcx + (rax << 2)].d)'
p152
aS'rax = rax + rcx'
p153
aS'jump(rax => 17 @ 0x100000f18, 19 @ 0x100000f2a, 21 @ 0x100000f33, 23 @ 0x100000f3c)'
p154
aS'call(0x100000f62)'
p155
aS'eax = 0'
p156
aS'rbp = pop'
p157
aS'<return> jump(pop)'
p158
aS'rdi = 0x100000f9a'
p159
aS'goto 13 @ 0x100000f43'
p160
aS'rdi = 0x100000f96'
p161
aS'goto 13 @ 0x100000f43'
p162
aS'rdi = 0x100000f92'
p163
aS'goto 13 @ 0x100000f43'
p164
aS'rdi = 0x100000f8c'
p165
aS'goto 13 @ 0x100000f43'
p166
aS'<block: x86_64@0x0-0x5>'
p167
aS'<block: x86_64@0x5-0x7>'
p168
aS'<block: x86_64@0x7-0xa>'
p169
aS'<block: x86_64@0xa-0xd>'
p170
aS'<block: x86_64@0xd-0xf>'
p171
aS'<block: x86_64@0xf-0x11>'
p172
aS'<block: x86_64@0x11-0x13>'
p173
aS'<block: x86_64@0x13-0x15>'
p174
aS'rdi = [arg2 + 8].q'
p175
aS'rax = 0x100000f5c(rdi)'
p176
aS'rax_1 = zx.q((rax + (rax << 3)).d)'
p177
aS'rax_2 = zx.q((rax_1 + (rax_1 << 2)).d)'
p178
aS'if (rax_2.eax u> 3) then 5 @ 0x100000f21 else 7 @ 0x100000f0f'
p179
aS'rdi_1 = 0x100000f9f'
p180
aS'goto 10 @ 0x100000f43'
p181
aS'rax_3 = sx.q([0x100000f4c + (rax_2 << 2)].d)'
p182
aS'rax_4 = rax_3 + 0x100000f4c'
p183
aS'jump(rax_4 => 13 @ 0x100000f18, 15 @ 0x100000f2a, 17 @ 0x100000f33, 19 @ 0x100000f3c)'
p184
aS'0x100000f62(rdi_1)'
p185
aS'rax_5 = 0'
p186
aS'return 0'
p187
aS'rdi_1 = 0x100000f9a'
p188
aS'goto 10 @ 0x100000f43'
p189
aS'rdi_1 = 0x100000f96'
p190
aS'goto 10 @ 0x100000f43'
p191
aS'rdi_1 = 0x100000f92'
p192
aS'goto 10 @ 0x100000f43'
p193
aS'rdi_1 = 0x100000f8c'
p194
aS'goto 10 @ 0x100000f43'
p195
aS"(['push', '    ', 'rbp'], 4294971120L)"
p196
aS"(['mov', '     ', 'rbp', ', ', 'rsp'], 4294971121L)"
p197
aS"(['mov', '     ', 'rdi', ', ', 'qword ', '[', 'rsi', '+', '0x8', ']'], 4294971124L)"
p198
aS"(['call', '    ', '0x100000f5c'], 4294971128L)"
p199
aS"(['lea', '     ', 'eax', ', ', '', '[', 'rax', '+', 'rax', '*8', ']'], 4294971133L)"
p200
aS"(['lea', '     ', 'eax', ', ', '', '[', 'rax', '+', 'rax', '*4', ']'], 4294971136L)"
p201
aS"(['cmp', '     ', 'eax', ', ', '0x3'], 4294971139L)"
p202
aS"(['ja', '      ', '0x100000f21'], 4294971142L)"
p203
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f9f', ']'], 4294971169L)"
p204
aS"(['jmp', '     ', '0x100000f43'], 4294971176L)"
p205
aS"(['lea', '     ', 'rcx', ', ', '', '[', 'rel ', '0x100000f4c', ']'], 4294971144L)"
p206
aS"(['movsxd', '  ', 'rax', ', ', 'dword ', '[', 'rcx', '+', 'rax', '*4', ']'], 4294971151L)"
p207
aS"(['add', '     ', 'rax', ', ', 'rcx'], 4294971155L)"
p208
aS"(['jmp', '     ', 'rax'], 4294971158L)"
p209
aS"(['call', '    ', '0x100000f62'], 4294971203L)"
p210
aS"(['xor', '     ', 'eax', ', ', 'eax'], 4294971208L)"
p211
aS"(['pop', '     ', 'rbp'], 4294971210L)"
p212
aS"(['retn', '    '], 4294971211L)"
p213
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f9a', ']'], 4294971160L)"
p214
aS"(['jmp', '     ', '0x100000f43'], 4294971167L)"
p215
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f96', ']'], 4294971178L)"
p216
aS"(['jmp', '     ', '0x100000f43'], 4294971185L)"
p217
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f92', ']'], 4294971187L)"
p218
aS"(['jmp', '     ', '0x100000f43'], 4294971194L)"
p219
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f8c', ']'], 4294971196L)"
p220
aS'<block: x86_64@0x0-0x1>'
p221
aS'<return> tailcall([0x100001010].q)'
p222
aS'<block: x86_64@0x0-0x1>'
p223
aS'return _atoi() __tailcall'
p224
aS"(['jmp', '     ', 'qword ', '[', 'rel ', '0x100001010', ']'], 4294971228L)"
p225
aS'<block: x86_64@0x0-0x1>'
p226
aS'<return> tailcall([0x100001018].q)'
p227
aS'<block: x86_64@0x0-0x1>'
p228
aS'return _puts() __tailcall'
p229
aS"(['jmp', '     ', 'qword ', '[', 'rel ', '0x100001018', ']'], 4294971234L)"
p230
asS'test_low_il_ssa'
p231
(lp232
S'None'
p233
aS'[]'
p234
ag12
aS'None'
p235
aS'[]'
p236
ag12
aS'None'
p237
aS'[]'
p238
ag12
aS'None'
p239
aS'[]'
p240
ag12
aS'None'
p241
aS'[]'
p242
ag12
aS'None'
p243
aS'[]'
p244
ag12
aS'None'
p245
aS'[]'
p246
ag12
aS'None'
p247
aS'[]'
p248
ag12
aS'None'
p249
aS'[]'
p250
ag12
aS'None'
p251
aS'[]'
p252
ag12
aS'None'
p253
aS'[]'
p254
ag12
aS'None'
p255
aS'[]'
p256
ag12
aS'None'
p257
aS'[]'
p258
ag12
aS'None'
p259
aS'[]'
p260
ag12
aS'3'
p261
aS'[]'
p262
ag12
aS'None'
p263
aS'[]'
p264
ag12
aS'None'
p265
aS'[]'
p266
ag12
aS'None'
p267
aS'[]'
p268
ag12
aS'None'
p269
aS'[]'
p270
ag12
aS'3'
p271
aS'[]'
p272
ag12
aS'None'
p273
aS'[]'
p274
ag12
aS'None'
p275
aS'[]'
p276
ag12
aS'None'
p277
aS'[]'
p278
ag12
aS'3'
p279
aS'[]'
p280
ag12
aS'3'
p281
aS'[]'
p282
ag12
aS'3'
p283
aS'[]'
p284
ag12
aS'3'
p285
aS'[]'
p286
ag12
aS'3'
p287
aS'[]'
p288
ag12
aS'3'
p289
aS'[]'
p290
ag12
aS'None'
p291
aS'[]'
p292
ag12
aS'None'
p293
aS'[]'
p294
ag12
aS'None'
p295
aS'[]'
p296
ag12
aS'None'
p297
aS'[]'
p298
ag12
aS'None'
p299
aS'[]'
p300
ag12
aS'None'
p301
aS'[]'
p302
ag12
aS'None'
p303
aS'[]'
p304
ag12
aS'None'
p305
aS'[]'
p306
ag12
aS'None'
p307
aS'[]'
p308
ag12
aS'None'
p309
aS'[]'
p310
ag12
aS'None'
p311
aS'[]'
p312
ag12
aS'None'
p313
aS'[]'
p314
ag12
aS'None'
p315
aS'[]'
p316
ag12
aS'None'
p317
aS'[]'
p318
ag12
aS'None'
p319
aS'[]'
p320
ag12
aS'None'
p321
aS'[]'
p322
ag12
aS'None'
p323
aS'[]'
p324
ag12
aS'None'
p325
aS'[]'
p326
ag12
aS'None'
p327
aS'[]'
p328
ag12
aS'None'
p329
aS'[]'
p330
ag12
aS'None'
p331
aS'[]'
p332
ag12
aS'3'
p333
aS'[]'
p334
ag12
aS'3'
p335
aS'[]'
p336
ag12
aS'3'
p337
aS'[]'
p338
ag12
aS'3'
p339
aS'[]'
p340
ag12
aS'None'
p341
aS'[]'
p342
ag12
aS'3'
p343
aS'[]'
p344
ag12
aS'3'
p345
aS'[]'
p346
ag12
aS'3'
p347
aS'[]'
p348
ag12
aS'3'
p349
aS'[]'
p350
ag12
aS'3'
p351
aS'[]'
p352
ag12
aS'None'
p353
aS'[]'
p354
ag12
aS'None'
p355
aS'[]'
p356
ag12
aS'None'
p357
aS'[]'
p358
ag12
aS'None'
p359
aS'[]'
p360
ag12
aS'None'
p361
aS'[]'
p362
ag12
aS'3'
p363
aS'[13L]'
p364
ag12
aS'3'
p365
aS'[13L]'
p366
ag12
aS'None'
p367
aS'[]'
p368
ag12
aS'None'
p369
aS'[]'
p370
ag12
aS'None'
p371
aS'[]'
p372
ag12
aS'2'
p373
aS'[3L]'
p374
ag12
aS'None'
p375
aS'[]'
p376
ag12
aS'None'
p377
aS'[]'
p378
ag12
aS'None'
p379
aS'[]'
p380
ag12
aS'None'
p381
aS'[]'
p382
ag12
aS'3'
p383
aS'[13L]'
p384
ag12
aS'None'
p385
aS'[]'
p386
ag12
aS'None'
p387
aS'[]'
p388
ag12
aS'None'
p389
aS'[]'
p390
ag12
aS'None'
p391
aS'[]'
p392
ag12
aS'None'
p393
aS'[]'
p394
ag12
aS'None'
p395
aS'[]'
p396
ag12
aS'None'
p397
aS'[]'
p398
ag12
aS'None'
p399
aS'[]'
p400
ag12
aS'None'
p401
aS'[]'
p402
ag12
aS'3'
p403
aS'[13L]'
p404
ag12
aS'None'
p405
aS'[]'
p406
ag12
aS'0'
p407
aS'[1L, 3L, 13L, 15L]'
p408
aS'<stack frame offset -0x8>'
p409
aS'None'
p410
aS'[]'
p411
ag12
aS'None'
p412
aS'[]'
p413
ag12
aS'None'
p414
aS'[]'
p415
ag12
aS'1'
p416
aS'[]'
p417
aS'<stack frame offset -0x8>'
p418
aS'None'
p419
aS'[]'
p420
ag12
aS'None'
p421
aS'[]'
p422
ag12
aS'None'
p423
aS'[]'
p424
ag12
aS'3'
p425
aS'[13L]'
p426
ag12
aS'None'
p427
aS'[]'
p428
ag12
aS'None'
p429
aS'[]'
p430
ag12
aS'3'
p431
aS'[4L]'
p432
ag12
aS'None'
p433
aS'[]'
p434
ag12
aS'None'
p435
aS'[]'
p436
ag12
aS'3'
p437
aS'[]'
p438
ag12
aS'None'
p439
aS'[]'
p440
ag12
aS'None'
p441
aS'[]'
p442
ag12
aS'None'
p443
aS'[]'
p444
ag12
aS'None'
p445
aS'[]'
p446
ag12
aS'None'
p447
aS'[]'
p448
ag12
aS'None'
p449
aS'[]'
p450
ag12
aS'None'
p451
aS'[]'
p452
ag12
aS'None'
p453
aS'[]'
p454
ag12
aS'None'
p455
aS'[]'
p456
ag12
aS'None'
p457
aS'[]'
p458
ag12
aS'None'
p459
aS'[]'
p460
ag12
aS'None'
p461
aS'[]'
p462
ag12
aS'None'
p463
aS'[]'
p464
ag12
aS'None'
p465
aS'[]'
p466
ag12
aS'None'
p467
aS'[]'
p468
ag12
aS'[]'
p469
ag12
aS'[]'
p470
ag12
aS'[]'
p471
ag12
aS'[]'
p472
ag12
aS'[]'
p473
ag12
aS'[]'
p474
ag12
aS'[]'
p475
ag12
aS'[]'
p476
ag12
aS'[]'
p477
ag12
aS'[]'
p478
ag12
aS'[]'
p479
ag12
aS'0'
p480
aS'0'
p481
aS'0'
p482
aS'0'
p483
aS'1'
p484
aS'2'
p485
aS'None'
p486
aS'2'
p487
aS'2'
p488
aS'3'
p489
aS'0'
p490
aS'3'
p491
aS'3'
p492
aS'4'
p493
aS'1'
p494
aS'4'
p495
aS'4'
p496
aS'5'
p497
aS'2'
p498
aS'5'
p499
aS'5'
p500
aS'6'
p501
aS'3'
p502
aS'6'
p503
aS'6'
p504
aS'7'
p505
aS'4'
p506
aS'7'
p507
aS'7'
p508
aS'8'
p509
aS'5'
p510
aS'8'
p511
aS'8'
p512
aS'9'
p513
aS'6'
p514
aS'9'
p515
aS'9'
p516
aS'10'
p517
aS'7'
p518
aS'10'
p519
aS'10'
p520
aS'11'
p521
aS'7'
p522
aS'11'
p523
aS'11'
p524
aS'12'
p525
aS'8'
p526
aS'12'
p527
aS'12'
p528
aS'13'
p529
aS'9'
p530
aS'13'
p531
aS'13'
p532
aS'17'
p533
aS'10'
p534
aS'14'
p535
aS'14'
p536
aS'18'
p537
aS'11'
p538
aS'15'
p539
aS'15'
p540
aS'19'
p541
aS'None'
p542
aS'16'
p543
aS'16'
p544
aS'21'
p545
aS'12'
p546
aS'18'
p547
aS'17'
p548
aS'22'
p549
aS'13'
p550
aS'19'
p551
aS'18'
p552
aS'23'
p553
aS'14'
p554
aS'20'
p555
aS'19'
p556
aS'24'
p557
aS'15'
p558
aS'21'
p559
aS'20'
p560
aS'25'
p561
aS'16'
p562
aS'22'
p563
aS'21'
p564
aS'26'
p565
aS'17'
p566
aS'23'
p567
aS'22'
p568
aS'27'
p569
aS'18'
p570
aS'24'
p571
aS'23'
p572
aS'28'
p573
aS'19'
p574
aS'25'
p575
aS'24'
p576
aS'29'
p577
aS'20'
p578
aS'26'
p579
aS'None'
p580
aS'[]'
p581
ag12
aS'None'
p582
aS'[]'
p583
ag12
aS'None'
p584
aS'[]'
p585
ag12
aS'None'
p586
aS'[]'
p587
ag12
aS'None'
p588
aS'[]'
p589
ag12
aS'None'
p590
aS'[]'
p591
ag12
aS'None'
p592
aS'[]'
p593
ag12
aS'None'
p594
aS'[]'
p595
ag12
aS'None'
p596
aS'[]'
p597
ag12
aS'None'
p598
aS'[]'
p599
ag12
aS'None'
p600
aS'[]'
p601
ag12
aS'None'
p602
aS'[]'
p603
ag12
aS'None'
p604
aS'[]'
p605
ag12
aS'None'
p606
aS'[]'
p607
ag12
aS'0'
p608
aS'[]'
p609
ag12
aS'None'
p610
aS'[]'
p611
ag12
aS'None'
p612
aS'[]'
p613
ag12
aS'None'
p614
aS'[]'
p615
ag12
aS'None'
p616
aS'[]'
p617
ag12
aS'0'
p618
aS'[]'
p619
ag12
aS'None'
p620
aS'[]'
p621
ag12
aS'None'
p622
aS'[]'
p623
ag12
aS'None'
p624
aS'[]'
p625
ag12
aS'0'
p626
aS'[]'
p627
ag12
aS'0'
p628
aS'[]'
p629
ag12
aS'0'
p630
aS'[]'
p631
ag12
aS'0'
p632
aS'[]'
p633
ag12
aS'0'
p634
aS'[]'
p635
ag12
aS'0'
p636
aS'[]'
p637
ag12
aS'None'
p638
aS'[]'
p639
ag12
aS'None'
p640
aS'[]'
p641
ag12
aS'None'
p642
aS'[]'
p643
ag12
aS'None'
p644
aS'[]'
p645
ag12
aS'None'
p646
aS'[]'
p647
ag12
aS'None'
p648
aS'[]'
p649
ag12
aS'None'
p650
aS'[]'
p651
ag12
aS'None'
p652
aS'[]'
p653
ag12
aS'None'
p654
aS'[]'
p655
ag12
aS'None'
p656
aS'[]'
p657
ag12
aS'None'
p658
aS'[]'
p659
ag12
aS'None'
p660
aS'[]'
p661
ag12
aS'None'
p662
aS'[]'
p663
ag12
aS'None'
p664
aS'[]'
p665
ag12
aS'None'
p666
aS'[]'
p667
ag12
aS'None'
p668
aS'[]'
p669
ag12
aS'None'
p670
aS'[]'
p671
ag12
aS'None'
p672
aS'[]'
p673
ag12
aS'None'
p674
aS'[]'
p675
ag12
aS'None'
p676
aS'[]'
p677
ag12
aS'None'
p678
aS'[]'
p679
ag12
aS'0'
p680
aS'[]'
p681
ag12
aS'0'
p682
aS'[]'
p683
ag12
aS'0'
p684
aS'[]'
p685
ag12
aS'0'
p686
aS'[]'
p687
ag12
aS'None'
p688
aS'[]'
p689
ag12
aS'0'
p690
aS'[]'
p691
ag12
aS'0'
p692
aS'[]'
p693
ag12
aS'0'
p694
aS'[]'
p695
ag12
aS'0'
p696
aS'[]'
p697
ag12
aS'0'
p698
aS'[]'
p699
ag12
aS'None'
p700
aS'[]'
p701
ag12
aS'None'
p702
aS'[]'
p703
ag12
aS'None'
p704
aS'[]'
p705
ag12
aS'None'
p706
aS'[]'
p707
ag12
aS'None'
p708
aS'[]'
p709
ag12
aS'0'
p710
aS'[]'
p711
ag12
aS'0'
p712
aS'[]'
p713
ag12
aS'None'
p714
aS'[]'
p715
ag12
aS'None'
p716
aS'[]'
p717
ag12
aS'None'
p718
aS'[]'
p719
ag12
aS'0'
p720
aS'[]'
p721
ag12
aS'None'
p722
aS'[]'
p723
ag12
aS'None'
p724
aS'[]'
p725
ag12
aS'None'
p726
aS'[]'
p727
ag12
aS'None'
p728
aS'[]'
p729
ag12
aS'0'
p730
aS'[]'
p731
ag12
aS'None'
p732
aS'[]'
p733
ag12
aS'None'
p734
aS'[]'
p735
ag12
aS'None'
p736
aS'[]'
p737
ag12
aS'None'
p738
aS'[]'
p739
ag12
aS'None'
p740
aS'[]'
p741
ag12
aS'None'
p742
aS'[]'
p743
ag12
aS'None'
p744
aS'[]'
p745
ag12
aS'None'
p746
aS'[]'
p747
ag12
aS'None'
p748
aS'[]'
p749
ag12
aS'0'
p750
aS'[]'
p751
ag12
aS'None'
p752
aS'[]'
p753
ag12
aS'None'
p754
aS'[]'
p755
ag12
aS'None'
p756
aS'[]'
p757
ag12
aS'None'
p758
aS'[]'
p759
ag12
aS'None'
p760
aS'[]'
p761
ag12
aS'None'
p762
aS'[]'
p763
ag12
aS'None'
p764
aS'[]'
p765
ag12
aS'None'
p766
aS'[]'
p767
ag12
aS'None'
p768
aS'[]'
p769
ag12
aS'0'
p770
aS'[]'
p771
ag12
aS'None'
p772
aS'[]'
p773
ag12
aS'None'
p774
aS'[]'
p775
ag12
aS'0'
p776
aS'[]'
p777
ag12
aS'None'
p778
aS'[]'
p779
ag12
aS'None'
p780
aS'[]'
p781
ag12
aS'0'
p782
aS'[]'
p783
ag12
aS'None'
p784
aS'[]'
p785
ag12
aS'None'
p786
aS'[]'
p787
ag12
aS'None'
p788
aS'[]'
p789
ag12
aS'None'
p790
aS'[]'
p791
ag12
aS'None'
p792
aS'[]'
p793
ag12
aS'None'
p794
aS'[]'
p795
ag12
aS'None'
p796
aS'[]'
p797
ag12
aS'None'
p798
aS'[]'
p799
ag12
aS'None'
p800
aS'[]'
p801
ag12
aS'None'
p802
aS'[]'
p803
ag12
aS'None'
p804
aS'[]'
p805
ag12
aS'None'
p806
aS'[]'
p807
ag12
aS'None'
p808
aS'[]'
p809
ag12
aS'None'
p810
aS'[]'
p811
ag12
aS'None'
p812
aS'[]'
p813
ag12
aS'[]'
p814
ag12
aS'[]'
p815
ag12
aS'[]'
p816
ag12
aS'[]'
p817
ag12
aS'[]'
p818
ag12
aS'[]'
p819
ag12
aS'[]'
p820
ag12
aS'[]'
p821
ag12
aS'[]'
p822
ag12
aS'[]'
p823
ag12
aS'[]'
p824
ag12
aS'0'
p825
aS'0'
p826
aS'0'
p827
aS'0'
p828
aS'None'
p829
aS'[]'
p830
ag12
aS'None'
p831
aS'[]'
p832
ag12
aS'None'
p833
aS'[]'
p834
ag12
aS'None'
p835
aS'[]'
p836
ag12
aS'None'
p837
aS'[]'
p838
ag12
aS'None'
p839
aS'[]'
p840
ag12
aS'None'
p841
aS'[]'
p842
ag12
aS'None'
p843
aS'[]'
p844
ag12
aS'None'
p845
aS'[]'
p846
ag12
aS'None'
p847
aS'[]'
p848
ag12
aS'None'
p849
aS'[]'
p850
ag12
aS'None'
p851
aS'[]'
p852
ag12
aS'None'
p853
aS'[]'
p854
ag12
aS'None'
p855
aS'[]'
p856
ag12
aS'0'
p857
aS'[]'
p858
ag12
aS'None'
p859
aS'[]'
p860
ag12
aS'None'
p861
aS'[]'
p862
ag12
aS'None'
p863
aS'[]'
p864
ag12
aS'None'
p865
aS'[]'
p866
ag12
aS'0'
p867
aS'[]'
p868
ag12
aS'None'
p869
aS'[]'
p870
ag12
aS'None'
p871
aS'[]'
p872
ag12
aS'None'
p873
aS'[]'
p874
ag12
aS'0'
p875
aS'[]'
p876
ag12
aS'0'
p877
aS'[]'
p878
ag12
aS'0'
p879
aS'[]'
p880
ag12
aS'0'
p881
aS'[]'
p882
ag12
aS'0'
p883
aS'[]'
p884
ag12
aS'0'
p885
aS'[]'
p886
ag12
aS'None'
p887
aS'[]'
p888
ag12
aS'None'
p889
aS'[]'
p890
ag12
aS'None'
p891
aS'[]'
p892
ag12
aS'None'
p893
aS'[]'
p894
ag12
aS'None'
p895
aS'[]'
p896
ag12
aS'None'
p897
aS'[]'
p898
ag12
aS'None'
p899
aS'[]'
p900
ag12
aS'None'
p901
aS'[]'
p902
ag12
aS'None'
p903
aS'[]'
p904
ag12
aS'None'
p905
aS'[]'
p906
ag12
aS'None'
p907
aS'[]'
p908
ag12
aS'None'
p909
aS'[]'
p910
ag12
aS'None'
p911
aS'[]'
p912
ag12
aS'None'
p913
aS'[]'
p914
ag12
aS'None'
p915
aS'[]'
p916
ag12
aS'None'
p917
aS'[]'
p918
ag12
aS'None'
p919
aS'[]'
p920
ag12
aS'None'
p921
aS'[]'
p922
ag12
aS'None'
p923
aS'[]'
p924
ag12
aS'None'
p925
aS'[]'
p926
ag12
aS'None'
p927
aS'[]'
p928
ag12
aS'0'
p929
aS'[]'
p930
ag12
aS'0'
p931
aS'[]'
p932
ag12
aS'0'
p933
aS'[]'
p934
ag12
aS'0'
p935
aS'[]'
p936
ag12
aS'None'
p937
aS'[]'
p938
ag12
aS'0'
p939
aS'[]'
p940
ag12
aS'0'
p941
aS'[]'
p942
ag12
aS'0'
p943
aS'[]'
p944
ag12
aS'0'
p945
aS'[]'
p946
ag12
aS'0'
p947
aS'[]'
p948
ag12
aS'None'
p949
aS'[]'
p950
ag12
aS'None'
p951
aS'[]'
p952
ag12
aS'None'
p953
aS'[]'
p954
ag12
aS'None'
p955
aS'[]'
p956
ag12
aS'None'
p957
aS'[]'
p958
ag12
aS'0'
p959
aS'[]'
p960
ag12
aS'0'
p961
aS'[]'
p962
ag12
aS'None'
p963
aS'[]'
p964
ag12
aS'None'
p965
aS'[]'
p966
ag12
aS'None'
p967
aS'[]'
p968
ag12
aS'0'
p969
aS'[]'
p970
ag12
aS'None'
p971
aS'[]'
p972
ag12
aS'None'
p973
aS'[]'
p974
ag12
aS'None'
p975
aS'[]'
p976
ag12
aS'None'
p977
aS'[]'
p978
ag12
aS'0'
p979
aS'[]'
p980
ag12
aS'None'
p981
aS'[]'
p982
ag12
aS'None'
p983
aS'[]'
p984
ag12
aS'None'
p985
aS'[]'
p986
ag12
aS'None'
p987
aS'[]'
p988
ag12
aS'None'
p989
aS'[]'
p990
ag12
aS'None'
p991
aS'[]'
p992
ag12
aS'None'
p993
aS'[]'
p994
ag12
aS'None'
p995
aS'[]'
p996
ag12
aS'None'
p997
aS'[]'
p998
ag12
aS'0'
p999
aS'[]'
p1000
ag12
aS'None'
p1001
aS'[]'
p1002
ag12
aS'None'
p1003
aS'[]'
p1004
ag12
aS'None'
p1005
aS'[]'
p1006
ag12
aS'None'
p1007
aS'[]'
p1008
ag12
aS'None'
p1009
aS'[]'
p1010
ag12
aS'None'
p1011
aS'[]'
p1012
ag12
aS'None'
p1013
aS'[]'
p1014
ag12
aS'None'
p1015
aS'[]'
p1016
ag12
aS'None'
p1017
aS'[]'
p1018
ag12
aS'0'
p1019
aS'[]'
p1020
ag12
aS'None'
p1021
aS'[]'
p1022
ag12
aS'None'
p1023
aS'[]'
p1024
ag12
aS'0'
p1025
aS'[]'
p1026
ag12
aS'None'
p1027
aS'[]'
p1028
ag12
aS'None'
p1029
aS'[]'
p1030
ag12
aS'0'
p1031
aS'[]'
p1032
ag12
aS'None'
p1033
aS'[]'
p1034
ag12
aS'None'
p1035
aS'[]'
p1036
ag12
aS'None'
p1037
aS'[]'
p1038
ag12
aS'None'
p1039
aS'[]'
p1040
ag12
aS'None'
p1041
aS'[]'
p1042
ag12
aS'None'
p1043
aS'[]'
p1044
ag12
aS'None'
p1045
aS'[]'
p1046
ag12
aS'None'
p1047
aS'[]'
p1048
ag12
aS'None'
p1049
aS'[]'
p1050
ag12
aS'None'
p1051
aS'[]'
p1052
ag12
aS'None'
p1053
aS'[]'
p1054
ag12
aS'None'
p1055
aS'[]'
p1056
ag12
aS'None'
p1057
aS'[]'
p1058
ag12
aS'None'
p1059
aS'[]'
p1060
ag12
aS'None'
p1061
aS'[]'
p1062
ag12
aS'[]'
p1063
ag12
aS'[]'
p1064
ag12
aS'[]'
p1065
ag12
aS'[]'
p1066
ag12
aS'[]'
p1067
ag12
aS'[]'
p1068
ag12
aS'[]'
p1069
ag12
aS'[]'
p1070
ag12
aS'[]'
p1071
ag12
aS'[]'
p1072
ag12
aS'[]'
p1073
ag12
aS'0'
p1074
aS'0'
p1075
aS'0'
p1076
aS'0'
p1077
asS'test_med_il_instructions'
p1078
(lp1079
S'None'
p1080
aS'rdi#1 = [rsi#0 + 8].q @ mem#1'
p1081
ag12
aS'<undetermined>'
p1082
aS'{}'
p1083
aS"['8', '<MLIL_ADD 8>', '<MLIL_CONST 8>', '<MLIL_LOAD 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'arg2', 'rdi']"
p1084
aS"['8', '<MLIL_ADD 8>', '<MLIL_CONST 8>', '<MLIL_LOAD 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'arg2', 'rdi']"
p1085
aS'rdi#1 = [arg2#0 + 8].q @ mem#0'
p1086
aS'rdi = [arg2 + 8].q'
p1087
aS'None'
p1088
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#2, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#2 = call(0x100000f5c, stack = rsp#1 @ mem#1, params = rdi#1, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1089
ag12
ag1082
aS'{}'
p1090
aS"['4294971228', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi>]', '[<var int64_t rax>]']"
p1091
aS"['4294971228', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi>]', '[<var int64_t rax>]']"
p1092
aS'rax#1, mem#1 = 0x100000f5c(rdi#1) @ mem#0'
p1093
aS'rax = 0x100000f5c(rdi)'
p1094
aS'None'
p1095
aS'rax#2 = zx.q((rax#1 + (rax#1 << 3)).d)'
p1096
ag12
ag1082
aS'{}'
p1097
aS"['3', '<MLIL_ADD 8>', '<MLIL_CONST 1>', '<MLIL_LOW_PART 4>', '<MLIL_LSL 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', '<MLIL_VAR 8>', '<MLIL_ZX 8>', 'rax', 'rax', 'rax_1']"
p1098
aS"['3', '<MLIL_ADD 8>', '<MLIL_CONST 1>', '<MLIL_LOW_PART 4>', '<MLIL_LSL 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', '<MLIL_VAR 8>', '<MLIL_ZX 8>', 'rax', 'rax', 'rax_1']"
p1099
aS'rax_1#2 = zx.q((rax#1 + (rax#1 << 3)).d)'
p1100
aS'rax_1 = zx.q((rax + (rax << 3)).d)'
p1101
aS'None'
p1102
aS'rax#3 = zx.q((rax#2 + (rax#2 << 2)).d)'
p1103
ag12
ag1082
aS'{}'
p1104
aS"['2', '<MLIL_ADD 8>', '<MLIL_CONST 1>', '<MLIL_LOW_PART 4>', '<MLIL_LSL 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', '<MLIL_VAR 8>', '<MLIL_ZX 8>', 'rax_1', 'rax_1', 'rax_2']"
p1105
aS"['2', '<MLIL_ADD 8>', '<MLIL_CONST 1>', '<MLIL_LOW_PART 4>', '<MLIL_LSL 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', '<MLIL_VAR 8>', '<MLIL_ZX 8>', 'rax_1', 'rax_1', 'rax_2']"
p1106
aS'rax_2#3 = zx.q((rax_1#2 + (rax_1#2 << 2)).d)'
p1107
aS'rax_2 = zx.q((rax_1 + (rax_1 << 2)).d)'
p1108
aS'None'
p1109
aS'if (rax#3.eax u> 3) then 8 @ 0x100000f21 else 10 @ 0x100000f08'
p1110
ag12
ag1082
aS'{}'
p1111
aS"['0', '3', '5', '7', '<MLIL_CMP_UGT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR_FIELD 4>', 'rax_2']"
p1112
aS"['0', '3', '5', '7', '<MLIL_CMP_UGT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR_FIELD 4>', 'rax_2']"
p1113
aS'if (rax_2#3.eax u> 3) then 5 @ 0x100000f21 else 7 @ 0x100000f0f'
p1114
aS'if (rax_2.eax u> 3) then 5 @ 0x100000f21 else 7 @ 0x100000f0f'
p1115
aS'None'
p1116
aS'rdi#3 = 0x100000f9f'
p1117
ag12
ag1082
aS'{4L: <ILBranchDependence.TrueBranchDependent: 1>}'
p1118
aS"['4294971295', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1119
aS"['4294971295', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1120
aS'rdi_1#2 = 0x100000f9f'
p1121
aS'rdi_1 = 0x100000f9f'
p1122
aS'None'
p1123
aS'goto 14 @ 0x100000f43'
p1124
ag12
ag1082
aS'{4L: <ILBranchDependence.TrueBranchDependent: 1>}'
p1125
aS"['10', '<MLIL_GOTO>']"
p1126
aS"['10', '<MLIL_GOTO>']"
p1127
aS'goto 10 @ 0x100000f43'
p1128
aS'goto 10 @ 0x100000f43'
p1129
aS'None'
p1130
aS'rax#4 = sx.q([rcx#2 + (rax#3 << 2)].d @ mem#2)'
p1131
ag12
ag1082
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1132
aS"['2', '4294971212', '<MLIL_ADD 8>', '<MLIL_CONST 1>', '<MLIL_CONST_PTR 8>', '<MLIL_LOAD 4>', '<MLIL_LSL 8>', '<MLIL_SET_VAR 8>', '<MLIL_SX 8>', '<MLIL_VAR 8>', 'rax_2', 'rax_3']"
p1133
aS"['2', '4294971212', '<MLIL_ADD 8>', '<MLIL_CONST 1>', '<MLIL_CONST_PTR 8>', '<MLIL_LOAD 4>', '<MLIL_LSL 8>', '<MLIL_SET_VAR 8>', '<MLIL_SX 8>', '<MLIL_VAR 8>', 'rax_2', 'rax_3']"
p1134
aS'rax_3#4 = sx.q([0x100000f4c + (rax_2#3 << 2)].d @ mem#1)'
p1135
aS'rax_3 = sx.q([0x100000f4c + (rax_2 << 2)].d)'
p1136
aS'None'
p1137
aS'rax#5 = rax#4 + rcx#2'
p1138
ag12
ag1082
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1139
aS"['4294971212', '<MLIL_ADD 8>', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'rax_3', 'rax_4']"
p1140
aS"['4294971212', '<MLIL_ADD 8>', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'rax_3', 'rax_4']"
p1141
aS'rax_4#5 = rax_3#4 + 0x100000f4c'
p1142
aS'rax_4 = rax_3 + 0x100000f4c'
p1143
aS'None'
p1144
aS'jump(rax#5 => 22 @ 0x100000f18, 24 @ 0x100000f2a, 26 @ 0x100000f33, 28 @ 0x100000f3c)'
p1145
ag12
ag1082
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1146
aS"['<MLIL_JUMP_TO>', '<MLIL_VAR 8>', '[13L, 15L, 17L, 19L]', 'rax_4']"
p1147
aS"['<MLIL_JUMP_TO>', '<MLIL_VAR 8>', '[13L, 15L, 17L, 19L]', 'rax_4']"
p1148
aS'jump(rax_4#5 => 15 @ 0x100000f18, 17 @ 0x100000f2a, 19 @ 0x100000f33, 21 @ 0x100000f3c)'
p1149
aS'jump(rax_4 => 13 @ 0x100000f18, 15 @ 0x100000f2a, 17 @ 0x100000f33, 19 @ 0x100000f3c)'
p1150
aS'None'
p1151
aS'rax#7, rcx#4, rdx#2, rsi#2, rdi#9, r8#2, r9#2, r10#2, r11#2, xmm0#2, xmm1#2, xmm2#2, xmm3#2, xmm4#2, xmm5#2, xmm6#2, xmm7#2, xmm8#2, xmm9#2, xmm10#2, xmm11#2, xmm12#2, xmm13#2, xmm14#2, xmm15#2, mem#3 = call(0x100000f62, stack = rsp#1 @ mem#2, params = rdi#8, rsi#1, rdx#1, rcx#3, r8#1, r9#1)'
p1152
ag12
ag1082
aS'{}'
p1153
aS"['4294971234', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi_1>]', '[]']"
p1154
aS"['4294971234', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi_1>]', '[]']"
p1155
aS'mem#2 = 0x100000f62(rdi_1#7) @ mem#1'
p1156
aS'0x100000f62(rdi_1)'
p1157
aS'None'
p1158
aS'rax#8 = zx.q(0)'
p1159
ag12
ag1082
aS'{}'
p1160
aS"['0', '<MLIL_CONST 8>', '<MLIL_SET_VAR 8>', 'rax_5']"
p1161
aS"['0', '<MLIL_CONST 8>', '<MLIL_SET_VAR 8>', 'rax_5']"
p1162
aS'rax_5#7 = 0'
p1163
aS'rax_5 = 0'
p1164
aS'None'
p1165
aS'<return> jump([rsp#2].q @ mem#3)'
p1166
ag12
ag1082
aS'{}'
p1167
aS"['<MLIL_RET>', '[<il: 0>]']"
p1168
aS"['<MLIL_RET>', '[<il: 0>]']"
p1169
aS'return 0'
p1170
aS'return 0'
p1171
aS'None'
p1172
aS'rdi#4 = 0x100000f9a'
p1173
ag12
ag1082
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1174
aS"['4294971290', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1175
aS"['4294971290', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1176
aS'rdi_1#3 = 0x100000f9a'
p1177
aS'rdi_1 = 0x100000f9a'
p1178
aS'None'
p1179
aS'goto 14 @ 0x100000f43'
p1180
ag12
ag1082
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1181
aS"['10', '<MLIL_GOTO>']"
p1182
aS"['10', '<MLIL_GOTO>']"
p1183
aS'goto 10 @ 0x100000f43'
p1184
aS'goto 10 @ 0x100000f43'
p1185
aS'None'
p1186
aS'rdi#5 = 0x100000f96'
p1187
ag12
ag1082
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1188
aS"['4294971286', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1189
aS"['4294971286', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1190
aS'rdi_1#4 = 0x100000f96'
p1191
aS'rdi_1 = 0x100000f96'
p1192
aS'None'
p1193
aS'goto 14 @ 0x100000f43'
p1194
ag12
ag1082
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1195
aS"['10', '<MLIL_GOTO>']"
p1196
aS"['10', '<MLIL_GOTO>']"
p1197
aS'goto 10 @ 0x100000f43'
p1198
aS'goto 10 @ 0x100000f43'
p1199
aS'None'
p1200
aS'rdi#6 = 0x100000f92'
p1201
ag12
ag1082
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1202
aS"['4294971282', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1203
aS"['4294971282', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1204
aS'rdi_1#5 = 0x100000f92'
p1205
aS'rdi_1 = 0x100000f92'
p1206
aS'None'
p1207
aS'goto 14 @ 0x100000f43'
p1208
ag12
ag1082
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1209
aS"['10', '<MLIL_GOTO>']"
p1210
aS"['10', '<MLIL_GOTO>']"
p1211
aS'goto 10 @ 0x100000f43'
p1212
aS'goto 10 @ 0x100000f43'
p1213
aS'None'
p1214
aS'rdi#7 = 0x100000f8c'
p1215
ag12
ag1082
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1216
aS"['4294971276', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1217
aS"['4294971276', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1218
aS'rdi_1#6 = 0x100000f8c'
p1219
aS'rdi_1 = 0x100000f8c'
p1220
aS'None'
p1221
aS'goto 14 @ 0x100000f43'
p1222
ag12
ag1082
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1223
aS"['10', '<MLIL_GOTO>']"
p1224
aS"['10', '<MLIL_GOTO>']"
p1225
aS'goto 10 @ 0x100000f43'
p1226
aS'goto 10 @ 0x100000f43'
p1227
aS'None'
p1228
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001010].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1229
ag12
ag1082
aS'{}'
p1230
aS"['4294971408', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1231
aS"['4294971408', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1232
aS'return _atoi() __tailcall'
p1233
aS'return _atoi() __tailcall'
p1234
aS'None'
p1235
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001018].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1236
ag12
ag1082
aS'{}'
p1237
aS"['4294971416', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1238
aS"['4294971416', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1239
aS'return _puts() __tailcall'
p1240
aS'return _puts() __tailcall'
p1241
asS'test_function_symbol_names'
p1242
(lp1243
S'_main SymbolType.FunctionSymbol 0x100000ef0L'
p1244
aS'_atoi SymbolType.ImportedFunctionSymbol 0x100000f5cL'
p1245
aS'_puts SymbolType.ImportedFunctionSymbol 0x100000f62L'
p1246
asS'test_BinaryView'
p1247
(lp1248
S'void*'
p1249
aS'[<segment: 0x100000000-0x100001000, r-x>, <segment: 0x100001000-0x100002000, rw->, <segment: 0x100002000-0x100003000, r-->]'
p1250
aS"{'__stub_helper': <section __stub_helper: 0x100000f68-0x100000f8c>, '__unwind_info': <section __unwind_info: 0x100000fb0-0x100000ff8>, '__la_symbol_ptr': <section __la_symbol_ptr: 0x100001010-0x100001020>, '__stubs': <section __stubs: 0x100000f5c-0x100000f68>, '__nl_symbol_ptr': <section __nl_symbol_ptr: 0x100001000-0x100001010>, '__text': <section __text: 0x100000ef0-0x100000f5c>, '__cstring': <section __cstring: 0x100000f8c-0x100000fae>}"
p1251
aS'[<0x100000000-0x100003000>]'
p1252
aS'{}'
p1253
aS'4294971392'
p1254
aS'4294971234'
p1255
aS'4294971276'
p1256
aS'4294971212'
p1257
aS'4294971408'
p1258
aS'4294971282'
p1259
aS'4294971286'
p1260
aS'4294971416'
p1261
aS'4294971290'
p1262
aS'4294971228'
p1263
aS'4294971295'
p1264
aS'<func: x86_64@0x100000ef0>'
p1265
aS'<func: x86_64@0x100000ef0>'
p1266
aS'<func: x86_64@0x100000f5c>'
p1267
aS'<func: x86_64@0x100000f62>'
p1268
aS'0x100000ef0L'
p1269
aS'0x100000000L'
p1270
aS'length: 0x3000'
p1271
asS'test_available_types'
p1272
(lp1273
S'Raw'
p1274
aS'Mach-O'
p1275
asS'test_function_basic_blocks'
p1276
(lp1277
S'0x100000ef0L 0x100000f08L False'
p1278
aS'0x100000f21L 0x100000f2aL False'
p1279
aS'0x100000f08L 0x100000f18L False'
p1280
aS'0x100000f43L 0x100000f4cL True'
p1281
aS'0x100000f18L 0x100000f21L False'
p1282
aS'0x100000f2aL 0x100000f33L False'
p1283
aS'0x100000f33L 0x100000f3cL False'
p1284
aS'0x100000f3cL 0x100000f43L False'
p1285
aS'0x100000f5cL 0x100000f62L True'
p1286
aS'0x100000f62L 0x100000f68L True'
p1287
asS'test_function_med_il_basic_blocks'
p1288
(lp1289
S'0x0L 0x5L 2'
p1290
aS'0x5L 0x7L 1'
p1291
aS'0x7L 0xaL 4'
p1292
aS'0xaL 0xdL 0'
p1293
aS'0xdL 0xfL 1'
p1294
aS'0xfL 0x11L 1'
p1295
aS'0x11L 0x13L 1'
p1296
aS'0x13L 0x15L 1'
p1297
aS'0x0L 0x1L 0'
p1298
aS'0x0L 0x1L 0'
p1299
asS'test_symbols'
p1300
(lp1301
S'_atoi'
p1302
aS'_atoi@PLT'
p1303
aS'_main'
p1304
aS'_puts'
p1305
aS'_puts@PLT'
p1306
aS'dyld_stub_binder'
p1307
aS'jump_table_100000f4c'
p1308
asS'test_low_il_instructions'
p1309
(lp1310
S'None'
p1311
aS'__saved_rbp = rbp'
p1312
ag12
ag1082
aS'[<LLIL_PUSH 8>, <LLIL_REG 8>, rbp]'
p1313
aS'[rbp, <LLIL_REG 8>, <LLIL_PUSH 8>]'
p1314
aS'[rsp#0 - 8].q = rbp#0 @ mem#0 -> mem#1'
p1315
aS'push(rbp)'
p1316
aS'None'
p1317
aS'rbp = &__saved_rbp'
p1318
ag12
ag1082
aS'[<LLIL_SET_REG 8>, rbp, <LLIL_REG 8>, rsp]'
p1319
aS'[rbp, rsp, <LLIL_REG 8>, <LLIL_SET_REG 8>]'
p1320
aS'rbp#1 = rsp#1'
p1321
aS'rbp = rsp'
p1322
aS'rdi = [arg2 + 8].q'
p1323
aS'arg1 = [arg2 + 8].q'
p1324
ag12
ag1082
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_LOAD 8>, <LLIL_ADD 8>, <LLIL_REG 8>, rsi, <LLIL_CONST 8>, 8L]'
p1325
aS'[rdi, rsi, <LLIL_REG 8>, 8L, <LLIL_CONST 8>, <LLIL_ADD 8>, <LLIL_LOAD 8>, <LLIL_SET_REG 8>]'
p1326
aS'rdi#1 = [rsi#0 + 8].q @ mem#1'
p1327
aS'rdi = [rsi + 8].q'
p1328
aS'rax = 0x100000f5c(rdi)'
p1329
aS'rax, rcx, rdx, arg2, arg1, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = call(0x100000f5c, arg1, arg2, rdx, rcx, r8, r9, stack = &__saved_rbp)'
p1330
ag12
ag1082
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 8>, 4294971228L, 0L, {}]'
p1331
aS'[4294971228L, <LLIL_CONST_PTR 8>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1332
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#2, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#2 = call(0x100000f5c, stack = rsp#1 @ mem#1, params = rdi#1, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1333
aS'call(0x100000f5c)'
p1334
aS'rax_1 = zx.q((rax + (rax << 3)).d)'
p1335
aS'rax = zx.q((rax + (rax << 3)).d)'
p1336
ag12
ag1082
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOW_PART 4>, <LLIL_ADD 8>, <LLIL_REG 8>, rax, <LLIL_LSL 8>, <LLIL_REG 8>, rax, <LLIL_CONST 1>, 3L]'
p1337
aS'[eax, rax, <LLIL_REG 8>, rax, <LLIL_REG 8>, 3L, <LLIL_CONST 1>, <LLIL_LSL 8>, <LLIL_ADD 8>, <LLIL_LOW_PART 4>, <LLIL_SET_REG 4>]'
p1338
aS'rax#2 = zx.q((rax#1 + (rax#1 << 3)).d)'
p1339
aS'eax = (rax + (rax << 3)).d'
p1340
aS'rax_2 = zx.q((rax_1 + (rax_1 << 2)).d)'
p1341
aS'rax = zx.q((rax + (rax << 2)).d)'
p1342
ag12
ag1082
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOW_PART 4>, <LLIL_ADD 8>, <LLIL_REG 8>, rax, <LLIL_LSL 8>, <LLIL_REG 8>, rax, <LLIL_CONST 1>, 2L]'
p1343
aS'[eax, rax, <LLIL_REG 8>, rax, <LLIL_REG 8>, 2L, <LLIL_CONST 1>, <LLIL_LSL 8>, <LLIL_ADD 8>, <LLIL_LOW_PART 4>, <LLIL_SET_REG 4>]'
p1344
aS'rax#3 = zx.q((rax#2 + (rax#2 << 2)).d)'
p1345
aS'eax = (rax + (rax << 2)).d'
p1346
aS'None'
p1347
aS'if (rax.eax u> 3) then 8 @ 0x100000f21 else 10 @ 0x100000f08'
p1348
ag12
ag1082
aS'[<LLIL_IF>, <LLIL_CMP_UGT 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 3L, 7L, 9L]'
p1349
aS'[eax, <LLIL_REG 4>, 3L, <LLIL_CONST 4>, <LLIL_CMP_UGT 4>, 7L, 9L, <LLIL_IF>]'
p1350
aS'if (rax#3.eax u> 3) then 8 @ 0x100000f21 else 10 @ 0x100000f08'
p1351
aS'if (eax u> 3) then 7 @ 0x100000f21 else 9 @ 0x100000f08'
p1352
aS'rdi_1 = 0x100000f9f'
p1353
aS'arg1 = 0x100000f9f'
p1354
ag12
ag1082
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971295L]'
p1355
aS'[rdi, 4294971295L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1356
aS'rdi#3 = 0x100000f9f'
p1357
aS'rdi = 0x100000f9f'
p1358
aS'None'
p1359
aS'goto 14 @ 0x100000f43'
p1360
ag12
ag1082
aS'[<LLIL_GOTO>, 13L]'
p1361
aS'[13L, <LLIL_GOTO>]'
p1362
aS'goto 14 @ 0x100000f43'
p1363
aS'goto 13 @ 0x100000f43'
p1364
aS'None'
p1365
aS'rcx = 0x100000f4c'
p1366
ag12
ag1082
aS'[<LLIL_SET_REG 8>, rcx, <LLIL_CONST_PTR 8>, 4294971212L]'
p1367
aS'[rcx, 4294971212L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1368
aS'rcx#2 = 0x100000f4c'
p1369
aS'rcx = 0x100000f4c'
p1370
aS'rax_3 = sx.q([0x100000f4c + (rax_2 << 2)].d)'
p1371
aS'rax = sx.q([0x100000f4c + (rax << 2)].d)'
p1372
ag12
ag1082
aS'[<LLIL_SET_REG 8>, rax, <LLIL_SX 8>, <LLIL_LOAD 4>, <LLIL_ADD 8>, <LLIL_REG 8>, rcx, <LLIL_LSL 8>, <LLIL_REG 8>, rax, <LLIL_CONST 1>, 2L]'
p1373
aS'[rax, rcx, <LLIL_REG 8>, rax, <LLIL_REG 8>, 2L, <LLIL_CONST 1>, <LLIL_LSL 8>, <LLIL_ADD 8>, <LLIL_LOAD 4>, <LLIL_SX 8>, <LLIL_SET_REG 8>]'
p1374
aS'rax#4 = sx.q([rcx#2 + (rax#3 << 2)].d @ mem#2)'
p1375
aS'rax = sx.q([rcx + (rax << 2)].d)'
p1376
aS'rax_4 = rax_3 + 0x100000f4c'
p1377
aS'rax = rax + 0x100000f4c'
p1378
ag12
ag1082
aS'[<LLIL_SET_REG 8>, rax, <LLIL_ADD 8>, <LLIL_REG 8>, rax, <LLIL_REG 8>, rcx]'
p1379
aS'[rax, rax, <LLIL_REG 8>, rcx, <LLIL_REG 8>, <LLIL_ADD 8>, <LLIL_SET_REG 8>]'
p1380
aS'rax#5 = rax#4 + rcx#2'
p1381
aS'rax = rax + rcx'
p1382
aS'None'
p1383
aS'jump(rax => 19 @ 0x100000f18, 21 @ 0x100000f2a, 23 @ 0x100000f33, 25 @ 0x100000f3c)'
p1384
ag12
ag1082
aS'[<LLIL_JUMP_TO>, <LLIL_REG 8>, rax, [17L, 19L, 21L, 23L]]'
p1385
aS'[rax, <LLIL_REG 8>, [17L, 19L, 21L, 23L], <LLIL_JUMP_TO>]'
p1386
aS'jump(rax#5 => 22 @ 0x100000f18, 24 @ 0x100000f2a, 26 @ 0x100000f33, 28 @ 0x100000f3c)'
p1387
aS'jump(rax => 17 @ 0x100000f18, 19 @ 0x100000f2a, 21 @ 0x100000f33, 23 @ 0x100000f3c)'
p1388
aS'0x100000f62(rdi_1)'
p1389
aS'rax, rcx, rdx, arg2, arg1, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = call(0x100000f62, arg1, arg2, rdx, rcx, r8, r9, stack = &__saved_rbp)'
p1390
ag12
ag1082
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 8>, 4294971234L, 0L, {}]'
p1391
aS'[4294971234L, <LLIL_CONST_PTR 8>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1392
aS'rax#7, rcx#4, rdx#2, rsi#2, rdi#9, r8#2, r9#2, r10#2, r11#2, xmm0#2, xmm1#2, xmm2#2, xmm3#2, xmm4#2, xmm5#2, xmm6#2, xmm7#2, xmm8#2, xmm9#2, xmm10#2, xmm11#2, xmm12#2, xmm13#2, xmm14#2, xmm15#2, mem#3 = call(0x100000f62, stack = rsp#1 @ mem#2, params = rdi#8, rsi#1, rdx#1, rcx#3, r8#1, r9#1)'
p1393
aS'call(0x100000f62)'
p1394
aS'rax_5 = 0'
p1395
aS'rax = 0'
p1396
ag12
ag1082
aS'[<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 0L]'
p1397
aS'[eax, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1398
aS'rax#8 = zx.q(0)'
p1399
aS'eax = 0'
p1400
aS'None'
p1401
aS'rbp = __saved_rbp'
p1402
ag12
ag1082
aS'[<LLIL_SET_REG 8>, rbp, <LLIL_POP 8>]'
p1403
aS'[rbp, <LLIL_POP 8>, <LLIL_SET_REG 8>]'
p1404
aS'rbp#2 = [rsp#1].q @ mem#3'
p1405
aS'rbp = pop'
p1406
aS'None'
p1407
aS'return '
p1408
ag12
ag1082
aS'[<LLIL_RET>, <LLIL_POP 8>]'
p1409
aS'[<LLIL_POP 8>, <LLIL_RET>]'
p1410
aS'<return> jump([rsp#2].q @ mem#3)'
p1411
aS'<return> jump(pop)'
p1412
aS'rdi_1 = 0x100000f9a'
p1413
aS'arg1 = 0x100000f9a'
p1414
ag12
ag1082
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971290L]'
p1415
aS'[rdi, 4294971290L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1416
aS'rdi#4 = 0x100000f9a'
p1417
aS'rdi = 0x100000f9a'
p1418
aS'None'
p1419
aS'goto 14 @ 0x100000f43'
p1420
ag12
ag1082
aS'[<LLIL_GOTO>, 13L]'
p1421
aS'[13L, <LLIL_GOTO>]'
p1422
aS'goto 14 @ 0x100000f43'
p1423
aS'goto 13 @ 0x100000f43'
p1424
aS'rdi_1 = 0x100000f96'
p1425
aS'arg1 = 0x100000f96'
p1426
ag12
ag1082
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971286L]'
p1427
aS'[rdi, 4294971286L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1428
aS'rdi#5 = 0x100000f96'
p1429
aS'rdi = 0x100000f96'
p1430
aS'None'
p1431
aS'goto 14 @ 0x100000f43'
p1432
ag12
ag1082
aS'[<LLIL_GOTO>, 13L]'
p1433
aS'[13L, <LLIL_GOTO>]'
p1434
aS'goto 14 @ 0x100000f43'
p1435
aS'goto 13 @ 0x100000f43'
p1436
aS'rdi_1 = 0x100000f92'
p1437
aS'arg1 = 0x100000f92'
p1438
ag12
ag1082
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971282L]'
p1439
aS'[rdi, 4294971282L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1440
aS'rdi#6 = 0x100000f92'
p1441
aS'rdi = 0x100000f92'
p1442
aS'None'
p1443
aS'goto 14 @ 0x100000f43'
p1444
ag12
ag1082
aS'[<LLIL_GOTO>, 13L]'
p1445
aS'[13L, <LLIL_GOTO>]'
p1446
aS'goto 14 @ 0x100000f43'
p1447
aS'goto 13 @ 0x100000f43'
p1448
aS'rdi_1 = 0x100000f8c'
p1449
aS'arg1 = 0x100000f8c'
p1450
ag12
ag1082
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971276L]'
p1451
aS'[rdi, 4294971276L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1452
aS'rdi#7 = 0x100000f8c'
p1453
aS'rdi = 0x100000f8c'
p1454
aS'None'
p1455
aS'goto 14 @ 0x100000f43'
p1456
ag12
ag1082
aS'[<LLIL_GOTO>, 13L]'
p1457
aS'[13L, <LLIL_GOTO>]'
p1458
aS'goto 14 @ 0x100000f43'
p1459
aS'goto 13 @ 0x100000f43'
p1460
aS'return _atoi() __tailcall'
p1461
aS'rax, rcx, rdx, rsi, rdi, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = tailcall(_atoi, rdi, rsi, rdx, rcx, r8, r9, stack = &arg_0)'
p1462
ag12
ag1082
aS'[<LLIL_TAILCALL>, <LLIL_LOAD 8>, <LLIL_CONST_PTR 8>, 4294971408L]'
p1463
aS'[4294971408L, <LLIL_CONST_PTR 8>, <LLIL_LOAD 8>, <LLIL_TAILCALL>]'
p1464
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001010].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1465
aS'<return> tailcall([0x100001010].q)'
p1466
aS'return _puts() __tailcall'
p1467
aS'rax, rcx, rdx, rsi, rdi, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = tailcall(_puts, rdi, rsi, rdx, rcx, r8, r9, stack = &arg_0)'
p1468
ag12
ag1082
aS'[<LLIL_TAILCALL>, <LLIL_LOAD 8>, <LLIL_CONST_PTR 8>, 4294971416L]'
p1469
aS'[4294971416L, <LLIL_CONST_PTR 8>, <LLIL_LOAD 8>, <LLIL_TAILCALL>]'
p1470
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001018].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1471
aS'<return> tailcall([0x100001018].q)'
p1472
asS'test_med_il_vars'
p1473
(lp1474
S'None [0L] <entry rsi> <entry rsi> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi#1 = [arg2#0 + 8].q @ mem#0>>'
p1475
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi#1 = [arg2#0 + 8].q @ mem#0>>'
p1476
aS'0 [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax#1, mem#1 = 0x100000f5c(rdi#1) @ mem#0>>'
p1477
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax#1, mem#1 = 0x100000f5c(rdi#1) @ mem#0>>'
p1478
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_1#2 = zx.q((rax#1 + (rax#1 << 3)).d)>>'
p1479
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_1#2 = zx.q((rax#1 + (rax#1 << 3)).d)>>'
p1480
aS'2 [3L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_1#2 = zx.q((rax#1 + (rax#1 << 3)).d)>>'
p1481
aS'2 [3L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_2#3 = zx.q((rax_1#2 + (rax_1#2 << 2)).d)>>'
p1482
aS'2 [3L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_2#3 = zx.q((rax_1#2 + (rax_1#2 << 2)).d)>>'
p1483
aS'3 [4L, 7L, 10L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_2#3 = zx.q((rax_1#2 + (rax_1#2 << 2)).d)>>'
p1484
aS'3 [4L, 7L, 10L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (rax_2#3.eax u> 3) then 5 @ 0x100000f21 else 7 @ 0x100000f0f>>'
p1485
aS'5 [10L] <const ptr 0x100000f9f> <const ptr 0x100000f9f> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#2 = 0x100000f9f>>'
p1486
aS'3 [4L, 7L, 10L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x3>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_3#4 = sx.q([0x100000f4c + (rax_2#3 << 2)].d @ mem#1)>>'
p1487
aS'7 [8L] <undetermined> <table: [0x0] -> -0x34, [0x1] -> -0x22, [0x2] -> -0x19, [0x3] -> -0x10> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_3#4 = sx.q([0x100000f4c + (rax_2#3 << 2)].d @ mem#1)>>'
p1488
aS'7 [8L] <undetermined> <table: [0x0] -> -0x34, [0x1] -> -0x22, [0x2] -> -0x19, [0x3] -> -0x10> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_4#5 = rax_3#4 + 0x100000f4c>>'
p1489
aS'8 [9L, 10L] <undetermined> <table: [0x0] -> 0x100000f18, [0x1] -> 0x100000f2a, [0x2] -> 0x100000f33, [0x3] -> 0x100000f3c> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_4#5 = rax_3#4 + 0x100000f4c>>'
p1490
aS'8 [9L, 10L] <undetermined> <table: [0x0] -> 0x100000f18, [0x1] -> 0x100000f2a, [0x2] -> 0x100000f33, [0x3] -> 0x100000f3c> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: jump(rax_4#5 => 15 @ 0x100000f18, 17 @ 0x100000f2a, 19 @ 0x100000f33, 21 @ 0x100000f3c)>>'
p1491
aS'10 [10L] <undetermined> <in set([0x100000f92, 0x100000f8c, 0x100000f9a, 0x100000f96, 0x100000f9f])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: mem#2 = 0x100000f62(rdi_1#7) @ mem#1>>'
p1492
aS'11 [] <const 0x0> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_5#7 = 0>>'
p1493
aS'13 [10L] <const ptr 0x100000f9a> <const ptr 0x100000f9a> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#3 = 0x100000f9a>>'
p1494
aS'15 [10L] <const ptr 0x100000f96> <const ptr 0x100000f96> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#4 = 0x100000f96>>'
p1495
aS'17 [10L] <const ptr 0x100000f92> <const ptr 0x100000f92> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#5 = 0x100000f92>>'
p1496
aS'19 [10L] <const ptr 0x100000f8c> <const ptr 0x100000f8c> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#6 = 0x100000f8c>>'
p1497
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1498
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1499
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1500
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1501
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1502
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1503
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1504
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1505
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1506
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1507
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1508
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1509
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1510
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1511
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1512
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1513
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1514
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1515
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1516
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1517
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1518
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1519
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1520
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1521
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1522
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1523
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1524
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1525
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1526
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1527
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1528
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1529
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1530
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1531
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1532
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1533
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1534
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1535
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1536
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1537
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1538
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1539
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1540
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1541
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1542
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1543
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1544
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1545
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1546
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1547
as.
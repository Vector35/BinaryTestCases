(dp0
S'test_function_can_return'
p1
(lp2
S'_main SymbolType.FunctionSymbol 0x100000e50L True'
p3
aS'_atoi SymbolType.ImportedFunctionSymbol 0x100000f2cL True'
p4
aS'_puts SymbolType.ImportedFunctionSymbol 0x100000f32L True'
p5
asS'test_function_stack'
p6
(lp7
S"['__saved_rbp', 'testautovar']"
p8
aS'<return address>'
p9
ag9
aS'None'
p10
aS"['testautovar']"
p11
aS'<undetermined>'
p12
ag12
aS'None'
p13
aS"['testautovar']"
p14
ag12
ag12
aS'None'
p15
asS'test_strings'
p16
(lp17
S'__PAGEZERO StringType.AsciiString 0x100000028L'
p18
aS'__TEXT StringType.AsciiString 0x100000070L'
p19
aS'__text StringType.AsciiString 0x1000000b0L'
p20
aS'__TEXT StringType.AsciiString 0x1000000c0L'
p21
aS'__stubs StringType.AsciiString 0x100000100L'
p22
aS'__TEXT StringType.AsciiString 0x100000110L'
p23
aS'__stub_helper StringType.AsciiString 0x100000150L'
p24
aS'__TEXT StringType.AsciiString 0x100000160L'
p25
aS'__cstring StringType.AsciiString 0x1000001a0L'
p26
aS'__TEXT StringType.AsciiString 0x1000001b0L'
p27
aS'__unwind_info StringType.AsciiString 0x1000001f0L'
p28
aS'__TEXT StringType.AsciiString 0x100000200L'
p29
aS'__DATA StringType.AsciiString 0x100000248L'
p30
aS'__nl_symbol_ptr StringType.AsciiString 0x100000288L'
p31
aS'__DATA StringType.AsciiString 0x100000298L'
p32
aS'__la_symbol_ptr StringType.AsciiString 0x1000002d8L'
p33
aS'__DATA StringType.AsciiString 0x1000002e8L'
p34
aS'__LINKEDIT StringType.AsciiString 0x100000330L'
p35
aS'/usr/lib/dyld StringType.AsciiString 0x100000414L'
p36
aS'R\nZ$ StringType.AsciiString 0x10000043dL'
p37
aS'/usr/lib/libSystem.B.dylib StringType.AsciiString 0x100000490L'
p38
aS'Odd number less than 32 StringType.AsciiString 0x100000f60L'
p39
aS'Even number less than 32 StringType.AsciiString 0x100000f80L'
p40
aS'Five StringType.AsciiString 0x100000f99L'
p41
aS'Something else StringType.AsciiString 0x100000fa2L'
p42
aS'@dyld_stub_binder StringType.AsciiString 0x100002009L'
p43
aS'@_atoi StringType.AsciiString 0x100002023L'
p44
aS'@_puts StringType.AsciiString 0x10000202fL'
p45
aS'_mh_execute_header StringType.AsciiString 0x10000203fL'
p46
aS'!main StringType.AsciiString 0x100002052L'
p47
aS'__mh_execute_header StringType.AsciiString 0x1000020daL'
p48
aS'_main StringType.AsciiString 0x1000020eeL'
p49
aS'_atoi StringType.AsciiString 0x1000020f4L'
p50
aS'_puts StringType.AsciiString 0x1000020faL'
p51
aS'dyld_stub_binder StringType.AsciiString 0x100002100L'
p52
asS'test_function_low_il_basic_blocks'
p53
(lp54
S'0x0L 0x7L 2'
p55
aS'0x7L 0x9L 1'
p56
aS'0x9L 0xdL 4'
p57
aS'0xdL 0x11L 0'
p58
aS'0x11L 0x13L 1'
p59
aS'0x13L 0x15L 1'
p60
aS'0x15L 0x17L 1'
p61
aS'0x17L 0x19L 1'
p62
aS'0x0L 0x1L 0'
p63
aS'0x0L 0x1L 0'
p64
asS'test_functions_attributes'
p65
(lp66
S"['__saved_rbp', 'testautovar', 'rax', 'rax_1', 'rax_2', 'rcx', 'rcx_1', 'rcx_2', 'arg2', 'arg1', 'rdi', 'rdi_1']"
p67
aS'[<branch x86_64:0x100000e73 -> x86_64:0x100000e75>, <branch x86_64:0x100000e73 -> x86_64:0x100000e7e>, <branch x86_64:0x100000e73 -> x86_64:0x100000e97>, <branch x86_64:0x100000e73 -> x86_64:0x100000ea0>]'
p68
aS'{}'
p69
aI1
aS"['rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p70
aS'False'
p71
aS'True'
p72
aI39
ag12
aS'testcomment _main'
p73
ag71
ag71
aS'push(rbp)'
p74
aS'[]'
p75
aS"['rsp', 'rbp']"
p76
aS"['rsp']"
p77
aS'[<ref to __saved_rbp>]'
p78
aS'[]'
p79
aS'push(rbp)'
p80
aS'[]'
p81
aS'[]'
p82
aS'<graph of <func: x86_64@0x100000e50>>'
p83
aS'[]'
p84
aS'[]'
p85
aS'<block: x86_64@0x100000e50-0x100000e65>'
p86
aS'<color: #ff00ff>'
p87
aS'[<0x100000e50: int64_t _main(int64_t arg1, int64_t* arg2)>]'
p88
aS"['testautovar', 'rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p89
aS'[]'
p90
aS'{}'
p91
aI1
aS"['rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p92
ag71
ag72
aI3
ag12
aS'testcomment _atoi'
p93
ag71
ag71
aS'<return> tailcall([0x100001010].q)'
p94
aS'[]'
p95
aS'[]'
p96
aS'[]'
p97
aS'[]'
p98
aS'[<constant pointer 0x100001010>]'
p99
aS'jump([0x100001010].q)'
p100
aS'[]'
p101
aS'[]'
p102
aS'<graph of <func: x86_64@0x100000f2c>>'
p103
aS'[]'
p104
aS'[]'
p105
aS'<block: x86_64@0x100000f2c-0x100000f32>'
p106
aS'<color: #ff00ff>'
p107
aS'[<0x100000f2c: int64_t _atoi()>]'
p108
aS"['testautovar', 'rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p109
aS'[]'
p110
aS'{}'
p111
aI1
aS"['rax', 'rcx', 'rdx', 'rsi', 'rdi', 'r8', 'r9', 'r10', 'r11', 'xmm0', 'xmm1', 'xmm2', 'xmm3', 'xmm4', 'xmm5', 'xmm6', 'xmm7', 'xmm8', 'xmm9', 'xmm10', 'xmm11', 'xmm12', 'xmm13', 'xmm14', 'xmm15']"
p112
ag71
ag72
aI3
ag12
aS'testcomment _puts'
p113
ag71
ag71
aS'<return> tailcall([0x100001018].q)'
p114
aS'[]'
p115
aS'[]'
p116
aS'[]'
p117
aS'[]'
p118
aS'[<constant pointer 0x100001018>]'
p119
aS'jump([0x100001018].q)'
p120
aS'[]'
p121
aS'[]'
p122
aS'<graph of <func: x86_64@0x100000f32>>'
p123
aS'[]'
p124
aS'[]'
p125
aS'<block: x86_64@0x100000f32-0x100000f38>'
p126
aS'<color: #ff00ff>'
p127
aS'[<0x100000f32: int64_t _puts()>]'
p128
asS'test_function_starts'
p129
(lp130
S'0x100000e50L'
p131
aS'0x100000f2cL'
p132
aS'0x100000f32L'
p133
asS'test_function_llil'
p134
(lp135
S'<block: x86_64@0x0-0x7>'
p136
aS'<block: x86_64@0x7-0x9>'
p137
aS'<block: x86_64@0x9-0xd>'
p138
aS'<block: x86_64@0xd-0x11>'
p139
aS'<block: x86_64@0x11-0x13>'
p140
aS'<block: x86_64@0x13-0x15>'
p141
aS'<block: x86_64@0x15-0x17>'
p142
aS'<block: x86_64@0x17-0x19>'
p143
aS'push(rbp)'
p144
aS'rbp = rsp {__saved_rbp}'
p145
aS'rdi = [rsi].q'
p146
aS'eax = 0'
p147
aS'call(0x100000f2c)'
p148
aS'ecx = eax'
p149
aS'if (eax u> 0x1f) then 7 @ 0x100000e8e else 9 @ 0x100000e65'
p150
aS'rdi = 0x100000fa2'
p151
aS'goto 13 @ 0x100000e85'
p152
aS'rax = 0x100000eac'
p153
aS'rcx = sx.q([rax + (rcx << 2)].d)'
p154
aS'rcx = rcx + rax'
p155
aS'jump(rcx => 17 @ 0x100000e75, 19 @ 0x100000e7e, 21 @ 0x100000e97, 23 @ 0x100000ea0)'
p156
aS'call(0x100000f32)'
p157
aS'eax = 0'
p158
aS'rbp = pop'
p159
aS'<return> jump(pop)'
p160
aS'rdi = 0x100000f80'
p161
aS'goto 13 @ 0x100000e85'
p162
aS'rdi = 0x100000f60'
p163
aS'goto 13 @ 0x100000e85'
p164
aS'rdi = 0x100000f9e'
p165
aS'goto 13 @ 0x100000e85'
p166
aS'rdi = 0x100000f99'
p167
aS'goto 13 @ 0x100000e85'
p168
aS'<block: x86_64@0x0-0x5>'
p169
aS'<block: x86_64@0x5-0x7>'
p170
aS'<block: x86_64@0x7-0xa>'
p171
aS'<block: x86_64@0xa-0xd>'
p172
aS'<block: x86_64@0xd-0xf>'
p173
aS'<block: x86_64@0xf-0x11>'
p174
aS'<block: x86_64@0x11-0x13>'
p175
aS'<block: x86_64@0x13-0x15>'
p176
aS'rdi = [arg2].q'
p177
aS'rax = 0'
p178
aS'rax_1 = 0x100000f2c(rdi)'
p179
aS'rcx = zx.q(rax_1.eax)'
p180
aS'if (rax_1.eax u> 0x1f) then 5 @ 0x100000e8e else 7 @ 0x100000e6c'
p181
aS'rdi_1 = 0x100000fa2'
p182
aS'goto 10 @ 0x100000e85'
p183
aS'rcx_1 = sx.q([0x100000eac + (rcx << 2)].d)'
p184
aS'rcx_2 = rcx_1 + 0x100000eac'
p185
aS'jump(rcx_2 => 13 @ 0x100000e75, 15 @ 0x100000e7e, 17 @ 0x100000e97, 19 @ 0x100000ea0)'
p186
aS'0x100000f32(rdi_1)'
p187
aS'rax_2 = 0'
p188
aS'return 0'
p189
aS'rdi_1 = 0x100000f80'
p190
aS'goto 10 @ 0x100000e85'
p191
aS'rdi_1 = 0x100000f60'
p192
aS'goto 10 @ 0x100000e85'
p193
aS'rdi_1 = 0x100000f9e'
p194
aS'goto 10 @ 0x100000e85'
p195
aS'rdi_1 = 0x100000f99'
p196
aS'goto 10 @ 0x100000e85'
p197
aS"(['push', '    ', 'rbp'], 4294970960L)"
p198
aS"(['mov', '     ', 'rbp', ', ', 'rsp'], 4294970961L)"
p199
aS"(['mov', '     ', 'rdi', ', ', 'qword ', '[', 'rsi', ']'], 4294970964L)"
p200
aS"(['xor', '     ', 'eax', ', ', 'eax'], 4294970967L)"
p201
aS"(['call', '    ', '0x100000f2c'], 4294970969L)"
p202
aS"(['mov', '     ', 'ecx', ', ', 'eax'], 4294970974L)"
p203
aS"(['cmp', '     ', 'eax', ', ', '0x1f'], 4294970976L)"
p204
aS"(['ja', '      ', '0x100000e8e'], 4294970979L)"
p205
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000fa2', ']'], 4294971022L)"
p206
aS"(['jmp', '     ', '0x100000e85'], 4294971029L)"
p207
aS"(['lea', '     ', 'rax', ', ', '', '[', 'rel ', '0x100000eac', ']'], 4294970981L)"
p208
aS"(['movsxd', '  ', 'rcx', ', ', 'dword ', '[', 'rax', '+', 'rcx', '*4', ']'], 4294970988L)"
p209
aS"(['add', '     ', 'rcx', ', ', 'rax'], 4294970992L)"
p210
aS"(['jmp', '     ', 'rcx'], 4294970995L)"
p211
aS"(['call', '    ', '0x100000f32'], 4294971013L)"
p212
aS"(['xor', '     ', 'eax', ', ', 'eax'], 4294971018L)"
p213
aS"(['pop', '     ', 'rbp'], 4294971020L)"
p214
aS"(['retn', '    '], 4294971021L)"
p215
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f80', ']'], 4294970997L)"
p216
aS"(['jmp', '     ', '0x100000e85'], 4294971004L)"
p217
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f60', ']'], 4294971006L)"
p218
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f9e', ']'], 4294971031L)"
p219
aS"(['jmp', '     ', '0x100000e85'], 4294971038L)"
p220
aS"(['lea', '     ', 'rdi', ', ', '', '[', 'rel ', '0x100000f99', ']'], 4294971040L)"
p221
aS"(['jmp', '     ', '0x100000e85'], 4294971047L)"
p222
aS'<block: x86_64@0x0-0x1>'
p223
aS'<return> tailcall([0x100001010].q)'
p224
aS'<block: x86_64@0x0-0x1>'
p225
aS'return _atoi() __tailcall'
p226
aS"(['jmp', '     ', 'qword ', '[', 'rel ', '0x100001010', ']'], 4294971180L)"
p227
aS'<block: x86_64@0x0-0x1>'
p228
aS'<return> tailcall([0x100001018].q)'
p229
aS'<block: x86_64@0x0-0x1>'
p230
aS'return _puts() __tailcall'
p231
aS"(['jmp', '     ', 'qword ', '[', 'rel ', '0x100001018', ']'], 4294971186L)"
p232
asS'test_low_il_ssa'
p233
(lp234
S'None'
p235
aS'[]'
p236
ag12
aS'None'
p237
aS'[]'
p238
ag12
aS'None'
p239
aS'[]'
p240
ag12
aS'None'
p241
aS'[]'
p242
ag12
aS'None'
p243
aS'[]'
p244
ag12
aS'None'
p245
aS'[]'
p246
ag12
aS'None'
p247
aS'[]'
p248
ag12
aS'None'
p249
aS'[]'
p250
ag12
aS'None'
p251
aS'[]'
p252
ag12
aS'None'
p253
aS'[]'
p254
ag12
aS'None'
p255
aS'[]'
p256
ag12
aS'None'
p257
aS'[]'
p258
ag12
aS'None'
p259
aS'[]'
p260
ag12
aS'None'
p261
aS'[]'
p262
ag12
aS'4'
p263
aS'[]'
p264
ag12
aS'None'
p265
aS'[]'
p266
ag12
aS'None'
p267
aS'[]'
p268
ag12
aS'None'
p269
aS'[]'
p270
ag12
aS'None'
p271
aS'[]'
p272
ag12
aS'4'
p273
aS'[]'
p274
ag12
aS'None'
p275
aS'[]'
p276
ag12
aS'None'
p277
aS'[]'
p278
ag12
aS'None'
p279
aS'[]'
p280
ag12
aS'4'
p281
aS'[]'
p282
ag12
aS'4'
p283
aS'[]'
p284
ag12
aS'4'
p285
aS'[]'
p286
ag12
aS'4'
p287
aS'[]'
p288
ag12
aS'4'
p289
aS'[]'
p290
ag12
aS'4'
p291
aS'[]'
p292
ag12
aS'None'
p293
aS'[]'
p294
ag12
aS'None'
p295
aS'[]'
p296
ag12
aS'None'
p297
aS'[]'
p298
ag12
aS'None'
p299
aS'[]'
p300
ag12
aS'None'
p301
aS'[]'
p302
ag12
aS'None'
p303
aS'[]'
p304
ag12
aS'None'
p305
aS'[]'
p306
ag12
aS'None'
p307
aS'[]'
p308
ag12
aS'None'
p309
aS'[]'
p310
ag12
aS'None'
p311
aS'[]'
p312
ag12
aS'None'
p313
aS'[]'
p314
ag12
aS'None'
p315
aS'[]'
p316
ag12
aS'None'
p317
aS'[]'
p318
ag12
aS'None'
p319
aS'[]'
p320
ag12
aS'None'
p321
aS'[]'
p322
ag12
aS'None'
p323
aS'[]'
p324
ag12
aS'None'
p325
aS'[]'
p326
ag12
aS'None'
p327
aS'[]'
p328
ag12
aS'None'
p329
aS'[]'
p330
ag12
aS'None'
p331
aS'[]'
p332
ag12
aS'None'
p333
aS'[]'
p334
ag12
aS'4'
p335
aS'[]'
p336
ag12
aS'4'
p337
aS'[]'
p338
ag12
aS'4'
p339
aS'[]'
p340
ag12
aS'4'
p341
aS'[]'
p342
ag12
aS'None'
p343
aS'[]'
p344
ag12
aS'4'
p345
aS'[]'
p346
ag12
aS'4'
p347
aS'[]'
p348
ag12
aS'4'
p349
aS'[]'
p350
ag12
aS'4'
p351
aS'[]'
p352
ag12
aS'4'
p353
aS'[]'
p354
ag12
aS'None'
p355
aS'[]'
p356
ag12
aS'None'
p357
aS'[]'
p358
ag12
aS'None'
p359
aS'[]'
p360
ag12
aS'None'
p361
aS'[]'
p362
ag12
aS'None'
p363
aS'[]'
p364
ag12
aS'4'
p365
aS'[13L]'
p366
ag12
aS'4'
p367
aS'[13L]'
p368
ag12
aS'None'
p369
aS'[]'
p370
ag12
aS'None'
p371
aS'[]'
p372
ag12
aS'None'
p373
aS'[]'
p374
ag12
aS'2'
p375
aS'[4L]'
p376
ag12
aS'None'
p377
aS'[]'
p378
ag12
aS'None'
p379
aS'[]'
p380
ag12
aS'None'
p381
aS'[]'
p382
ag12
aS'None'
p383
aS'[]'
p384
ag12
aS'4'
p385
aS'[]'
p386
ag12
aS'None'
p387
aS'[]'
p388
ag12
aS'None'
p389
aS'[]'
p390
ag12
aS'None'
p391
aS'[]'
p392
ag12
aS'None'
p393
aS'[]'
p394
ag12
aS'None'
p395
aS'[]'
p396
ag12
aS'None'
p397
aS'[]'
p398
ag12
aS'None'
p399
aS'[]'
p400
ag12
aS'None'
p401
aS'[]'
p402
ag12
aS'None'
p403
aS'[]'
p404
ag12
aS'4'
p405
aS'[13L]'
p406
ag12
aS'None'
p407
aS'[]'
p408
ag12
aS'0'
p409
aS'[1L, 4L, 13L, 15L]'
p410
aS'<stack frame offset -0x8>'
p411
aS'None'
p412
aS'[]'
p413
ag12
aS'None'
p414
aS'[]'
p415
ag12
aS'None'
p416
aS'[]'
p417
ag12
aS'1'
p418
aS'[]'
p419
aS'<stack frame offset -0x8>'
p420
aS'None'
p421
aS'[]'
p422
ag12
aS'None'
p423
aS'[]'
p424
ag12
aS'None'
p425
aS'[]'
p426
ag12
aS'4'
p427
aS'[13L]'
p428
ag12
aS'None'
p429
aS'[]'
p430
ag12
aS'None'
p431
aS'[]'
p432
ag12
aS'3'
p433
aS'[]'
p434
aS'<const 0x0>'
p435
aS'None'
p436
aS'[]'
p437
ag12
aS'None'
p438
aS'[]'
p439
ag12
aS'4'
p440
aS'[]'
p441
ag12
aS'None'
p442
aS'[]'
p443
ag12
aS'None'
p444
aS'[]'
p445
ag12
aS'None'
p446
aS'[]'
p447
ag12
aS'None'
p448
aS'[]'
p449
ag12
aS'None'
p450
aS'[]'
p451
ag12
aS'None'
p452
aS'[]'
p453
ag12
aS'None'
p454
aS'[]'
p455
ag12
aS'None'
p456
aS'[]'
p457
ag12
aS'None'
p458
aS'[]'
p459
ag12
aS'None'
p460
aS'[]'
p461
ag12
aS'None'
p462
aS'[]'
p463
ag12
aS'None'
p464
aS'[]'
p465
ag12
aS'None'
p466
aS'[]'
p467
ag12
aS'None'
p468
aS'[]'
p469
ag12
aS'None'
p470
aS'[]'
p471
ag12
aS'[]'
p472
ag12
aS'[]'
p473
ag12
aS'[]'
p474
ag12
aS'[]'
p475
ag12
aS'[]'
p476
ag12
aS'[]'
p477
ag12
aS'[]'
p478
ag12
aS'[]'
p479
ag12
aS'[]'
p480
ag12
aS'[]'
p481
ag12
aS'[]'
p482
ag12
aS'0'
p483
aS'0'
p484
aS'0'
p485
aS'0'
p486
aS'1'
p487
aS'2'
p488
aS'None'
p489
aS'2'
p490
aS'2'
p491
aS'3'
p492
aS'0'
p493
aS'3'
p494
aS'3'
p495
aS'4'
p496
aS'1'
p497
aS'4'
p498
aS'4'
p499
aS'5'
p500
aS'2'
p501
aS'5'
p502
aS'5'
p503
aS'6'
p504
aS'3'
p505
aS'6'
p506
aS'6'
p507
aS'7'
p508
aS'4'
p509
aS'7'
p510
aS'7'
p511
aS'8'
p512
aS'5'
p513
aS'8'
p514
aS'8'
p515
aS'9'
p516
aS'6'
p517
aS'9'
p518
aS'9'
p519
aS'10'
p520
aS'None'
p521
aS'10'
p522
aS'10'
p523
aS'11'
p524
aS'7'
p525
aS'11'
p526
aS'11'
p527
aS'12'
p528
aS'8'
p529
aS'12'
p530
aS'12'
p531
aS'13'
p532
aS'9'
p533
aS'13'
p534
aS'13'
p535
aS'17'
p536
aS'10'
p537
aS'14'
p538
aS'14'
p539
aS'18'
p540
aS'11'
p541
aS'15'
p542
aS'15'
p543
aS'19'
p544
aS'None'
p545
aS'16'
p546
aS'16'
p547
aS'21'
p548
aS'12'
p549
aS'18'
p550
aS'17'
p551
aS'22'
p552
aS'13'
p553
aS'19'
p554
aS'18'
p555
aS'23'
p556
aS'14'
p557
aS'20'
p558
aS'19'
p559
aS'24'
p560
aS'15'
p561
aS'21'
p562
aS'20'
p563
aS'25'
p564
aS'16'
p565
aS'22'
p566
aS'21'
p567
aS'26'
p568
aS'17'
p569
aS'23'
p570
aS'22'
p571
aS'27'
p572
aS'18'
p573
aS'24'
p574
aS'23'
p575
aS'28'
p576
aS'19'
p577
aS'25'
p578
aS'24'
p579
aS'29'
p580
aS'20'
p581
aS'26'
p582
aS'None'
p583
aS'[]'
p584
ag12
aS'None'
p585
aS'[]'
p586
ag12
aS'None'
p587
aS'[]'
p588
ag12
aS'None'
p589
aS'[]'
p590
ag12
aS'None'
p591
aS'[]'
p592
ag12
aS'None'
p593
aS'[]'
p594
ag12
aS'None'
p595
aS'[]'
p596
ag12
aS'None'
p597
aS'[]'
p598
ag12
aS'None'
p599
aS'[]'
p600
ag12
aS'None'
p601
aS'[]'
p602
ag12
aS'None'
p603
aS'[]'
p604
ag12
aS'None'
p605
aS'[]'
p606
ag12
aS'None'
p607
aS'[]'
p608
ag12
aS'None'
p609
aS'[]'
p610
ag12
aS'0'
p611
aS'[]'
p612
ag12
aS'None'
p613
aS'[]'
p614
ag12
aS'None'
p615
aS'[]'
p616
ag12
aS'None'
p617
aS'[]'
p618
ag12
aS'None'
p619
aS'[]'
p620
ag12
aS'0'
p621
aS'[]'
p622
ag12
aS'None'
p623
aS'[]'
p624
ag12
aS'None'
p625
aS'[]'
p626
ag12
aS'None'
p627
aS'[]'
p628
ag12
aS'0'
p629
aS'[]'
p630
ag12
aS'0'
p631
aS'[]'
p632
ag12
aS'0'
p633
aS'[]'
p634
ag12
aS'0'
p635
aS'[]'
p636
ag12
aS'0'
p637
aS'[]'
p638
ag12
aS'0'
p639
aS'[]'
p640
ag12
aS'None'
p641
aS'[]'
p642
ag12
aS'None'
p643
aS'[]'
p644
ag12
aS'None'
p645
aS'[]'
p646
ag12
aS'None'
p647
aS'[]'
p648
ag12
aS'None'
p649
aS'[]'
p650
ag12
aS'None'
p651
aS'[]'
p652
ag12
aS'None'
p653
aS'[]'
p654
ag12
aS'None'
p655
aS'[]'
p656
ag12
aS'None'
p657
aS'[]'
p658
ag12
aS'None'
p659
aS'[]'
p660
ag12
aS'None'
p661
aS'[]'
p662
ag12
aS'None'
p663
aS'[]'
p664
ag12
aS'None'
p665
aS'[]'
p666
ag12
aS'None'
p667
aS'[]'
p668
ag12
aS'None'
p669
aS'[]'
p670
ag12
aS'None'
p671
aS'[]'
p672
ag12
aS'None'
p673
aS'[]'
p674
ag12
aS'None'
p675
aS'[]'
p676
ag12
aS'None'
p677
aS'[]'
p678
ag12
aS'None'
p679
aS'[]'
p680
ag12
aS'None'
p681
aS'[]'
p682
ag12
aS'0'
p683
aS'[]'
p684
ag12
aS'0'
p685
aS'[]'
p686
ag12
aS'0'
p687
aS'[]'
p688
ag12
aS'0'
p689
aS'[]'
p690
ag12
aS'None'
p691
aS'[]'
p692
ag12
aS'0'
p693
aS'[]'
p694
ag12
aS'0'
p695
aS'[]'
p696
ag12
aS'0'
p697
aS'[]'
p698
ag12
aS'0'
p699
aS'[]'
p700
ag12
aS'0'
p701
aS'[]'
p702
ag12
aS'None'
p703
aS'[]'
p704
ag12
aS'None'
p705
aS'[]'
p706
ag12
aS'None'
p707
aS'[]'
p708
ag12
aS'None'
p709
aS'[]'
p710
ag12
aS'None'
p711
aS'[]'
p712
ag12
aS'0'
p713
aS'[]'
p714
ag12
aS'0'
p715
aS'[]'
p716
ag12
aS'None'
p717
aS'[]'
p718
ag12
aS'None'
p719
aS'[]'
p720
ag12
aS'None'
p721
aS'[]'
p722
ag12
aS'0'
p723
aS'[]'
p724
ag12
aS'None'
p725
aS'[]'
p726
ag12
aS'None'
p727
aS'[]'
p728
ag12
aS'None'
p729
aS'[]'
p730
ag12
aS'None'
p731
aS'[]'
p732
ag12
aS'0'
p733
aS'[]'
p734
ag12
aS'None'
p735
aS'[]'
p736
ag12
aS'None'
p737
aS'[]'
p738
ag12
aS'None'
p739
aS'[]'
p740
ag12
aS'None'
p741
aS'[]'
p742
ag12
aS'None'
p743
aS'[]'
p744
ag12
aS'None'
p745
aS'[]'
p746
ag12
aS'None'
p747
aS'[]'
p748
ag12
aS'None'
p749
aS'[]'
p750
ag12
aS'None'
p751
aS'[]'
p752
ag12
aS'0'
p753
aS'[]'
p754
ag12
aS'None'
p755
aS'[]'
p756
ag12
aS'None'
p757
aS'[]'
p758
ag12
aS'None'
p759
aS'[]'
p760
ag12
aS'None'
p761
aS'[]'
p762
ag12
aS'None'
p763
aS'[]'
p764
ag12
aS'None'
p765
aS'[]'
p766
ag12
aS'None'
p767
aS'[]'
p768
ag12
aS'None'
p769
aS'[]'
p770
ag12
aS'None'
p771
aS'[]'
p772
ag12
aS'0'
p773
aS'[]'
p774
ag12
aS'None'
p775
aS'[]'
p776
ag12
aS'None'
p777
aS'[]'
p778
ag12
aS'0'
p779
aS'[]'
p780
ag12
aS'None'
p781
aS'[]'
p782
ag12
aS'None'
p783
aS'[]'
p784
ag12
aS'0'
p785
aS'[]'
p786
ag12
aS'None'
p787
aS'[]'
p788
ag12
aS'None'
p789
aS'[]'
p790
ag12
aS'None'
p791
aS'[]'
p792
ag12
aS'None'
p793
aS'[]'
p794
ag12
aS'None'
p795
aS'[]'
p796
ag12
aS'None'
p797
aS'[]'
p798
ag12
aS'None'
p799
aS'[]'
p800
ag12
aS'None'
p801
aS'[]'
p802
ag12
aS'None'
p803
aS'[]'
p804
ag12
aS'None'
p805
aS'[]'
p806
ag12
aS'None'
p807
aS'[]'
p808
ag12
aS'None'
p809
aS'[]'
p810
ag12
aS'None'
p811
aS'[]'
p812
ag12
aS'None'
p813
aS'[]'
p814
ag12
aS'None'
p815
aS'[]'
p816
ag12
aS'[]'
p817
ag12
aS'[]'
p818
ag12
aS'[]'
p819
ag12
aS'[]'
p820
ag12
aS'[]'
p821
ag12
aS'[]'
p822
ag12
aS'[]'
p823
ag12
aS'[]'
p824
ag12
aS'[]'
p825
ag12
aS'[]'
p826
ag12
aS'[]'
p827
ag12
aS'0'
p828
aS'0'
p829
aS'0'
p830
aS'0'
p831
aS'None'
p832
aS'[]'
p833
ag12
aS'None'
p834
aS'[]'
p835
ag12
aS'None'
p836
aS'[]'
p837
ag12
aS'None'
p838
aS'[]'
p839
ag12
aS'None'
p840
aS'[]'
p841
ag12
aS'None'
p842
aS'[]'
p843
ag12
aS'None'
p844
aS'[]'
p845
ag12
aS'None'
p846
aS'[]'
p847
ag12
aS'None'
p848
aS'[]'
p849
ag12
aS'None'
p850
aS'[]'
p851
ag12
aS'None'
p852
aS'[]'
p853
ag12
aS'None'
p854
aS'[]'
p855
ag12
aS'None'
p856
aS'[]'
p857
ag12
aS'None'
p858
aS'[]'
p859
ag12
aS'0'
p860
aS'[]'
p861
ag12
aS'None'
p862
aS'[]'
p863
ag12
aS'None'
p864
aS'[]'
p865
ag12
aS'None'
p866
aS'[]'
p867
ag12
aS'None'
p868
aS'[]'
p869
ag12
aS'0'
p870
aS'[]'
p871
ag12
aS'None'
p872
aS'[]'
p873
ag12
aS'None'
p874
aS'[]'
p875
ag12
aS'None'
p876
aS'[]'
p877
ag12
aS'0'
p878
aS'[]'
p879
ag12
aS'0'
p880
aS'[]'
p881
ag12
aS'0'
p882
aS'[]'
p883
ag12
aS'0'
p884
aS'[]'
p885
ag12
aS'0'
p886
aS'[]'
p887
ag12
aS'0'
p888
aS'[]'
p889
ag12
aS'None'
p890
aS'[]'
p891
ag12
aS'None'
p892
aS'[]'
p893
ag12
aS'None'
p894
aS'[]'
p895
ag12
aS'None'
p896
aS'[]'
p897
ag12
aS'None'
p898
aS'[]'
p899
ag12
aS'None'
p900
aS'[]'
p901
ag12
aS'None'
p902
aS'[]'
p903
ag12
aS'None'
p904
aS'[]'
p905
ag12
aS'None'
p906
aS'[]'
p907
ag12
aS'None'
p908
aS'[]'
p909
ag12
aS'None'
p910
aS'[]'
p911
ag12
aS'None'
p912
aS'[]'
p913
ag12
aS'None'
p914
aS'[]'
p915
ag12
aS'None'
p916
aS'[]'
p917
ag12
aS'None'
p918
aS'[]'
p919
ag12
aS'None'
p920
aS'[]'
p921
ag12
aS'None'
p922
aS'[]'
p923
ag12
aS'None'
p924
aS'[]'
p925
ag12
aS'None'
p926
aS'[]'
p927
ag12
aS'None'
p928
aS'[]'
p929
ag12
aS'None'
p930
aS'[]'
p931
ag12
aS'0'
p932
aS'[]'
p933
ag12
aS'0'
p934
aS'[]'
p935
ag12
aS'0'
p936
aS'[]'
p937
ag12
aS'0'
p938
aS'[]'
p939
ag12
aS'None'
p940
aS'[]'
p941
ag12
aS'0'
p942
aS'[]'
p943
ag12
aS'0'
p944
aS'[]'
p945
ag12
aS'0'
p946
aS'[]'
p947
ag12
aS'0'
p948
aS'[]'
p949
ag12
aS'0'
p950
aS'[]'
p951
ag12
aS'None'
p952
aS'[]'
p953
ag12
aS'None'
p954
aS'[]'
p955
ag12
aS'None'
p956
aS'[]'
p957
ag12
aS'None'
p958
aS'[]'
p959
ag12
aS'None'
p960
aS'[]'
p961
ag12
aS'0'
p962
aS'[]'
p963
ag12
aS'0'
p964
aS'[]'
p965
ag12
aS'None'
p966
aS'[]'
p967
ag12
aS'None'
p968
aS'[]'
p969
ag12
aS'None'
p970
aS'[]'
p971
ag12
aS'0'
p972
aS'[]'
p973
ag12
aS'None'
p974
aS'[]'
p975
ag12
aS'None'
p976
aS'[]'
p977
ag12
aS'None'
p978
aS'[]'
p979
ag12
aS'None'
p980
aS'[]'
p981
ag12
aS'0'
p982
aS'[]'
p983
ag12
aS'None'
p984
aS'[]'
p985
ag12
aS'None'
p986
aS'[]'
p987
ag12
aS'None'
p988
aS'[]'
p989
ag12
aS'None'
p990
aS'[]'
p991
ag12
aS'None'
p992
aS'[]'
p993
ag12
aS'None'
p994
aS'[]'
p995
ag12
aS'None'
p996
aS'[]'
p997
ag12
aS'None'
p998
aS'[]'
p999
ag12
aS'None'
p1000
aS'[]'
p1001
ag12
aS'0'
p1002
aS'[]'
p1003
ag12
aS'None'
p1004
aS'[]'
p1005
ag12
aS'None'
p1006
aS'[]'
p1007
ag12
aS'None'
p1008
aS'[]'
p1009
ag12
aS'None'
p1010
aS'[]'
p1011
ag12
aS'None'
p1012
aS'[]'
p1013
ag12
aS'None'
p1014
aS'[]'
p1015
ag12
aS'None'
p1016
aS'[]'
p1017
ag12
aS'None'
p1018
aS'[]'
p1019
ag12
aS'None'
p1020
aS'[]'
p1021
ag12
aS'0'
p1022
aS'[]'
p1023
ag12
aS'None'
p1024
aS'[]'
p1025
ag12
aS'None'
p1026
aS'[]'
p1027
ag12
aS'0'
p1028
aS'[]'
p1029
ag12
aS'None'
p1030
aS'[]'
p1031
ag12
aS'None'
p1032
aS'[]'
p1033
ag12
aS'0'
p1034
aS'[]'
p1035
ag12
aS'None'
p1036
aS'[]'
p1037
ag12
aS'None'
p1038
aS'[]'
p1039
ag12
aS'None'
p1040
aS'[]'
p1041
ag12
aS'None'
p1042
aS'[]'
p1043
ag12
aS'None'
p1044
aS'[]'
p1045
ag12
aS'None'
p1046
aS'[]'
p1047
ag12
aS'None'
p1048
aS'[]'
p1049
ag12
aS'None'
p1050
aS'[]'
p1051
ag12
aS'None'
p1052
aS'[]'
p1053
ag12
aS'None'
p1054
aS'[]'
p1055
ag12
aS'None'
p1056
aS'[]'
p1057
ag12
aS'None'
p1058
aS'[]'
p1059
ag12
aS'None'
p1060
aS'[]'
p1061
ag12
aS'None'
p1062
aS'[]'
p1063
ag12
aS'None'
p1064
aS'[]'
p1065
ag12
aS'[]'
p1066
ag12
aS'[]'
p1067
ag12
aS'[]'
p1068
ag12
aS'[]'
p1069
ag12
aS'[]'
p1070
ag12
aS'[]'
p1071
ag12
aS'[]'
p1072
ag12
aS'[]'
p1073
ag12
aS'[]'
p1074
ag12
aS'[]'
p1075
ag12
aS'[]'
p1076
ag12
aS'0'
p1077
aS'0'
p1078
aS'0'
p1079
aS'0'
p1080
asS'test_med_il_instructions'
p1081
(lp1082
S'None'
p1083
aS'rdi#1 = [rsi#0].q @ mem#1'
p1084
ag12
aS'<undetermined>'
p1085
aS'{}'
p1086
aS"['<MLIL_LOAD 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'arg2', 'rdi']"
p1087
aS"['<MLIL_LOAD 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'arg2', 'rdi']"
p1088
aS'rdi#1 = [arg2#0].q @ mem#0'
p1089
aS'rdi = [arg2].q'
p1090
aS'None'
p1091
aS'rax#1 = zx.q(0)'
p1092
ag12
ag1085
aS'{}'
p1093
aS"['0', '<MLIL_CONST 8>', '<MLIL_SET_VAR 8>', 'rax']"
p1094
aS"['0', '<MLIL_CONST 8>', '<MLIL_SET_VAR 8>', 'rax']"
p1095
aS'rax#1 = 0'
p1096
aS'rax = 0'
p1097
aS'None'
p1098
aS'rax#2, rcx#1, rdx#1, rsi#1, rdi#2, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#2 = call(0x100000f2c, stack = rsp#1 @ mem#1, params = rdi#1, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1099
ag12
ag1085
aS'{}'
p1100
aS"['4294971180', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi>]', '[<var int64_t rax_1>]']"
p1101
aS"['4294971180', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi>]', '[<var int64_t rax_1>]']"
p1102
aS'rax_1#2, mem#1 = 0x100000f2c(rdi#1) @ mem#0'
p1103
aS'rax_1 = 0x100000f2c(rdi)'
p1104
aS'None'
p1105
aS'rcx#2 = zx.q(rax#2.eax)'
p1106
ag12
ag1085
aS'{}'
p1107
aS"['0', '<MLIL_SET_VAR 8>', '<MLIL_VAR_FIELD 4>', '<MLIL_ZX 8>', 'rax_1', 'rcx']"
p1108
aS"['0', '<MLIL_SET_VAR 8>', '<MLIL_VAR_FIELD 4>', '<MLIL_ZX 8>', 'rax_1', 'rcx']"
p1109
aS'rcx#1 = zx.q(rax_1#2.eax)'
p1110
aS'rcx = zx.q(rax_1.eax)'
p1111
aS'None'
p1112
aS'if (rax#2.eax u> 0x1f) then 8 @ 0x100000e8e else 10 @ 0x100000e65'
p1113
ag12
ag1085
aS'{}'
p1114
aS"['0', '31', '5', '7', '<MLIL_CMP_UGT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR_FIELD 4>', 'rax_1']"
p1115
aS"['0', '31', '5', '7', '<MLIL_CMP_UGT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR_FIELD 4>', 'rax_1']"
p1116
aS'if (rax_1#2.eax u> 0x1f) then 5 @ 0x100000e8e else 7 @ 0x100000e6c'
p1117
aS'if (rax_1.eax u> 0x1f) then 5 @ 0x100000e8e else 7 @ 0x100000e6c'
p1118
aS'None'
p1119
aS'rdi#3 = 0x100000fa2'
p1120
ag12
ag1085
aS'{4L: <ILBranchDependence.TrueBranchDependent: 1>}'
p1121
aS"['4294971298', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1122
aS"['4294971298', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1123
aS'rdi_1#2 = 0x100000fa2'
p1124
aS'rdi_1 = 0x100000fa2'
p1125
aS'None'
p1126
aS'goto 14 @ 0x100000e85'
p1127
ag12
ag1085
aS'{4L: <ILBranchDependence.TrueBranchDependent: 1>}'
p1128
aS"['10', '<MLIL_GOTO>']"
p1129
aS"['10', '<MLIL_GOTO>']"
p1130
aS'goto 10 @ 0x100000e85'
p1131
aS'goto 10 @ 0x100000e85'
p1132
aS'None'
p1133
aS'rcx#3 = sx.q([rax#3 + (rcx#2 << 2)].d @ mem#2)'
p1134
ag12
ag1085
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1135
aS"['2', '4294971052', '<MLIL_ADD 8>', '<MLIL_CONST 1>', '<MLIL_CONST_PTR 8>', '<MLIL_LOAD 4>', '<MLIL_LSL 8>', '<MLIL_SET_VAR 8>', '<MLIL_SX 8>', '<MLIL_VAR 8>', 'rcx', 'rcx_1']"
p1136
aS"['2', '4294971052', '<MLIL_ADD 8>', '<MLIL_CONST 1>', '<MLIL_CONST_PTR 8>', '<MLIL_LOAD 4>', '<MLIL_LSL 8>', '<MLIL_SET_VAR 8>', '<MLIL_SX 8>', '<MLIL_VAR 8>', 'rcx', 'rcx_1']"
p1137
aS'rcx_1#2 = sx.q([0x100000eac + (rcx#1 << 2)].d @ mem#1)'
p1138
aS'rcx_1 = sx.q([0x100000eac + (rcx << 2)].d)'
p1139
aS'None'
p1140
aS'rcx#4 = rcx#3 + rax#3'
p1141
ag12
ag1085
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1142
aS"['4294971052', '<MLIL_ADD 8>', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'rcx_1', 'rcx_2']"
p1143
aS"['4294971052', '<MLIL_ADD 8>', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', '<MLIL_VAR 8>', 'rcx_1', 'rcx_2']"
p1144
aS'rcx_2#3 = rcx_1#2 + 0x100000eac'
p1145
aS'rcx_2 = rcx_1 + 0x100000eac'
p1146
aS'None'
p1147
aS'jump(rcx#4 => 22 @ 0x100000e75, 24 @ 0x100000e7e, 26 @ 0x100000e97, 28 @ 0x100000ea0)'
p1148
ag12
ag1085
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1149
aS"['<MLIL_JUMP_TO>', '<MLIL_VAR 8>', '[13L, 15L, 17L, 19L]', 'rcx_2']"
p1150
aS"['<MLIL_JUMP_TO>', '<MLIL_VAR 8>', '[13L, 15L, 17L, 19L]', 'rcx_2']"
p1151
aS'jump(rcx_2#3 => 15 @ 0x100000e75, 17 @ 0x100000e7e, 19 @ 0x100000e97, 21 @ 0x100000ea0)'
p1152
aS'jump(rcx_2 => 13 @ 0x100000e75, 15 @ 0x100000e7e, 17 @ 0x100000e97, 19 @ 0x100000ea0)'
p1153
aS'None'
p1154
aS'rax#5, rcx#6, rdx#2, rsi#2, rdi#9, r8#2, r9#2, r10#2, r11#2, xmm0#2, xmm1#2, xmm2#2, xmm3#2, xmm4#2, xmm5#2, xmm6#2, xmm7#2, xmm8#2, xmm9#2, xmm10#2, xmm11#2, xmm12#2, xmm13#2, xmm14#2, xmm15#2, mem#3 = call(0x100000f32, stack = rsp#1 @ mem#2, params = rdi#8, rsi#1, rdx#1, rcx#5, r8#1, r9#1)'
p1155
ag12
ag1085
aS'{}'
p1156
aS"['4294971186', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi_1>]', '[]']"
p1157
aS"['4294971186', '<MLIL_CALL>', '<MLIL_CONST_PTR 8>', '[<il: rdi_1>]', '[]']"
p1158
aS'mem#2 = 0x100000f32(rdi_1#7) @ mem#1'
p1159
aS'0x100000f32(rdi_1)'
p1160
aS'None'
p1161
aS'rax#6 = zx.q(0)'
p1162
ag12
ag1085
aS'{}'
p1163
aS"['0', '<MLIL_CONST 8>', '<MLIL_SET_VAR 8>', 'rax_2']"
p1164
aS"['0', '<MLIL_CONST 8>', '<MLIL_SET_VAR 8>', 'rax_2']"
p1165
aS'rax_2#3 = 0'
p1166
aS'rax_2 = 0'
p1167
aS'None'
p1168
aS'<return> jump([rsp#2].q @ mem#3)'
p1169
ag12
ag1085
aS'{}'
p1170
aS"['<MLIL_RET>', '[<il: 0>]']"
p1171
aS"['<MLIL_RET>', '[<il: 0>]']"
p1172
aS'return 0'
p1173
aS'return 0'
p1174
aS'None'
p1175
aS'rdi#4 = 0x100000f80'
p1176
ag12
ag1085
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1177
aS"['4294971264', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1178
aS"['4294971264', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1179
aS'rdi_1#3 = 0x100000f80'
p1180
aS'rdi_1 = 0x100000f80'
p1181
aS'None'
p1182
aS'goto 14 @ 0x100000e85'
p1183
ag12
ag1085
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1184
aS"['10', '<MLIL_GOTO>']"
p1185
aS"['10', '<MLIL_GOTO>']"
p1186
aS'goto 10 @ 0x100000e85'
p1187
aS'goto 10 @ 0x100000e85'
p1188
aS'None'
p1189
aS'rdi#5 = 0x100000f60'
p1190
ag12
ag1085
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1191
aS"['4294971232', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1192
aS"['4294971232', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1193
aS'rdi_1#4 = 0x100000f60'
p1194
aS'rdi_1 = 0x100000f60'
p1195
aS'None'
p1196
aS'goto 14 @ 0x100000e85'
p1197
ag12
ag1085
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1198
aS"['10', '<MLIL_GOTO>']"
p1199
aS"['10', '<MLIL_GOTO>']"
p1200
aS'goto 10 @ 0x100000e85'
p1201
aS'goto 10 @ 0x100000e85'
p1202
aS'None'
p1203
aS'rdi#6 = 0x100000f9e'
p1204
ag12
ag1085
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1205
aS"['4294971294', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1206
aS"['4294971294', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1207
aS'rdi_1#5 = 0x100000f9e'
p1208
aS'rdi_1 = 0x100000f9e'
p1209
aS'None'
p1210
aS'goto 14 @ 0x100000e85'
p1211
ag12
ag1085
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1212
aS"['10', '<MLIL_GOTO>']"
p1213
aS"['10', '<MLIL_GOTO>']"
p1214
aS'goto 10 @ 0x100000e85'
p1215
aS'goto 10 @ 0x100000e85'
p1216
aS'None'
p1217
aS'rdi#7 = 0x100000f99'
p1218
ag12
ag1085
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1219
aS"['4294971289', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1220
aS"['4294971289', '<MLIL_CONST_PTR 8>', '<MLIL_SET_VAR 8>', 'rdi_1']"
p1221
aS'rdi_1#6 = 0x100000f99'
p1222
aS'rdi_1 = 0x100000f99'
p1223
aS'None'
p1224
aS'goto 14 @ 0x100000e85'
p1225
ag12
ag1085
aS'{4L: <ILBranchDependence.FalseBranchDependent: 2>}'
p1226
aS"['10', '<MLIL_GOTO>']"
p1227
aS"['10', '<MLIL_GOTO>']"
p1228
aS'goto 10 @ 0x100000e85'
p1229
aS'goto 10 @ 0x100000e85'
p1230
aS'None'
p1231
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001010].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1232
ag12
ag1085
aS'{}'
p1233
aS"['4294971408', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1234
aS"['4294971408', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1235
aS'return _atoi() __tailcall'
p1236
aS'return _atoi() __tailcall'
p1237
aS'None'
p1238
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001018].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1239
ag12
ag1085
aS'{}'
p1240
aS"['4294971416', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1241
aS"['4294971416', '<MLIL_IMPORT 8>', '<MLIL_TAILCALL>', '[<var int64_t rax>, <var int64_t rcx>, <var int64_t rdx>, <var int64_t rsi>, <var int64_t rdi>, <var int64_t r8>, <var int64_t r9>, <var int64_t r10>, <var int64_t r11>, <var int128_t xmm0>, <var int128_t xmm1>, <var int128_t xmm2>, <var int128_t xmm3>, <var int128_t xmm4>, <var int128_t xmm5>, <var int128_t xmm6>, <var int128_t xmm7>, <var int128_t xmm8>, <var int128_t xmm9>, <var int128_t xmm10>, <var int128_t xmm11>, <var int128_t xmm12>, <var int128_t xmm13>, <var int128_t xmm14>, <var int128_t xmm15>]', '[]']"
p1242
aS'return _puts() __tailcall'
p1243
aS'return _puts() __tailcall'
p1244
asS'test_function_symbol_names'
p1245
(lp1246
S'_main SymbolType.FunctionSymbol 0x100000e50L'
p1247
aS'_atoi SymbolType.ImportedFunctionSymbol 0x100000f2cL'
p1248
aS'_puts SymbolType.ImportedFunctionSymbol 0x100000f32L'
p1249
asS'test_BinaryView'
p1250
(lp1251
S'void*'
p1252
aS'[<segment: 0x100000000-0x100001000, r-x>, <segment: 0x100001000-0x100002000, rw->, <segment: 0x100002000-0x100003000, r-->]'
p1253
aS"{'__stub_helper': <section __stub_helper: 0x100000f38-0x100000f5c>, '__unwind_info': <section __unwind_info: 0x100000fb4-0x100000ffc>, '__la_symbol_ptr': <section __la_symbol_ptr: 0x100001010-0x100001020>, '__stubs': <section __stubs: 0x100000f2c-0x100000f38>, '__nl_symbol_ptr': <section __nl_symbol_ptr: 0x100001000-0x100001010>, '__text': <section __text: 0x100000e50-0x100000f2c>, '__cstring': <section __cstring: 0x100000f60-0x100000fb1>}"
p1254
aS'[<0x100000000-0x100003000>]'
p1255
aS'{}'
p1256
aS'4294971232'
p1257
aS'4294971264'
p1258
aS'4294971298'
p1259
aS'4294971392'
p1260
aS'4294971052'
p1261
aS'4294971180'
p1262
aS'4294971408'
p1263
aS'4294971186'
p1264
aS'4294971416'
p1265
aS'4294971289'
p1266
aS'4294971294'
p1267
aS'<func: x86_64@0x100000e50>'
p1268
aS'<func: x86_64@0x100000e50>'
p1269
aS'<func: x86_64@0x100000f2c>'
p1270
aS'<func: x86_64@0x100000f32>'
p1271
aS'0x100000e50L'
p1272
aS'0x100000000L'
p1273
aS'length: 0x3000'
p1274
asS'test_available_types'
p1275
(lp1276
S'Raw'
p1277
aS'Mach-O'
p1278
asS'test_function_basic_blocks'
p1279
(lp1280
S'0x100000e50L 0x100000e65L False'
p1281
aS'0x100000e8eL 0x100000e97L False'
p1282
aS'0x100000e65L 0x100000e75L False'
p1283
aS'0x100000e85L 0x100000e8eL True'
p1284
aS'0x100000e75L 0x100000e7eL False'
p1285
aS'0x100000e7eL 0x100000e85L False'
p1286
aS'0x100000e97L 0x100000ea0L False'
p1287
aS'0x100000ea0L 0x100000ea9L False'
p1288
aS'0x100000f2cL 0x100000f32L True'
p1289
aS'0x100000f32L 0x100000f38L True'
p1290
asS'test_function_med_il_basic_blocks'
p1291
(lp1292
S'0x0L 0x5L 2'
p1293
aS'0x5L 0x7L 1'
p1294
aS'0x7L 0xaL 4'
p1295
aS'0xaL 0xdL 0'
p1296
aS'0xdL 0xfL 1'
p1297
aS'0xfL 0x11L 1'
p1298
aS'0x11L 0x13L 1'
p1299
aS'0x13L 0x15L 1'
p1300
aS'0x0L 0x1L 0'
p1301
aS'0x0L 0x1L 0'
p1302
asS'test_symbols'
p1303
(lp1304
S'_atoi'
p1305
aS'_atoi@PLT'
p1306
aS'_main'
p1307
aS'_puts'
p1308
aS'_puts@PLT'
p1309
aS'dyld_stub_binder'
p1310
aS'jump_table_100000eac'
p1311
asS'test_low_il_instructions'
p1312
(lp1313
S'None'
p1314
aS'__saved_rbp = rbp'
p1315
ag12
ag1085
aS'[<LLIL_PUSH 8>, <LLIL_REG 8>, rbp]'
p1316
aS'[rbp, <LLIL_REG 8>, <LLIL_PUSH 8>]'
p1317
aS'[rsp#0 - 8].q = rbp#0 @ mem#0 -> mem#1'
p1318
aS'push(rbp)'
p1319
aS'None'
p1320
aS'rbp = &__saved_rbp'
p1321
ag12
ag1085
aS'[<LLIL_SET_REG 8>, rbp, <LLIL_REG 8>, rsp]'
p1322
aS'[rbp, rsp, <LLIL_REG 8>, <LLIL_SET_REG 8>]'
p1323
aS'rbp#1 = rsp#1'
p1324
aS'rbp = rsp'
p1325
aS'rdi = [arg2].q'
p1326
aS'arg1 = [arg2].q'
p1327
ag12
ag1085
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_LOAD 8>, <LLIL_REG 8>, rsi]'
p1328
aS'[rdi, rsi, <LLIL_REG 8>, <LLIL_LOAD 8>, <LLIL_SET_REG 8>]'
p1329
aS'rdi#1 = [rsi#0].q @ mem#1'
p1330
aS'rdi = [rsi].q'
p1331
aS'rax = 0'
p1332
aS'rax = 0'
p1333
ag12
ag1085
aS'[<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 0L]'
p1334
aS'[eax, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1335
aS'rax#1 = zx.q(0)'
p1336
aS'eax = 0'
p1337
aS'rax_1 = 0x100000f2c(rdi)'
p1338
aS'rax, rcx, rdx, arg2, arg1, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = call(0x100000f2c, arg1, arg2, rdx, rcx, r8, r9, stack = &__saved_rbp)'
p1339
ag12
ag1085
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 8>, 4294971180L, 0L, {}]'
p1340
aS'[4294971180L, <LLIL_CONST_PTR 8>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1341
aS'rax#2, rcx#1, rdx#1, rsi#1, rdi#2, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#2 = call(0x100000f2c, stack = rsp#1 @ mem#1, params = rdi#1, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1342
aS'call(0x100000f2c)'
p1343
aS'rcx = zx.q(rax_1.eax)'
p1344
aS'rcx = zx.q(rax.eax)'
p1345
ag12
ag1085
aS'[<LLIL_SET_REG 4>, ecx, <LLIL_REG 4>, eax]'
p1346
aS'[ecx, eax, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p1347
aS'rcx#2 = zx.q(rax#2.eax)'
p1348
aS'ecx = eax'
p1349
aS'None'
p1350
aS'if (rax.eax u> 0x1f) then 8 @ 0x100000e8e else 10 @ 0x100000e65'
p1351
ag12
ag1085
aS'[<LLIL_IF>, <LLIL_CMP_UGT 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 31L, 7L, 9L]'
p1352
aS'[eax, <LLIL_REG 4>, 31L, <LLIL_CONST 4>, <LLIL_CMP_UGT 4>, 7L, 9L, <LLIL_IF>]'
p1353
aS'if (rax#2.eax u> 0x1f) then 8 @ 0x100000e8e else 10 @ 0x100000e65'
p1354
aS'if (eax u> 0x1f) then 7 @ 0x100000e8e else 9 @ 0x100000e65'
p1355
aS'rdi_1 = 0x100000fa2'
p1356
aS'arg1 = 0x100000fa2'
p1357
ag12
ag1085
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971298L]'
p1358
aS'[rdi, 4294971298L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1359
aS'rdi#3 = 0x100000fa2'
p1360
aS'rdi = 0x100000fa2'
p1361
aS'None'
p1362
aS'goto 14 @ 0x100000e85'
p1363
ag12
ag1085
aS'[<LLIL_GOTO>, 13L]'
p1364
aS'[13L, <LLIL_GOTO>]'
p1365
aS'goto 14 @ 0x100000e85'
p1366
aS'goto 13 @ 0x100000e85'
p1367
aS'None'
p1368
aS'rax = 0x100000eac'
p1369
ag12
ag1085
aS'[<LLIL_SET_REG 8>, rax, <LLIL_CONST_PTR 8>, 4294971052L]'
p1370
aS'[rax, 4294971052L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1371
aS'rax#3 = 0x100000eac'
p1372
aS'rax = 0x100000eac'
p1373
aS'rcx_1 = sx.q([0x100000eac + (rcx << 2)].d)'
p1374
aS'rcx = sx.q([0x100000eac + (rcx << 2)].d)'
p1375
ag12
ag1085
aS'[<LLIL_SET_REG 8>, rcx, <LLIL_SX 8>, <LLIL_LOAD 4>, <LLIL_ADD 8>, <LLIL_REG 8>, rax, <LLIL_LSL 8>, <LLIL_REG 8>, rcx, <LLIL_CONST 1>, 2L]'
p1376
aS'[rcx, rax, <LLIL_REG 8>, rcx, <LLIL_REG 8>, 2L, <LLIL_CONST 1>, <LLIL_LSL 8>, <LLIL_ADD 8>, <LLIL_LOAD 4>, <LLIL_SX 8>, <LLIL_SET_REG 8>]'
p1377
aS'rcx#3 = sx.q([rax#3 + (rcx#2 << 2)].d @ mem#2)'
p1378
aS'rcx = sx.q([rax + (rcx << 2)].d)'
p1379
aS'rcx_2 = rcx_1 + 0x100000eac'
p1380
aS'rcx = rcx + 0x100000eac'
p1381
ag12
ag1085
aS'[<LLIL_SET_REG 8>, rcx, <LLIL_ADD 8>, <LLIL_REG 8>, rcx, <LLIL_REG 8>, rax]'
p1382
aS'[rcx, rcx, <LLIL_REG 8>, rax, <LLIL_REG 8>, <LLIL_ADD 8>, <LLIL_SET_REG 8>]'
p1383
aS'rcx#4 = rcx#3 + rax#3'
p1384
aS'rcx = rcx + rax'
p1385
aS'None'
p1386
aS'jump(rcx => 19 @ 0x100000e75, 21 @ 0x100000e7e, 23 @ 0x100000e97, 25 @ 0x100000ea0)'
p1387
ag12
ag1085
aS'[<LLIL_JUMP_TO>, <LLIL_REG 8>, rcx, [17L, 19L, 21L, 23L]]'
p1388
aS'[rcx, <LLIL_REG 8>, [17L, 19L, 21L, 23L], <LLIL_JUMP_TO>]'
p1389
aS'jump(rcx#4 => 22 @ 0x100000e75, 24 @ 0x100000e7e, 26 @ 0x100000e97, 28 @ 0x100000ea0)'
p1390
aS'jump(rcx => 17 @ 0x100000e75, 19 @ 0x100000e7e, 21 @ 0x100000e97, 23 @ 0x100000ea0)'
p1391
aS'0x100000f32(rdi_1)'
p1392
aS'rax, rcx, rdx, arg2, arg1, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = call(0x100000f32, arg1, arg2, rdx, rcx, r8, r9, stack = &__saved_rbp)'
p1393
ag12
ag1085
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 8>, 4294971186L, 0L, {}]'
p1394
aS'[4294971186L, <LLIL_CONST_PTR 8>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1395
aS'rax#5, rcx#6, rdx#2, rsi#2, rdi#9, r8#2, r9#2, r10#2, r11#2, xmm0#2, xmm1#2, xmm2#2, xmm3#2, xmm4#2, xmm5#2, xmm6#2, xmm7#2, xmm8#2, xmm9#2, xmm10#2, xmm11#2, xmm12#2, xmm13#2, xmm14#2, xmm15#2, mem#3 = call(0x100000f32, stack = rsp#1 @ mem#2, params = rdi#8, rsi#1, rdx#1, rcx#5, r8#1, r9#1)'
p1396
aS'call(0x100000f32)'
p1397
aS'rax_2 = 0'
p1398
aS'rax = 0'
p1399
ag12
ag1085
aS'[<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 0L]'
p1400
aS'[eax, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1401
aS'rax#6 = zx.q(0)'
p1402
aS'eax = 0'
p1403
aS'None'
p1404
aS'rbp = __saved_rbp'
p1405
ag12
ag1085
aS'[<LLIL_SET_REG 8>, rbp, <LLIL_POP 8>]'
p1406
aS'[rbp, <LLIL_POP 8>, <LLIL_SET_REG 8>]'
p1407
aS'rbp#2 = [rsp#1].q @ mem#3'
p1408
aS'rbp = pop'
p1409
aS'None'
p1410
aS'return '
p1411
ag12
ag1085
aS'[<LLIL_RET>, <LLIL_POP 8>]'
p1412
aS'[<LLIL_POP 8>, <LLIL_RET>]'
p1413
aS'<return> jump([rsp#2].q @ mem#3)'
p1414
aS'<return> jump(pop)'
p1415
aS'rdi_1 = 0x100000f80'
p1416
aS'arg1 = 0x100000f80'
p1417
ag12
ag1085
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971264L]'
p1418
aS'[rdi, 4294971264L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1419
aS'rdi#4 = 0x100000f80'
p1420
aS'rdi = 0x100000f80'
p1421
aS'None'
p1422
aS'goto 14 @ 0x100000e85'
p1423
ag12
ag1085
aS'[<LLIL_GOTO>, 13L]'
p1424
aS'[13L, <LLIL_GOTO>]'
p1425
aS'goto 14 @ 0x100000e85'
p1426
aS'goto 13 @ 0x100000e85'
p1427
aS'rdi_1 = 0x100000f60'
p1428
aS'arg1 = 0x100000f60'
p1429
ag12
ag1085
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971232L]'
p1430
aS'[rdi, 4294971232L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1431
aS'rdi#5 = 0x100000f60'
p1432
aS'rdi = 0x100000f60'
p1433
aS'None'
p1434
aS'goto 14 @ 0x100000e85'
p1435
ag12
ag1085
aS'[<LLIL_GOTO>, 13L]'
p1436
aS'[13L, <LLIL_GOTO>]'
p1437
aS'goto 14 @ 0x100000e85'
p1438
aS'goto 13 @ 0x100000e85'
p1439
aS'rdi_1 = 0x100000f9e'
p1440
aS'arg1 = 0x100000f9e'
p1441
ag12
ag1085
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971294L]'
p1442
aS'[rdi, 4294971294L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1443
aS'rdi#6 = 0x100000f9e'
p1444
aS'rdi = 0x100000f9e'
p1445
aS'None'
p1446
aS'goto 14 @ 0x100000e85'
p1447
ag12
ag1085
aS'[<LLIL_GOTO>, 13L]'
p1448
aS'[13L, <LLIL_GOTO>]'
p1449
aS'goto 14 @ 0x100000e85'
p1450
aS'goto 13 @ 0x100000e85'
p1451
aS'rdi_1 = 0x100000f99'
p1452
aS'arg1 = 0x100000f99'
p1453
ag12
ag1085
aS'[<LLIL_SET_REG 8>, rdi, <LLIL_CONST_PTR 8>, 4294971289L]'
p1454
aS'[rdi, 4294971289L, <LLIL_CONST_PTR 8>, <LLIL_SET_REG 8>]'
p1455
aS'rdi#7 = 0x100000f99'
p1456
aS'rdi = 0x100000f99'
p1457
aS'None'
p1458
aS'goto 14 @ 0x100000e85'
p1459
ag12
ag1085
aS'[<LLIL_GOTO>, 13L]'
p1460
aS'[13L, <LLIL_GOTO>]'
p1461
aS'goto 14 @ 0x100000e85'
p1462
aS'goto 13 @ 0x100000e85'
p1463
aS'return _atoi() __tailcall'
p1464
aS'rax, rcx, rdx, rsi, rdi, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = tailcall(_atoi, rdi, rsi, rdx, rcx, r8, r9, stack = &arg_0)'
p1465
ag12
ag1085
aS'[<LLIL_TAILCALL>, <LLIL_LOAD 8>, <LLIL_CONST_PTR 8>, 4294971408L]'
p1466
aS'[4294971408L, <LLIL_CONST_PTR 8>, <LLIL_LOAD 8>, <LLIL_TAILCALL>]'
p1467
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001010].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1468
aS'<return> tailcall([0x100001010].q)'
p1469
aS'return _puts() __tailcall'
p1470
aS'rax, rcx, rdx, rsi, rdi, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15 = tailcall(_puts, rdi, rsi, rdx, rcx, r8, r9, stack = &arg_0)'
p1471
ag12
ag1085
aS'[<LLIL_TAILCALL>, <LLIL_LOAD 8>, <LLIL_CONST_PTR 8>, 4294971416L]'
p1472
aS'[4294971416L, <LLIL_CONST_PTR 8>, <LLIL_LOAD 8>, <LLIL_TAILCALL>]'
p1473
aS'rax#1, rcx#1, rdx#1, rsi#1, rdi#1, r8#1, r9#1, r10#1, r11#1, xmm0#1, xmm1#1, xmm2#1, xmm3#1, xmm4#1, xmm5#1, xmm6#1, xmm7#1, xmm8#1, xmm9#1, xmm10#1, xmm11#1, xmm12#1, xmm13#1, xmm14#1, xmm15#1, mem#1 = <return> tailcall([0x100001018].q @ mem#0, stack = rsp#0 @ mem#0, params = rdi#0, rsi#0, rdx#0, rcx#0, r8#0, r9#0)'
p1474
aS'<return> tailcall([0x100001018].q)'
p1475
asS'test_med_il_vars'
p1476
(lp1477
S'None [0L] <entry rsi> <entry rsi> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi#1 = [arg2#0].q @ mem#0>>'
p1478
aS'0 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi#1 = [arg2#0].q @ mem#0>>'
p1479
aS'1 [] <const 0x0> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax#1 = 0>>'
p1480
aS'0 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_1#2, mem#1 = 0x100000f2c(rdi#1) @ mem#0>>'
p1481
aS'2 [3L, 4L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_1#2, mem#1 = 0x100000f2c(rdi#1) @ mem#0>>'
p1482
aS'2 [3L, 4L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx#1 = zx.q(rax_1#2.eax)>>'
p1483
aS'3 [7L, 10L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx#1 = zx.q(rax_1#2.eax)>>'
p1484
aS'2 [3L, 4L] <undetermined> <unsigned ranges: [<range: 0x0 to 0xffffffff>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (rax_1#2.eax u> 0x1f) then 5 @ 0x100000e8e else 7 @ 0x100000e6c>>'
p1485
aS'5 [10L] <const ptr 0x100000fa2> <const ptr 0x100000fa2> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#2 = 0x100000fa2>>'
p1486
aS'3 [7L, 10L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x1f>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx_1#2 = sx.q([0x100000eac + (rcx#1 << 2)].d @ mem#1)>>'
p1487
aS'7 [8L] <undetermined> <table: [0x1e] -> -0x37, [0x1f] -> -0x2e, [0x2] -> -0x15, [0x5] -> -0xc> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx_1#2 = sx.q([0x100000eac + (rcx#1 << 2)].d @ mem#1)>>'
p1488
aS'7 [8L] <undetermined> <table: [0x1e] -> -0x37, [0x1f] -> -0x2e, [0x2] -> -0x15, [0x5] -> -0xc> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx_2#3 = rcx_1#2 + 0x100000eac>>'
p1489
aS'8 [9L, 10L] <undetermined> <table: [0x1e] -> 0x100000e75, [0x1f] -> 0x100000e7e, [0x2] -> 0x100000e97, [0x5] -> 0x100000ea0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rcx_2#3 = rcx_1#2 + 0x100000eac>>'
p1490
aS'8 [9L, 10L] <undetermined> <table: [0x1e] -> 0x100000e75, [0x1f] -> 0x100000e7e, [0x2] -> 0x100000e97, [0x5] -> 0x100000ea0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: jump(rcx_2#3 => 15 @ 0x100000e75, 17 @ 0x100000e7e, 19 @ 0x100000e97, 21 @ 0x100000ea0)>>'
p1491
aS'10 [10L] <undetermined> <in set([0x100000f60, 0x100000f80, 0x100000fa2, 0x100000f9e, 0x100000f99])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: mem#2 = 0x100000f32(rdi_1#7) @ mem#1>>'
p1492
aS'11 [] <const 0x0> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rax_2#3 = 0>>'
p1493
aS'13 [10L] <const ptr 0x100000f80> <const ptr 0x100000f80> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#3 = 0x100000f80>>'
p1494
aS'15 [10L] <const ptr 0x100000f60> <const ptr 0x100000f60> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#4 = 0x100000f60>>'
p1495
aS'17 [10L] <const ptr 0x100000f9e> <const ptr 0x100000f9e> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#5 = 0x100000f9e>>'
p1496
aS'19 [10L] <const ptr 0x100000f99> <const ptr 0x100000f99> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: rdi_1#6 = 0x100000f99>>'
p1497
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1498
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1499
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1500
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1501
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1502
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1503
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1504
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1505
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1506
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1507
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1508
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1509
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1510
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1511
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1512
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1513
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1514
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1515
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1516
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1517
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1518
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1519
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1520
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1521
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1522
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1523
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1524
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1525
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1526
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1527
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1528
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1529
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1530
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1531
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1532
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1533
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1534
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1535
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1536
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1537
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1538
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1539
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1540
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1541
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1542
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1543
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1544
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1545
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1546
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1547
as.
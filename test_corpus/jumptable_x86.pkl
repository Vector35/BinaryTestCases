(dp0
S'test_function_can_return'
p1
(lp2
S'_main SymbolType.FunctionSymbol 0x1e50L True'
p3
aS'_atoi SymbolType.ImportedFunctionSymbol 0x1f30L True'
p4
aS'_puts SymbolType.ImportedFunctionSymbol 0x1f36L True'
p5
asS'test_function_stack'
p6
(lp7
S"['var_10', 'var_c', 'var_c_1', 'var_c_2', '__saved_esi', '__saved_ebp', '__return_addr', 'testautovar', 'arg1']"
p8
aS'<return address>'
p9
ag9
aS'None'
p10
aS"['__return_addr', 'testautovar']"
p11
aS'<undetermined>'
p12
ag12
aS'None'
p13
aS"['__return_addr', 'testautovar']"
p14
ag12
ag12
aS'None'
p15
asS'test_strings'
p16
(lp17
S'__PAGEZERO StringType.AsciiString 0x1024L'
p18
aS'__TEXT StringType.AsciiString 0x105cL'
p19
aS'__text StringType.AsciiString 0x108cL'
p20
aS'__TEXT StringType.AsciiString 0x109cL'
p21
aS'__symbol_stub StringType.AsciiString 0x10d0L'
p22
aS'__TEXT StringType.AsciiString 0x10e0L'
p23
aS'__stub_helper StringType.AsciiString 0x1114L'
p24
aS'__TEXT StringType.AsciiString 0x1124L'
p25
aS'__cstring StringType.AsciiString 0x1158L'
p26
aS'__TEXT StringType.AsciiString 0x1168L'
p27
aS'__unwind_info StringType.AsciiString 0x119cL'
p28
aS'__TEXT StringType.AsciiString 0x11acL'
p29
aS'__DATA StringType.AsciiString 0x11e8L'
p30
aS'__nl_symbol_ptr StringType.AsciiString 0x1218L'
p31
aS'__DATA StringType.AsciiString 0x1228L'
p32
aS'__la_symbol_ptr StringType.AsciiString 0x125cL'
p33
aS'__DATA StringType.AsciiString 0x126cL'
p34
aS'__LINKEDIT StringType.AsciiString 0x12a8L'
p35
aS'/usr/lib/dyld StringType.AsciiString 0x137cL'
p36
aS'/usr/lib/libSystem.B.dylib StringType.AsciiString 0x13f4L'
p37
aS'Odd number less than 32 StringType.AsciiString 0x1f60L'
p38
aS'Even number less than 32 StringType.AsciiString 0x1f80L'
p39
aS'Five StringType.AsciiString 0x1f99L'
p40
aS'Something else StringType.AsciiString 0x1fa2L'
p41
aS'@dyld_stub_binder StringType.AsciiString 0x3011L'
p42
aS'@_atoi StringType.AsciiString 0x302bL'
p43
aS'@_puts StringType.AsciiString 0x3037L'
p44
aS'_mh_execute_header StringType.AsciiString 0x3047L'
p45
aS'!main StringType.AsciiString 0x305aL'
p46
aS'__mh_execute_header StringType.AsciiString 0x30c6L'
p47
aS'_main StringType.AsciiString 0x30daL'
p48
aS'_atoi StringType.AsciiString 0x30e0L'
p49
aS'_puts StringType.AsciiString 0x30e6L'
p50
aS'dyld_stub_binder StringType.AsciiString 0x30ecL'
p51
asS'test_function_low_il_basic_blocks'
p52
(lp53
S'0x0L 0xbL 2'
p54
aS'0xbL 0xdL 1'
p55
aS'0xdL 0x10L 4'
p56
aS'0x10L 0x17L 0'
p57
aS'0x17L 0x19L 1'
p58
aS'0x19L 0x1bL 1'
p59
aS'0x1bL 0x1dL 1'
p60
aS'0x1dL 0x1fL 1'
p61
aS'0x0L 0x1L 0'
p62
aS'0x0L 0x1L 0'
p63
asS'test_functions_attributes'
p64
(lp65
S"['var_10', 'var_c', 'var_c_1', 'var_c_2', '__saved_esi', '__saved_ebp', 'testautovar', 'arg1', 'eax', 'eax_1', 'eax_2', 'eax_3', 'eax_4', 'eax_5', 'eax_6', 'eax_7']"
p66
aS'[<branch x86:0x1e76 -> x86:0x1e78>, <branch x86:0x1e76 -> x86:0x1e80>, <branch x86:0x1e76 -> x86:0x1e9e>, <branch x86:0x1e76 -> x86:0x1ea6>]'
p67
aS'{}'
p68
aI1
aS"['eax', 'ecx', 'edx']"
p69
aS'False'
p70
aS'True'
p71
aI45
ag12
aS'testcomment _main'
p72
ag70
ag70
aS'push(ebp)'
p73
aS'[]'
p74
aS"['esp', 'ebp']"
p75
aS"['esp']"
p76
aS'[<ref to __saved_ebp>]'
p77
aS'[]'
p78
aS'push(ebp)'
p79
aS'[]'
p80
aS'[]'
p81
aS'<graph of <func: x86@0x1e50>>'
p82
aS'[]'
p83
aS'[]'
p84
aS'<block: x86@0x1e50-0x1e6d>'
p85
aS'<color: #ff00ff>'
p86
aS'[<0x1e50: int32_t _main(int32_t* arg1)>]'
p87
aS"['testautovar', 'eax', 'ecx', 'edx']"
p88
aS'[]'
p89
aS'{}'
p90
aI1
aS"['eax', 'ecx', 'edx']"
p91
ag70
ag71
aI3
ag12
aS'testcomment _atoi'
p92
ag70
ag70
aS'<return> tailcall([0x2008].d)'
p93
aS'[]'
p94
aS'[]'
p95
aS'[]'
p96
aS'[]'
p97
aS'[<constant pointer 0x2008>]'
p98
aS'jump([0x2008].d)'
p99
aS'[]'
p100
aS'[]'
p101
aS'<graph of <func: x86@0x1f30>>'
p102
aS'[]'
p103
aS'[]'
p104
aS'<block: x86@0x1f30-0x1f36>'
p105
aS'<color: #ff00ff>'
p106
aS'[<0x1f30: int32_t _atoi()>]'
p107
aS"['testautovar', 'eax', 'ecx', 'edx']"
p108
aS'[]'
p109
aS'{}'
p110
aI1
aS"['eax', 'ecx', 'edx']"
p111
ag70
ag71
aI3
ag12
aS'testcomment _puts'
p112
ag70
ag70
aS'<return> tailcall([0x200c].d)'
p113
aS'[]'
p114
aS'[]'
p115
aS'[]'
p116
aS'[]'
p117
aS'[<constant pointer 0x200c>]'
p118
aS'jump([0x200c].d)'
p119
aS'[]'
p120
aS'[]'
p121
aS'<graph of <func: x86@0x1f36>>'
p122
aS'[]'
p123
aS'[]'
p124
aS'<block: x86@0x1f36-0x1f3c>'
p125
aS'<color: #ff00ff>'
p126
aS'[<0x1f36: int32_t _puts()>]'
p127
asS'test_function_starts'
p128
(lp129
S'0x1e50L'
p130
aS'0x1f30L'
p131
aS'0x1f36L'
p132
asS'test_function_llil'
p133
(lp134
S'<block: x86@0x0-0xb>'
p135
aS'<block: x86@0xb-0xd>'
p136
aS'<block: x86@0xd-0x10>'
p137
aS'<block: x86@0x10-0x17>'
p138
aS'<block: x86@0x17-0x19>'
p139
aS'<block: x86@0x19-0x1b>'
p140
aS'<block: x86@0x1b-0x1d>'
p141
aS'<block: x86@0x1d-0x1f>'
p142
aS'push(ebp)'
p143
aS'ebp = esp {__saved_ebp}'
p144
aS'push(esi)'
p145
aS'push(eax)'
p146
aS'push(0x1e5a)'
p147
aS'esi = pop'
p148
aS'eax = [ebp + 0xc {arg1}].d'
p149
aS'eax = [eax].d'
p150
aS'[esp {var_c_1}].d = eax'
p151
aS'call(0x1f30)'
p152
aS'if (eax u> 0x1f) then 11 @ 0x1e96 else 13 @ 0x1e6d'
p153
aS'eax = esi + 0x148'
p154
aS'goto 16 @ 0x1e86'
p155
aS'eax = [esi + (eax << 2) + 0x56].d'
p156
aS'eax = eax + esi'
p157
aS'jump(eax => 23 @ 0x1e78, 25 @ 0x1e80, 27 @ 0x1e9e, 29 @ 0x1ea6)'
p158
aS'[esp {var_c_2}].d = eax'
p159
aS'call(0x1f36)'
p160
aS'eax = 0'
p161
aS'esp = esp + 4'
p162
aS'esi = pop'
p163
aS'ebp = pop'
p164
aS'<return> jump(pop)'
p165
aS'eax = esi + 0x126'
p166
aS'goto 16 @ 0x1e86'
p167
aS'eax = esi + 0x106'
p168
aS'goto 16 @ 0x1e86'
p169
aS'eax = esi + 0x144'
p170
aS'goto 16 @ 0x1e86'
p171
aS'eax = esi + 0x13f'
p172
aS'goto 16 @ 0x1e86'
p173
aS'<block: x86@0x0-0x6>'
p174
aS'<block: x86@0x6-0x8>'
p175
aS'<block: x86@0x8-0xb>'
p176
aS'<block: x86@0xb-0xf>'
p177
aS'<block: x86@0xf-0x11>'
p178
aS'<block: x86@0x11-0x13>'
p179
aS'<block: x86@0x13-0x15>'
p180
aS'<block: x86@0x15-0x17>'
p181
aS'var_c = eax'
p182
aS'eax_1 = arg1'
p183
aS'eax_2 = [eax_1].d'
p184
aS'var_c_1 = eax_2'
p185
aS'eax_3 = 0x1f30(var_c_1)'
p186
aS'if (eax_3 u> 0x1f) then 6 @ 0x1e96 else 8 @ 0x1e6d'
p187
aS'eax_6 = 0x1fa2'
p188
aS'goto 11 @ 0x1e86'
p189
aS'eax_4 = [0x1e5a + (eax_3 << 2) + 0x56].d'
p190
aS'eax_5 = eax_4 + 0x1e5a'
p191
aS'jump(eax_5 => 15 @ 0x1e78, 17 @ 0x1e80, 19 @ 0x1e9e, 21 @ 0x1ea6)'
p192
aS'var_c_2 = eax_6'
p193
aS'0x1f36(var_c_2)'
p194
aS'eax_7 = 0'
p195
aS'return 0'
p196
aS'eax_6 = 0x1f80'
p197
aS'goto 11 @ 0x1e86'
p198
aS'eax_6 = 0x1f60'
p199
aS'goto 11 @ 0x1e86'
p200
aS'eax_6 = 0x1f9e'
p201
aS'goto 11 @ 0x1e86'
p202
aS'eax_6 = 0x1f99'
p203
aS'goto 11 @ 0x1e86'
p204
aS"(['push', '    ', 'ebp'], 7760L)"
p205
aS"(['mov', '     ', 'ebp', ', ', 'esp'], 7761L)"
p206
aS"(['push', '    ', 'esi'], 7763L)"
p207
aS"(['push', '    ', 'eax'], 7764L)"
p208
aS"(['call', '    ', '$+5'], 7765L)"
p209
aS"(['pop', '     ', 'esi'], 7770L)"
p210
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'ebp', '+', '0xc', ']'], 7771L)"
p211
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'eax', ']'], 7774L)"
p212
aS"(['mov', '     ', 'dword ', '[', 'esp', ']', ', ', 'eax'], 7776L)"
p213
aS"(['call', '    ', '0x1f30'], 7779L)"
p214
aS"(['cmp', '     ', 'eax', ', ', '0x1f'], 7784L)"
p215
aS"(['ja', '      ', '0x1e96'], 7787L)"
p216
aS"(['lea', '     ', 'eax', ', ', '', '[', 'esi', '+', '0x148', ']'], 7830L)"
p217
aS"(['jmp', '     ', '0x1e86'], 7836L)"
p218
aS"(['mov', '     ', 'eax', ', ', 'dword ', '[', 'esi', '+', 'eax', '*4', '+', '0x56', ']'], 7789L)"
p219
aS"(['add', '     ', 'eax', ', ', 'esi'], 7796L)"
p220
aS"(['jmp', '     ', 'eax'], 7798L)"
p221
aS"(['mov', '     ', 'dword ', '[', 'esp', ']', ', ', 'eax'], 7814L)"
p222
aS"(['call', '    ', '0x1f36'], 7817L)"
p223
aS"(['xor', '     ', 'eax', ', ', 'eax'], 7822L)"
p224
aS"(['add', '     ', 'esp', ', ', '0x4'], 7824L)"
p225
aS"(['pop', '     ', 'esi'], 7827L)"
p226
aS"(['pop', '     ', 'ebp'], 7828L)"
p227
aS"(['retn', '    '], 7829L)"
p228
aS"(['lea', '     ', 'eax', ', ', '', '[', 'esi', '+', '0x126', ']'], 7800L)"
p229
aS"(['jmp', '     ', '0x1e86'], 7806L)"
p230
aS"(['lea', '     ', 'eax', ', ', '', '[', 'esi', '+', '0x106', ']'], 7808L)"
p231
aS"(['lea', '     ', 'eax', ', ', '', '[', 'esi', '+', '0x144', ']'], 7838L)"
p232
aS"(['jmp', '     ', '0x1e86'], 7844L)"
p233
aS"(['lea', '     ', 'eax', ', ', '', '[', 'esi', '+', '0x13f', ']'], 7846L)"
p234
aS"(['jmp', '     ', '0x1e86'], 7852L)"
p235
aS'<block: x86@0x0-0x1>'
p236
aS'<return> tailcall([0x2008].d)'
p237
aS'<block: x86@0x0-0x1>'
p238
aS'return _atoi() __tailcall'
p239
aS"(['jmp', '     ', 'dword ', '[', '0x2008', ']'], 7984L)"
p240
aS'<block: x86@0x0-0x1>'
p241
aS'<return> tailcall([0x200c].d)'
p242
aS'<block: x86@0x0-0x1>'
p243
aS'return _puts() __tailcall'
p244
aS"(['jmp', '     ', 'dword ', '[', '0x200c', ']'], 7990L)"
p245
asS'test_low_il_ssa'
p246
(lp247
S'None'
p248
aS'[]'
p249
ag12
aS'None'
p250
aS'[]'
p251
ag12
aS'None'
p252
aS'[]'
p253
ag12
aS'None'
p254
aS'[]'
p255
ag12
aS'None'
p256
aS'[]'
p257
ag12
aS'None'
p258
aS'[]'
p259
ag12
aS'None'
p260
aS'[]'
p261
ag12
aS'None'
p262
aS'[]'
p263
ag12
aS'None'
p264
aS'[]'
p265
ag12
aS'None'
p266
aS'[]'
p267
ag12
aS'None'
p268
aS'[]'
p269
ag12
aS'None'
p270
aS'[]'
p271
ag12
aS'None'
p272
aS'[]'
p273
ag12
aS'None'
p274
aS'[]'
p275
ag12
aS'None'
p276
aS'[]'
p277
ag12
aS'1'
p278
aS'[6L]'
p279
aS'<stack frame offset -0x4>'
p280
aS'None'
p281
aS'[]'
p282
ag12
aS'None'
p283
aS'[]'
p284
ag12
aS'9'
p285
aS'[]'
p286
ag12
aS'None'
p287
aS'[]'
p288
ag12
aS'None'
p289
aS'[]'
p290
ag12
aS'None'
p291
aS'[]'
p292
ag12
aS'0'
p293
aS'[1L, 2L]'
p294
aS'<stack frame offset -0x4>'
p295
aS'None'
p296
aS'[]'
p297
ag12
aS'None'
p298
aS'[]'
p299
ag12
aS'None'
p300
aS'[]'
p301
ag12
aS'None'
p302
aS'[]'
p303
ag12
aS'None'
p304
aS'[]'
p305
ag12
aS'None'
p306
aS'[]'
p307
ag12
aS'None'
p308
aS'[]'
p309
ag12
aS'None'
p310
aS'[]'
p311
ag12
aS'None'
p312
aS'[]'
p313
ag12
aS'None'
p314
aS'[]'
p315
ag12
aS'None'
p316
aS'[]'
p317
ag12
aS'None'
p318
aS'[]'
p319
ag12
aS'5'
p320
aS'[11L, 13L, 14L, 23L, 25L, 27L, 29L]'
p321
ag12
aS'None'
p322
aS'[]'
p323
ag12
aS'None'
p324
aS'[]'
p325
ag12
aS'None'
p326
aS'[]'
p327
ag12
aS'None'
p328
aS'[]'
p329
ag12
aS'None'
p330
aS'[]'
p331
ag12
aS'None'
p332
aS'[]'
p333
ag12
aS'None'
p334
aS'[]'
p335
ag12
aS'None'
p336
aS'[]'
p337
ag12
aS'None'
p338
aS'[]'
p339
ag12
aS'None'
p340
aS'[]'
p341
ag12
aS'None'
p342
aS'[]'
p343
ag12
aS'6'
p344
aS'[7L]'
p345
ag12
aS'None'
p346
aS'[]'
p347
ag12
aS'None'
p348
aS'[]'
p349
ag12
aS'None'
p350
aS'[]'
p351
ag12
aS'None'
p352
aS'[]'
p353
ag12
aS'None'
p354
aS'[]'
p355
ag12
aS'None'
p356
aS'[]'
p357
ag12
aS'None'
p358
aS'[]'
p359
ag12
aS'None'
p360
aS'[]'
p361
ag12
aS'9'
p362
aS'[]'
p363
ag12
aS'None'
p364
aS'[]'
p365
ag12
aS'None'
p366
aS'[]'
p367
ag12
aS'None'
p368
aS'[]'
p369
ag12
aS'None'
p370
aS'[]'
p371
ag12
aS'None'
p372
aS'[]'
p373
ag12
aS'None'
p374
aS'[]'
p375
ag12
aS'None'
p376
aS'[]'
p377
ag12
aS'None'
p378
aS'[]'
p379
ag12
aS'[]'
p380
ag12
aS'[]'
p381
ag12
aS'[]'
p382
ag12
aS'[]'
p383
ag12
aS'[]'
p384
ag12
aS'[]'
p385
ag12
aS'[]'
p386
ag12
aS'[]'
p387
ag12
aS'[]'
p388
ag12
aS'[]'
p389
ag12
aS'[]'
p390
ag12
aS'0'
p391
aS'0'
p392
aS'0'
p393
aS'0'
p394
aS'1'
p395
aS'2'
p396
aS'None'
p397
aS'2'
p398
aS'2'
p399
aS'3'
p400
aS'0'
p401
aS'3'
p402
aS'3'
p403
aS'5'
p404
aS'0'
p405
aS'5'
p406
aS'4'
p407
aS'7'
p408
aS'1'
p409
aS'7'
p410
aS'5'
p411
aS'9'
p412
aS'1'
p413
aS'9'
p414
aS'6'
p415
aS'11'
p416
aS'1'
p417
aS'11'
p418
aS'7'
p419
aS'12'
p420
aS'2'
p421
aS'12'
p422
aS'8'
p423
aS'13'
p424
aS'3'
p425
aS'13'
p426
aS'9'
p427
aS'14'
p428
aS'4'
p429
aS'14'
p430
aS'10'
p431
aS'15'
p432
aS'5'
p433
aS'15'
p434
aS'11'
p435
aS'16'
p436
aS'6'
p437
aS'16'
p438
aS'12'
p439
aS'17'
p440
aS'7'
p441
aS'17'
p442
aS'13'
p443
aS'18'
p444
aS'8'
p445
aS'18'
p446
aS'14'
p447
aS'19'
p448
aS'9'
p449
aS'19'
p450
aS'15'
p451
aS'20'
p452
aS'10'
p453
aS'20'
p454
aS'16'
p455
aS'22'
p456
aS'11'
p457
aS'21'
p458
aS'17'
p459
aS'23'
p460
aS'12'
p461
aS'22'
p462
aS'18'
p463
aS'24'
p464
aS'13'
p465
aS'23'
p466
aS'19'
p467
aS'25'
p468
aS'None'
p469
aS'24'
p470
aS'20'
p471
aS'26'
p472
aS'None'
p473
aS'25'
p474
aS'21'
p475
aS'28'
p476
aS'None'
p477
aS'27'
p478
aS'22'
p479
aS'30'
p480
aS'14'
p481
aS'29'
p482
aS'23'
p483
aS'31'
p484
aS'15'
p485
aS'30'
p486
aS'24'
p487
aS'32'
p488
aS'16'
p489
aS'31'
p490
aS'25'
p491
aS'33'
p492
aS'17'
p493
aS'32'
p494
aS'26'
p495
aS'34'
p496
aS'18'
p497
aS'33'
p498
aS'27'
p499
aS'35'
p500
aS'19'
p501
aS'34'
p502
aS'28'
p503
aS'36'
p504
aS'20'
p505
aS'35'
p506
aS'29'
p507
aS'37'
p508
aS'21'
p509
aS'36'
p510
aS'30'
p511
aS'38'
p512
aS'22'
p513
aS'37'
p514
aS'None'
p515
aS'[]'
p516
ag12
aS'None'
p517
aS'[]'
p518
ag12
aS'None'
p519
aS'[]'
p520
ag12
aS'None'
p521
aS'[]'
p522
ag12
aS'None'
p523
aS'[]'
p524
ag12
aS'None'
p525
aS'[]'
p526
ag12
aS'None'
p527
aS'[]'
p528
ag12
aS'None'
p529
aS'[]'
p530
ag12
aS'None'
p531
aS'[]'
p532
ag12
aS'None'
p533
aS'[]'
p534
ag12
aS'None'
p535
aS'[]'
p536
ag12
aS'None'
p537
aS'[]'
p538
ag12
aS'None'
p539
aS'[]'
p540
ag12
aS'None'
p541
aS'[]'
p542
ag12
aS'None'
p543
aS'[]'
p544
ag12
aS'None'
p545
aS'[]'
p546
ag12
aS'None'
p547
aS'[]'
p548
ag12
aS'None'
p549
aS'[]'
p550
ag12
aS'0'
p551
aS'[]'
p552
ag12
aS'None'
p553
aS'[]'
p554
ag12
aS'None'
p555
aS'[]'
p556
ag12
aS'None'
p557
aS'[]'
p558
ag12
aS'None'
p559
aS'[]'
p560
ag12
aS'None'
p561
aS'[]'
p562
ag12
aS'None'
p563
aS'[]'
p564
ag12
aS'None'
p565
aS'[]'
p566
ag12
aS'None'
p567
aS'[]'
p568
ag12
aS'None'
p569
aS'[]'
p570
ag12
aS'None'
p571
aS'[]'
p572
ag12
aS'None'
p573
aS'[]'
p574
ag12
aS'None'
p575
aS'[]'
p576
ag12
aS'None'
p577
aS'[]'
p578
ag12
aS'None'
p579
aS'[]'
p580
ag12
aS'None'
p581
aS'[]'
p582
ag12
aS'None'
p583
aS'[]'
p584
ag12
aS'None'
p585
aS'[]'
p586
ag12
aS'None'
p587
aS'[]'
p588
ag12
aS'None'
p589
aS'[]'
p590
ag12
aS'None'
p591
aS'[]'
p592
ag12
aS'None'
p593
aS'[]'
p594
ag12
aS'None'
p595
aS'[]'
p596
ag12
aS'None'
p597
aS'[]'
p598
ag12
aS'None'
p599
aS'[]'
p600
ag12
aS'None'
p601
aS'[]'
p602
ag12
aS'None'
p603
aS'[]'
p604
ag12
aS'None'
p605
aS'[]'
p606
ag12
aS'None'
p607
aS'[]'
p608
ag12
aS'0'
p609
aS'[]'
p610
ag12
aS'None'
p611
aS'[]'
p612
ag12
aS'None'
p613
aS'[]'
p614
ag12
aS'None'
p615
aS'[]'
p616
ag12
aS'None'
p617
aS'[]'
p618
ag12
aS'None'
p619
aS'[]'
p620
ag12
aS'None'
p621
aS'[]'
p622
ag12
aS'None'
p623
aS'[]'
p624
ag12
aS'None'
p625
aS'[]'
p626
ag12
aS'0'
p627
aS'[]'
p628
ag12
aS'None'
p629
aS'[]'
p630
ag12
aS'None'
p631
aS'[]'
p632
ag12
aS'None'
p633
aS'[]'
p634
ag12
aS'None'
p635
aS'[]'
p636
ag12
aS'None'
p637
aS'[]'
p638
ag12
aS'None'
p639
aS'[]'
p640
ag12
aS'None'
p641
aS'[]'
p642
ag12
aS'None'
p643
aS'[]'
p644
ag12
aS'[]'
p645
ag12
aS'[]'
p646
ag12
aS'[]'
p647
ag12
aS'[]'
p648
ag12
aS'[]'
p649
ag12
aS'[]'
p650
ag12
aS'[]'
p651
ag12
aS'[]'
p652
ag12
aS'[]'
p653
ag12
aS'[]'
p654
ag12
aS'[]'
p655
ag12
aS'0'
p656
aS'0'
p657
aS'0'
p658
aS'0'
p659
aS'None'
p660
aS'[]'
p661
ag12
aS'None'
p662
aS'[]'
p663
ag12
aS'None'
p664
aS'[]'
p665
ag12
aS'None'
p666
aS'[]'
p667
ag12
aS'None'
p668
aS'[]'
p669
ag12
aS'None'
p670
aS'[]'
p671
ag12
aS'None'
p672
aS'[]'
p673
ag12
aS'None'
p674
aS'[]'
p675
ag12
aS'None'
p676
aS'[]'
p677
ag12
aS'None'
p678
aS'[]'
p679
ag12
aS'None'
p680
aS'[]'
p681
ag12
aS'None'
p682
aS'[]'
p683
ag12
aS'None'
p684
aS'[]'
p685
ag12
aS'None'
p686
aS'[]'
p687
ag12
aS'None'
p688
aS'[]'
p689
ag12
aS'None'
p690
aS'[]'
p691
ag12
aS'None'
p692
aS'[]'
p693
ag12
aS'None'
p694
aS'[]'
p695
ag12
aS'0'
p696
aS'[]'
p697
ag12
aS'None'
p698
aS'[]'
p699
ag12
aS'None'
p700
aS'[]'
p701
ag12
aS'None'
p702
aS'[]'
p703
ag12
aS'None'
p704
aS'[]'
p705
ag12
aS'None'
p706
aS'[]'
p707
ag12
aS'None'
p708
aS'[]'
p709
ag12
aS'None'
p710
aS'[]'
p711
ag12
aS'None'
p712
aS'[]'
p713
ag12
aS'None'
p714
aS'[]'
p715
ag12
aS'None'
p716
aS'[]'
p717
ag12
aS'None'
p718
aS'[]'
p719
ag12
aS'None'
p720
aS'[]'
p721
ag12
aS'None'
p722
aS'[]'
p723
ag12
aS'None'
p724
aS'[]'
p725
ag12
aS'None'
p726
aS'[]'
p727
ag12
aS'None'
p728
aS'[]'
p729
ag12
aS'None'
p730
aS'[]'
p731
ag12
aS'None'
p732
aS'[]'
p733
ag12
aS'None'
p734
aS'[]'
p735
ag12
aS'None'
p736
aS'[]'
p737
ag12
aS'None'
p738
aS'[]'
p739
ag12
aS'None'
p740
aS'[]'
p741
ag12
aS'None'
p742
aS'[]'
p743
ag12
aS'None'
p744
aS'[]'
p745
ag12
aS'None'
p746
aS'[]'
p747
ag12
aS'None'
p748
aS'[]'
p749
ag12
aS'None'
p750
aS'[]'
p751
ag12
aS'None'
p752
aS'[]'
p753
ag12
aS'0'
p754
aS'[]'
p755
ag12
aS'None'
p756
aS'[]'
p757
ag12
aS'None'
p758
aS'[]'
p759
ag12
aS'None'
p760
aS'[]'
p761
ag12
aS'None'
p762
aS'[]'
p763
ag12
aS'None'
p764
aS'[]'
p765
ag12
aS'None'
p766
aS'[]'
p767
ag12
aS'None'
p768
aS'[]'
p769
ag12
aS'None'
p770
aS'[]'
p771
ag12
aS'0'
p772
aS'[]'
p773
ag12
aS'None'
p774
aS'[]'
p775
ag12
aS'None'
p776
aS'[]'
p777
ag12
aS'None'
p778
aS'[]'
p779
ag12
aS'None'
p780
aS'[]'
p781
ag12
aS'None'
p782
aS'[]'
p783
ag12
aS'None'
p784
aS'[]'
p785
ag12
aS'None'
p786
aS'[]'
p787
ag12
aS'None'
p788
aS'[]'
p789
ag12
aS'[]'
p790
ag12
aS'[]'
p791
ag12
aS'[]'
p792
ag12
aS'[]'
p793
ag12
aS'[]'
p794
ag12
aS'[]'
p795
ag12
aS'[]'
p796
ag12
aS'[]'
p797
ag12
aS'[]'
p798
ag12
aS'[]'
p799
ag12
aS'[]'
p800
ag12
aS'0'
p801
aS'0'
p802
aS'0'
p803
aS'0'
p804
asS'test_med_il_instructions'
p805
(lp806
S'None'
p807
aS'[esp#2 - 4].d = eax#0 @ mem#2 -> mem#3'
p808
ag12
aS'<undetermined>'
p809
aS'{}'
p810
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_c']"
p811
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax', 'var_c']"
p812
aS'var_c#1 = eax#0'
p813
aS'var_c = eax'
p814
aS'None'
p815
aS'eax#1 = [ebp#1 + 0xc].d @ mem#4'
p816
ag12
ag809
aS'{}'
p817
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'arg1', 'eax_1']"
p818
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'arg1', 'eax_1']"
p819
aS'eax_1#1 = arg1#0'
p820
aS'eax_1 = arg1'
p821
aS'None'
p822
aS'eax#2 = [eax#1].d @ mem#4'
p823
ag12
ag809
aS'{}'
p824
aS"['<MLIL_LOAD 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'eax_2']"
p825
aS"['<MLIL_LOAD 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_1', 'eax_2']"
p826
aS'eax_2#2 = [eax_1#1].d @ mem#0'
p827
aS'eax_2 = [eax_1].d'
p828
aS'None'
p829
aS'[esp#5].d = eax#2 @ mem#4 -> mem#5'
p830
ag12
ag809
aS'{}'
p831
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_2', 'var_c_1']"
p832
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_2', 'var_c_1']"
p833
aS'var_c_1#2 = eax_2#2'
p834
aS'var_c_1 = eax_2'
p835
aS'None'
p836
aS'eax#3, ecx#1, edx#1, mem#6 = call(0x1f30, stack = esp#5 @ mem#5)'
p837
ag12
ag809
aS'{}'
p838
aS"['7984', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_c_1>]', '[<var int32_t eax_3>]']"
p839
aS"['7984', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_c_1>]', '[<var int32_t eax_3>]']"
p840
aS'eax_3#3, mem#1 = 0x1f30(var_c_1#2) @ mem#0'
p841
aS'eax_3 = 0x1f30(var_c_1)'
p842
aS'None'
p843
aS'if (eax#3 u> 0x1f) then 16 @ 0x1e96 else 18 @ 0x1e6d'
p844
ag12
ag809
aS'{}'
p845
aS"['31', '6', '8', '<MLIL_CMP_UGT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_3']"
p846
aS"['31', '6', '8', '<MLIL_CMP_UGT 4>', '<MLIL_CONST 4>', '<MLIL_IF>', '<MLIL_VAR 4>', 'eax_3']"
p847
aS'if (eax_3#3 u> 0x1f) then 6 @ 0x1e96 else 8 @ 0x1e6d'
p848
aS'if (eax_3 u> 0x1f) then 6 @ 0x1e96 else 8 @ 0x1e6d'
p849
aS'None'
p850
aS'eax#4 = esi#1 + 0x148'
p851
ag12
ag809
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p852
aS"['8098', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'eax_6']"
p853
aS"['8098', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'eax_6']"
p854
aS'eax_6#4 = 0x1fa2'
p855
aS'eax_6 = 0x1fa2'
p856
aS'None'
p857
aS'goto 21 @ 0x1e86'
p858
ag12
ag809
aS'{5L: <ILBranchDependence.TrueBranchDependent: 1>}'
p859
aS"['11', '<MLIL_GOTO>']"
p860
aS"['11', '<MLIL_GOTO>']"
p861
aS'goto 11 @ 0x1e86'
p862
aS'goto 11 @ 0x1e86'
p863
aS'None'
p864
aS'eax#5 = [esi#1 + (eax#3 << 2) + 0x56].d @ mem#6'
p865
ag12
ag809
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p866
aS"['2', '7770', '86', '<MLIL_ADD 4>', '<MLIL_ADD 4>', '<MLIL_CONST 1>', '<MLIL_CONST 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_LSL 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_3', 'eax_4']"
p867
aS"['2', '7770', '86', '<MLIL_ADD 4>', '<MLIL_ADD 4>', '<MLIL_CONST 1>', '<MLIL_CONST 4>', '<MLIL_CONST_PTR 4>', '<MLIL_LOAD 4>', '<MLIL_LSL 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_3', 'eax_4']"
p868
aS'eax_4#5 = [0x1e5a + (eax_3#3 << 2) + 0x56].d @ mem#1'
p869
aS'eax_4 = [0x1e5a + (eax_3 << 2) + 0x56].d'
p870
aS'None'
p871
aS'eax#6 = eax#5 + esi#1'
p872
ag12
ag809
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p873
aS"['7770', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_4', 'eax_5']"
p874
aS"['7770', '<MLIL_ADD 4>', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_4', 'eax_5']"
p875
aS'eax_5#6 = eax_4#5 + 0x1e5a'
p876
aS'eax_5 = eax_4 + 0x1e5a'
p877
aS'None'
p878
aS'jump(eax#6 => 31 @ 0x1e78, 33 @ 0x1e80, 35 @ 0x1e9e, 37 @ 0x1ea6)'
p879
ag12
ag809
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p880
aS"['<MLIL_JUMP_TO>', '<MLIL_VAR 4>', '[15L, 17L, 19L, 21L]', 'eax_5']"
p881
aS"['<MLIL_JUMP_TO>', '<MLIL_VAR 4>', '[15L, 17L, 19L, 21L]', 'eax_5']"
p882
aS'jump(eax_5#6 => 16 @ 0x1e78, 18 @ 0x1e80, 20 @ 0x1e9e, 22 @ 0x1ea6)'
p883
aS'jump(eax_5 => 15 @ 0x1e78, 17 @ 0x1e80, 19 @ 0x1e9e, 21 @ 0x1ea6)'
p884
aS'None'
p885
aS'[esp#5].d = eax#11 @ mem#6 -> mem#7'
p886
ag12
ag809
aS'{}'
p887
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_6', 'var_c_2']"
p888
aS"['<MLIL_SET_VAR 4>', '<MLIL_VAR 4>', 'eax_6', 'var_c_2']"
p889
aS'var_c_2#3 = eax_6#11'
p890
aS'var_c_2 = eax_6'
p891
aS'None'
p892
aS'eax#12, ecx#2, edx#2, mem#8 = call(0x1f36, stack = esp#5 @ mem#7)'
p893
ag12
ag809
aS'{}'
p894
aS"['7990', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_c_2>]', '[]']"
p895
aS"['7990', '<MLIL_CALL>', '<MLIL_CONST_PTR 4>', '[<il: var_c_2>]', '[]']"
p896
aS'mem#2 = 0x1f36(var_c_2#3) @ mem#1'
p897
aS'0x1f36(var_c_2)'
p898
aS'None'
p899
aS'eax#13 = 0'
p900
ag12
ag809
aS'{}'
p901
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax_7']"
p902
aS"['0', '<MLIL_CONST 4>', '<MLIL_SET_VAR 4>', 'eax_7']"
p903
aS'eax_7#12 = 0'
p904
aS'eax_7 = 0'
p905
aS'None'
p906
aS'<return> jump([esp#8].d @ mem#8)'
p907
ag12
ag809
aS'{}'
p908
aS"['<MLIL_RET>', '[<il: 0>]']"
p909
aS"['<MLIL_RET>', '[<il: 0>]']"
p910
aS'return 0'
p911
aS'return 0'
p912
aS'None'
p913
aS'eax#7 = esi#1 + 0x126'
p914
ag12
ag809
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p915
aS"['8064', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'eax_6']"
p916
aS"['8064', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'eax_6']"
p917
aS'eax_6#7 = 0x1f80'
p918
aS'eax_6 = 0x1f80'
p919
aS'None'
p920
aS'goto 21 @ 0x1e86'
p921
ag12
ag809
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p922
aS"['11', '<MLIL_GOTO>']"
p923
aS"['11', '<MLIL_GOTO>']"
p924
aS'goto 11 @ 0x1e86'
p925
aS'goto 11 @ 0x1e86'
p926
aS'None'
p927
aS'eax#8 = esi#1 + 0x106'
p928
ag12
ag809
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p929
aS"['8032', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'eax_6']"
p930
aS"['8032', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'eax_6']"
p931
aS'eax_6#8 = 0x1f60'
p932
aS'eax_6 = 0x1f60'
p933
aS'None'
p934
aS'goto 21 @ 0x1e86'
p935
ag12
ag809
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p936
aS"['11', '<MLIL_GOTO>']"
p937
aS"['11', '<MLIL_GOTO>']"
p938
aS'goto 11 @ 0x1e86'
p939
aS'goto 11 @ 0x1e86'
p940
aS'None'
p941
aS'eax#9 = esi#1 + 0x144'
p942
ag12
ag809
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p943
aS"['8094', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'eax_6']"
p944
aS"['8094', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'eax_6']"
p945
aS'eax_6#9 = 0x1f9e'
p946
aS'eax_6 = 0x1f9e'
p947
aS'None'
p948
aS'goto 21 @ 0x1e86'
p949
ag12
ag809
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p950
aS"['11', '<MLIL_GOTO>']"
p951
aS"['11', '<MLIL_GOTO>']"
p952
aS'goto 11 @ 0x1e86'
p953
aS'goto 11 @ 0x1e86'
p954
aS'None'
p955
aS'eax#10 = esi#1 + 0x13f'
p956
ag12
ag809
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p957
aS"['8089', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'eax_6']"
p958
aS"['8089', '<MLIL_CONST_PTR 4>', '<MLIL_SET_VAR 4>', 'eax_6']"
p959
aS'eax_6#10 = 0x1f99'
p960
aS'eax_6 = 0x1f99'
p961
aS'None'
p962
aS'goto 21 @ 0x1e86'
p963
ag12
ag809
aS'{5L: <ILBranchDependence.FalseBranchDependent: 2>}'
p964
aS"['11', '<MLIL_GOTO>']"
p965
aS"['11', '<MLIL_GOTO>']"
p966
aS'goto 11 @ 0x1e86'
p967
aS'goto 11 @ 0x1e86'
p968
aS'None'
p969
aS'eax#1, edx#1, ecx#1, mem#1 = <return> tailcall([0x2008].d @ mem#0, stack = esp#0 @ mem#0)'
p970
ag12
ag809
aS'{}'
p971
aS"['8200', '<MLIL_IMPORT 4>', '<MLIL_TAILCALL>', '[<var int32_t eax>, <var int32_t edx>, <var int32_t ecx>]', '[]']"
p972
aS"['8200', '<MLIL_IMPORT 4>', '<MLIL_TAILCALL>', '[<var int32_t eax>, <var int32_t edx>, <var int32_t ecx>]', '[]']"
p973
aS'return _atoi() __tailcall'
p974
aS'return _atoi() __tailcall'
p975
aS'None'
p976
aS'eax#1, edx#1, ecx#1, mem#1 = <return> tailcall([0x200c].d @ mem#0, stack = esp#0 @ mem#0)'
p977
ag12
ag809
aS'{}'
p978
aS"['8204', '<MLIL_IMPORT 4>', '<MLIL_TAILCALL>', '[<var int32_t eax>, <var int32_t edx>, <var int32_t ecx>]', '[]']"
p979
aS"['8204', '<MLIL_IMPORT 4>', '<MLIL_TAILCALL>', '[<var int32_t eax>, <var int32_t edx>, <var int32_t ecx>]', '[]']"
p980
aS'return _puts() __tailcall'
p981
aS'return _puts() __tailcall'
p982
asS'test_function_symbol_names'
p983
(lp984
S'_main SymbolType.FunctionSymbol 0x1e50L'
p985
aS'_atoi SymbolType.ImportedFunctionSymbol 0x1f30L'
p986
aS'_puts SymbolType.ImportedFunctionSymbol 0x1f36L'
p987
asS'test_BinaryView'
p988
(lp989
S'void*'
p990
aS'[<segment: 0x1000-0x2000, r-x>, <segment: 0x2000-0x3000, rw->, <segment: 0x3000-0x4000, r-->]'
p991
aS"{'__stub_helper': <section __stub_helper: 0x1f3c-0x1f5c>, '__unwind_info': <section __unwind_info: 0x1fb4-0x1ffc>, '__la_symbol_ptr': <section __la_symbol_ptr: 0x2008-0x2010>, '__nl_symbol_ptr': <section __nl_symbol_ptr: 0x2000-0x2008>, '__text': <section __text: 0x1e50-0x1f30>, '__symbol_stub': <section __symbol_stub: 0x1f30-0x1f3c>, '__cstring': <section __cstring: 0x1f60-0x1fb1>}"
p992
aS'[<0x1000-0x4000>]'
p993
aS'{}'
p994
aS'8064'
p995
aS'7984'
p996
aS'8098'
p997
aS'8192'
p998
aS'8200'
p999
aS'8204'
p1000
aS'8032'
p1001
aS'7856'
p1002
aS'7990'
p1003
aS'8089'
p1004
aS'7770'
p1005
aS'8094'
p1006
aS'<func: x86@0x1e50>'
p1007
aS'<func: x86@0x1e50>'
p1008
aS'<func: x86@0x1f30>'
p1009
aS'<func: x86@0x1f36>'
p1010
aS'0x1e50L'
p1011
aS'0x1000L'
p1012
aS'length: 0x3000'
p1013
asS'test_available_types'
p1014
(lp1015
S'Raw'
p1016
aS'Mach-O'
p1017
asS'test_function_basic_blocks'
p1018
(lp1019
S'0x1e50L 0x1e6dL False'
p1020
aS'0x1e96L 0x1e9eL False'
p1021
aS'0x1e6dL 0x1e78L False'
p1022
aS'0x1e86L 0x1e96L True'
p1023
aS'0x1e78L 0x1e80L False'
p1024
aS'0x1e80L 0x1e86L False'
p1025
aS'0x1e9eL 0x1ea6L False'
p1026
aS'0x1ea6L 0x1eaeL False'
p1027
aS'0x1f30L 0x1f36L True'
p1028
aS'0x1f36L 0x1f3cL True'
p1029
asS'test_function_med_il_basic_blocks'
p1030
(lp1031
S'0x0L 0x6L 2'
p1032
aS'0x6L 0x8L 1'
p1033
aS'0x8L 0xbL 4'
p1034
aS'0xbL 0xfL 0'
p1035
aS'0xfL 0x11L 1'
p1036
aS'0x11L 0x13L 1'
p1037
aS'0x13L 0x15L 1'
p1038
aS'0x15L 0x17L 1'
p1039
aS'0x0L 0x1L 0'
p1040
aS'0x0L 0x1L 0'
p1041
asS'test_symbols'
p1042
(lp1043
S'_atoi'
p1044
aS'_atoi@PLT'
p1045
aS'_main'
p1046
aS'_puts'
p1047
aS'_puts@PLT'
p1048
aS'dyld_stub_binder'
p1049
aS'jump_table_1eb0'
p1050
asS'test_low_il_instructions'
p1051
(lp1052
S'None'
p1053
aS'__saved_ebp = ebp'
p1054
ag12
ag809
aS'[<LLIL_PUSH 4>, <LLIL_REG 4>, ebp]'
p1055
aS'[ebp, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p1056
aS'[esp#0 - 4].d = ebp#0 @ mem#0 -> mem#1'
p1057
aS'push(ebp)'
p1058
aS'None'
p1059
aS'ebp = &__saved_ebp'
p1060
ag12
ag809
aS'[<LLIL_SET_REG 4>, ebp, <LLIL_REG 4>, esp]'
p1061
aS'[ebp, esp, <LLIL_REG 4>, <LLIL_SET_REG 4>]'
p1062
aS'ebp#1 = esp#1'
p1063
aS'ebp = esp'
p1064
aS'None'
p1065
aS'__saved_esi = esi'
p1066
ag12
ag809
aS'[<LLIL_PUSH 4>, <LLIL_REG 4>, esi]'
p1067
aS'[esi, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p1068
aS'[esp#1 - 4].d = esi#0 @ mem#1 -> mem#2'
p1069
aS'push(esi)'
p1070
aS'var_c = eax'
p1071
aS'var_c = eax'
p1072
ag12
ag809
aS'[<LLIL_PUSH 4>, <LLIL_REG 4>, eax]'
p1073
aS'[eax, <LLIL_REG 4>, <LLIL_PUSH 4>]'
p1074
aS'[esp#2 - 4].d = eax#0 @ mem#2 -> mem#3'
p1075
aS'push(eax)'
p1076
aS'None'
p1077
aS'var_10 = 0x1e5a'
p1078
ag12
ag809
aS'[<LLIL_PUSH 4>, <LLIL_CONST_PTR 4>, 7770L]'
p1079
aS'[7770L, <LLIL_CONST_PTR 4>, <LLIL_PUSH 4>]'
p1080
aS'[esp#3 - 4].d = 0x1e5a @ mem#3 -> mem#4'
p1081
aS'push(0x1e5a)'
p1082
aS'None'
p1083
aS'esi = var_10'
p1084
ag12
ag809
aS'[<LLIL_SET_REG 4>, esi, <LLIL_POP 4>]'
p1085
aS'[esi, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p1086
aS'esi#1 = [esp#4].d @ mem#4'
p1087
aS'esi = pop'
p1088
aS'eax_1 = arg1'
p1089
aS'eax = arg1'
p1090
ag12
ag809
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, ebp, <LLIL_CONST 4>, 12L]'
p1091
aS'[eax, ebp, <LLIL_REG 4>, 12L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p1092
aS'eax#1 = [ebp#1 + 0xc].d @ mem#4'
p1093
aS'eax = [ebp + 0xc].d'
p1094
aS'eax_2 = [eax_1].d'
p1095
aS'eax = [eax].d'
p1096
ag12
ag809
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_REG 4>, eax]'
p1097
aS'[eax, eax, <LLIL_REG 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p1098
aS'eax#2 = [eax#1].d @ mem#4'
p1099
aS'eax = [eax].d'
p1100
aS'var_c_1 = eax_2'
p1101
aS'var_c = eax'
p1102
ag12
ag809
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_REG 4>, eax]'
p1103
aS'[esp, <LLIL_REG 4>, eax, <LLIL_REG 4>, <LLIL_STORE 4>]'
p1104
aS'[esp#5].d = eax#2 @ mem#4 -> mem#5'
p1105
aS'[esp].d = eax'
p1106
aS'eax_3 = 0x1f30(var_c_1)'
p1107
aS'eax, ecx, edx = call(0x1f30, stack = &var_c)'
p1108
ag12
ag809
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 7984L, 0L, {}]'
p1109
aS'[7984L, <LLIL_CONST_PTR 4>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1110
aS'eax#3, ecx#1, edx#1, mem#6 = call(0x1f30, stack = esp#5 @ mem#5)'
p1111
aS'call(0x1f30)'
p1112
aS'None'
p1113
aS'if (eax u> 0x1f) then 16 @ 0x1e96 else 18 @ 0x1e6d'
p1114
ag12
ag809
aS'[<LLIL_IF>, <LLIL_CMP_UGT 4>, <LLIL_REG 4>, eax, <LLIL_CONST 4>, 31L, 11L, 13L]'
p1115
aS'[eax, <LLIL_REG 4>, 31L, <LLIL_CONST 4>, <LLIL_CMP_UGT 4>, 11L, 13L, <LLIL_IF>]'
p1116
aS'if (eax#3 u> 0x1f) then 16 @ 0x1e96 else 18 @ 0x1e6d'
p1117
aS'if (eax u> 0x1f) then 11 @ 0x1e96 else 13 @ 0x1e6d'
p1118
aS'eax_6 = 0x1fa2'
p1119
aS'eax = esi + 0x148'
p1120
ag12
ag809
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, esi, <LLIL_CONST 4>, 328L]'
p1121
aS'[eax, esi, <LLIL_REG 4>, 328L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1122
aS'eax#4 = esi#1 + 0x148'
p1123
aS'eax = esi + 0x148'
p1124
aS'None'
p1125
aS'goto 21 @ 0x1e86'
p1126
ag12
ag809
aS'[<LLIL_GOTO>, 16L]'
p1127
aS'[16L, <LLIL_GOTO>]'
p1128
aS'goto 21 @ 0x1e86'
p1129
aS'goto 16 @ 0x1e86'
p1130
aS'eax_4 = [0x1e5a + (eax_3 << 2) + 0x56].d'
p1131
aS'eax = [esi + (eax << 2) + 0x56].d'
p1132
ag12
ag809
aS'[<LLIL_SET_REG 4>, eax, <LLIL_LOAD 4>, <LLIL_ADD 4>, <LLIL_ADD 4>, <LLIL_REG 4>, esi, <LLIL_LSL 4>, <LLIL_REG 4>, eax, <LLIL_CONST 1>, 2L, <LLIL_CONST 4>, 86L]'
p1133
aS'[eax, esi, <LLIL_REG 4>, eax, <LLIL_REG 4>, 2L, <LLIL_CONST 1>, <LLIL_LSL 4>, <LLIL_ADD 4>, 86L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_LOAD 4>, <LLIL_SET_REG 4>]'
p1134
aS'eax#5 = [esi#1 + (eax#3 << 2) + 0x56].d @ mem#6'
p1135
aS'eax = [esi + (eax << 2) + 0x56].d'
p1136
aS'eax_5 = eax_4 + 0x1e5a'
p1137
aS'eax = eax + esi'
p1138
ag12
ag809
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, eax, <LLIL_REG 4>, esi]'
p1139
aS'[eax, eax, <LLIL_REG 4>, esi, <LLIL_REG 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1140
aS'eax#6 = eax#5 + esi#1'
p1141
aS'eax = eax + esi'
p1142
aS'None'
p1143
aS'jump(eax => 30 @ 0x1e78, 32 @ 0x1e80, 34 @ 0x1e9e, 36 @ 0x1ea6)'
p1144
ag12
ag809
aS'[<LLIL_JUMP_TO>, <LLIL_REG 4>, eax, [23L, 25L, 27L, 29L]]'
p1145
aS'[eax, <LLIL_REG 4>, [23L, 25L, 27L, 29L], <LLIL_JUMP_TO>]'
p1146
aS'jump(eax#6 => 31 @ 0x1e78, 33 @ 0x1e80, 35 @ 0x1e9e, 37 @ 0x1ea6)'
p1147
aS'jump(eax => 23 @ 0x1e78, 25 @ 0x1e80, 27 @ 0x1e9e, 29 @ 0x1ea6)'
p1148
aS'var_c_2 = eax_6'
p1149
aS'var_c = eax'
p1150
ag12
ag809
aS'[<LLIL_STORE 4>, <LLIL_REG 4>, esp, <LLIL_REG 4>, eax]'
p1151
aS'[esp, <LLIL_REG 4>, eax, <LLIL_REG 4>, <LLIL_STORE 4>]'
p1152
aS'[esp#5].d = eax#11 @ mem#6 -> mem#7'
p1153
aS'[esp].d = eax'
p1154
aS'0x1f36(var_c_2)'
p1155
aS'eax, ecx, edx = call(0x1f36, stack = &var_c)'
p1156
ag12
ag809
aS'[<LLIL_CALL_STACK_ADJUST>, <LLIL_CONST_PTR 4>, 7990L, 0L, {}]'
p1157
aS'[7990L, <LLIL_CONST_PTR 4>, 0L, {}, <LLIL_CALL_STACK_ADJUST>]'
p1158
aS'eax#12, ecx#2, edx#2, mem#8 = call(0x1f36, stack = esp#5 @ mem#7)'
p1159
aS'call(0x1f36)'
p1160
aS'eax_7 = 0'
p1161
aS'eax = 0'
p1162
ag12
ag809
aS'[<LLIL_SET_REG 4>, eax, <LLIL_CONST 4>, 0L]'
p1163
aS'[eax, 0L, <LLIL_CONST 4>, <LLIL_SET_REG 4>]'
p1164
aS'eax#13 = 0'
p1165
aS'eax = 0'
p1166
aS'None'
p1167
aS'esp = &__saved_esi'
p1168
ag12
ag809
aS'[<LLIL_SET_REG 4>, esp, <LLIL_ADD 4>, <LLIL_REG 4>, esp, <LLIL_CONST 4>, 4L]'
p1169
aS'[esp, esp, <LLIL_REG 4>, 4L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1170
aS'esp#6 = esp#5 + 4'
p1171
aS'esp = esp + 4'
p1172
aS'None'
p1173
aS'esi = __saved_esi'
p1174
ag12
ag809
aS'[<LLIL_SET_REG 4>, esi, <LLIL_POP 4>]'
p1175
aS'[esi, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p1176
aS'esi#2 = [esp#6].d @ mem#8'
p1177
aS'esi = pop'
p1178
aS'None'
p1179
aS'ebp = __saved_ebp'
p1180
ag12
ag809
aS'[<LLIL_SET_REG 4>, ebp, <LLIL_POP 4>]'
p1181
aS'[ebp, <LLIL_POP 4>, <LLIL_SET_REG 4>]'
p1182
aS'ebp#2 = [esp#7].d @ mem#8'
p1183
aS'ebp = pop'
p1184
aS'None'
p1185
aS'return '
p1186
ag12
ag809
aS'[<LLIL_RET>, <LLIL_POP 4>]'
p1187
aS'[<LLIL_POP 4>, <LLIL_RET>]'
p1188
aS'<return> jump([esp#8].d @ mem#8)'
p1189
aS'<return> jump(pop)'
p1190
aS'eax_6 = 0x1f80'
p1191
aS'eax = esi + 0x126'
p1192
ag12
ag809
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, esi, <LLIL_CONST 4>, 294L]'
p1193
aS'[eax, esi, <LLIL_REG 4>, 294L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1194
aS'eax#7 = esi#1 + 0x126'
p1195
aS'eax = esi + 0x126'
p1196
aS'None'
p1197
aS'goto 21 @ 0x1e86'
p1198
ag12
ag809
aS'[<LLIL_GOTO>, 16L]'
p1199
aS'[16L, <LLIL_GOTO>]'
p1200
aS'goto 21 @ 0x1e86'
p1201
aS'goto 16 @ 0x1e86'
p1202
aS'eax_6 = 0x1f60'
p1203
aS'eax = esi + 0x106'
p1204
ag12
ag809
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, esi, <LLIL_CONST 4>, 262L]'
p1205
aS'[eax, esi, <LLIL_REG 4>, 262L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1206
aS'eax#8 = esi#1 + 0x106'
p1207
aS'eax = esi + 0x106'
p1208
aS'None'
p1209
aS'goto 21 @ 0x1e86'
p1210
ag12
ag809
aS'[<LLIL_GOTO>, 16L]'
p1211
aS'[16L, <LLIL_GOTO>]'
p1212
aS'goto 21 @ 0x1e86'
p1213
aS'goto 16 @ 0x1e86'
p1214
aS'eax_6 = 0x1f9e'
p1215
aS'eax = esi + 0x144'
p1216
ag12
ag809
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, esi, <LLIL_CONST 4>, 324L]'
p1217
aS'[eax, esi, <LLIL_REG 4>, 324L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1218
aS'eax#9 = esi#1 + 0x144'
p1219
aS'eax = esi + 0x144'
p1220
aS'None'
p1221
aS'goto 21 @ 0x1e86'
p1222
ag12
ag809
aS'[<LLIL_GOTO>, 16L]'
p1223
aS'[16L, <LLIL_GOTO>]'
p1224
aS'goto 21 @ 0x1e86'
p1225
aS'goto 16 @ 0x1e86'
p1226
aS'eax_6 = 0x1f99'
p1227
aS'eax = esi + 0x13f'
p1228
ag12
ag809
aS'[<LLIL_SET_REG 4>, eax, <LLIL_ADD 4>, <LLIL_REG 4>, esi, <LLIL_CONST 4>, 319L]'
p1229
aS'[eax, esi, <LLIL_REG 4>, 319L, <LLIL_CONST 4>, <LLIL_ADD 4>, <LLIL_SET_REG 4>]'
p1230
aS'eax#10 = esi#1 + 0x13f'
p1231
aS'eax = esi + 0x13f'
p1232
aS'None'
p1233
aS'goto 21 @ 0x1e86'
p1234
ag12
ag809
aS'[<LLIL_GOTO>, 16L]'
p1235
aS'[16L, <LLIL_GOTO>]'
p1236
aS'goto 21 @ 0x1e86'
p1237
aS'goto 16 @ 0x1e86'
p1238
aS'return _atoi() __tailcall'
p1239
aS'eax, edx, ecx = tailcall(_atoi, stack = &arg_0)'
p1240
ag12
ag809
aS'[<LLIL_TAILCALL>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8200L]'
p1241
aS'[8200L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, <LLIL_TAILCALL>]'
p1242
aS'eax#1, edx#1, ecx#1, mem#1 = <return> tailcall([0x2008].d @ mem#0, stack = esp#0 @ mem#0)'
p1243
aS'<return> tailcall([0x2008].d)'
p1244
aS'return _puts() __tailcall'
p1245
aS'eax, edx, ecx = tailcall(_puts, stack = &arg_0)'
p1246
ag12
ag809
aS'[<LLIL_TAILCALL>, <LLIL_LOAD 4>, <LLIL_CONST_PTR 4>, 8204L]'
p1247
aS'[8204L, <LLIL_CONST_PTR 4>, <LLIL_LOAD 4>, <LLIL_TAILCALL>]'
p1248
aS'eax#1, edx#1, ecx#1, mem#1 = <return> tailcall([0x200c].d @ mem#0, stack = esp#0 @ mem#0)'
p1249
aS'<return> tailcall([0x200c].d)'
p1250
asS'test_med_il_vars'
p1251
(lp1252
S'None [0L] <entry eax> <entry eax> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_c#1 = eax#0>>'
p1253
aS'0 [] <entry eax> <entry eax> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_c#1 = eax#0>>'
p1254
aS'None [1L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#1 = arg1#0>>'
p1255
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_1#1 = arg1#0>>'
p1256
aS'1 [2L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#2 = [eax_1#1].d @ mem#0>>'
p1257
aS'2 [3L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_2#2 = [eax_1#1].d @ mem#0>>'
p1258
aS'2 [3L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_c_1#2 = eax_2#2>>'
p1259
aS'3 [4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_c_1#2 = eax_2#2>>'
p1260
aS'3 [4L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_3#3, mem#1 = 0x1f30(var_c_1#2) @ mem#0>>'
p1261
aS'4 [5L, 8L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_3#3, mem#1 = 0x1f30(var_c_1#2) @ mem#0>>'
p1262
aS'4 [5L, 8L] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: if (eax_3#3 u> 0x1f) then 6 @ 0x1e96 else 8 @ 0x1e6d>>'
p1263
aS'6 [11L] <const ptr 0x1fa2> <const ptr 0x1fa2> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_6#4 = 0x1fa2>>'
p1264
aS'4 [5L, 8L] <undetermined> <unsigned ranges: [<range: 0x0 to 0x1f>]> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_4#5 = [0x1e5a + (eax_3#3 << 2) + 0x56].d @ mem#1>>'
p1265
aS'8 [9L] <undetermined> <table: [0x1e] -> 0x1e, [0x1f] -> 0x26, [0x2] -> 0x44, [0x5] -> 0x4c> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_4#5 = [0x1e5a + (eax_3#3 << 2) + 0x56].d @ mem#1>>'
p1266
aS'8 [9L] <undetermined> <table: [0x1e] -> 0x1e, [0x1f] -> 0x26, [0x2] -> 0x44, [0x5] -> 0x4c> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_5#6 = eax_4#5 + 0x1e5a>>'
p1267
aS'9 [10L] <undetermined> <table: [0x1e] -> 0x1e78, [0x1f] -> 0x1e80, [0x2] -> 0x1e9e, [0x5] -> 0x1ea6> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_5#6 = eax_4#5 + 0x1e5a>>'
p1268
aS'9 [10L] <undetermined> <table: [0x1e] -> 0x1e78, [0x1f] -> 0x1e80, [0x2] -> 0x1e9e, [0x5] -> 0x1ea6> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: jump(eax_5#6 => 16 @ 0x1e78, 18 @ 0x1e80, 20 @ 0x1e9e, 22 @ 0x1ea6)>>'
p1269
aS'11 [11L] <undetermined> <in set([0x1f60, 0x1f80, 0x1fa2, 0x1f9e, 0x1f99])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_c_2#3 = eax_6#11>>'
p1270
aS'11 [12L] <undetermined> <in set([0x1f60, 0x1f80, 0x1fa2, 0x1f9e, 0x1f99])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: var_c_2#3 = eax_6#11>>'
p1271
aS'11 [12L] <undetermined> <in set([0x1f60, 0x1f80, 0x1fa2, 0x1f9e, 0x1f99])> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: mem#2 = 0x1f36(var_c_2#3) @ mem#1>>'
p1272
aS'13 [] <const 0x0> <const 0x0> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_7#12 = 0>>'
p1273
aS'15 [11L] <const ptr 0x1f80> <const ptr 0x1f80> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_6#7 = 0x1f80>>'
p1274
aS'17 [11L] <const ptr 0x1f60> <const ptr 0x1f60> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_6#8 = 0x1f60>>'
p1275
aS'19 [11L] <const ptr 0x1f9e> <const ptr 0x1f9e> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_6#9 = 0x1f9e>>'
p1276
aS'21 [11L] <const ptr 0x1f99> <const ptr 0x1f99> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: eax_6#10 = 0x1f99>>'
p1277
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1278
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1279
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _atoi() __tailcall>>'
p1280
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1281
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1282
aS'0 [] <undetermined> <undetermined> <bound method MediumLevelILInstruction.get_ssa_var_version of <il: return _puts() __tailcall>>'
p1283
as.